{
  
 
   "data": [
    {
      "isAction": true,
      "isRoot": false,
      "properties": { "client": "StorageManagementClient" },
      "createdAt": "2021-05-12T14:10:24.413Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": [
          "resourceGroupName",
          "accountName",
          "queueName",
          "options",
          "callback"
        ],
        "properties": {
          "options": {
            "description": "Optional Parameters.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "metadata": {
                "type": "object",
                "description": "A name-value pair that represents queue metadata.",
                "additionalProperties": { "type": "string" }
              },
              "onUploadProgress": {
                "type": "object",
                "description": "Callback which fires upon upload progress.",
                "additionalProperties": false
              },
              "onDownloadProgress": {
                "type": "object",
                "description": "Callback which fires upon download progress.",
                "additionalProperties": false
              },
              "abortSignal": {
                "description": "The signal which can be used to abort requests.",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "dispatchEvent": {
                    "type": "object",
                    "additionalProperties": false
                  },
                  "removeEventListener": {
                    "type": "object",
                    "additionalProperties": false
                  },
                  "onabort": {
                    "type": "object",
                    "additionalProperties": false
                  },
                  "aborted": { "type": "boolean" },
                  "addEventListener": {
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "aborted",
                  "addEventListener",
                  "dispatchEvent",
                  "onabort",
                  "removeEventListener"
                ]
              },
              "customHeaders": {
                "type": "object",
                "additionalProperties": { "type": "string" }
              },
              "timeout": {
                "type": "number",
                "description": "The number of milliseconds a request can take before automatically being terminated."
              }
            }
          },
          "resourceGroupName": { "type": "string" },
          "queueName": { "type": "string" },
          "accountName": { "type": "string" }
        },
        "required": ["resourceGroupName", "accountName", "queueName", "options"]
      },
      "outputSchema": {
        "description": "An interface representing StorageQueue.",
        "additionalProperties": false,
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the resource\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
          },
          "metadata": {
            "type": "object",
            "description": "A name-value pair that represents queue metadata.",
            "additionalProperties": { "type": "string" }
          },
          "approximateMessageCount": {
            "type": "number",
            "description": "Integer indicating an approximate number of messages in the queue. This number is not lower\nthan the actual number of messages in the queue, but could be higher.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
          },
          "id": {
            "type": "string",
            "description": "Fully qualified resource ID for the resource. Ex -\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
          },
          "type": {
            "type": "string",
            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or\n\"Microsoft.Storage/storageAccounts\"\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
          }
        }
      },
      "method": "create",
      "service": "storage",
      "displayName": "Queue",
      "active": true,
      "resourceType": "queue",
      "output": {
        "required": ["approximateMessageCount", "id", "name", "type"],
        "optional": []
      },
      "rowType": "API",
      "params": {
        "options": {
          "abortSignal": { "aborted": "required" },
          "timeout": "<optional>"
        },
        "resourceGroupName": "required",
        "queueName": "required",
        "accountName": "required"
      },
      "updatedAt": "2021-05-12T14:10:49.772Z",
      "_id": "fb6b3f43",
      "input": {
        "required": [
          "resourceGroupName",
          "accountName",
          "queueName",
          "options",
          "callback"
        ],
        "optional": []
      },
      "operationType": "CREATE",
      "displayService": "storage",
      "addonCount": 0,
      "relationCount": 6,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+283 -107"
    },
    {
      "isAction": true,
      "isRoot": false,
      "properties": { "client": "ComputeManagementClient" },
      "createdAt": "2021-05-12T14:10:07.899Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": [
          "resourceGroupName",
          "vmScaleSetName",
          "parameters",
          "options",
          "callback"
        ],
        "properties": {
          "vmScaleSetName": { "type": "string" },
          "parameters": {
            "description": "An interface representing VMScaleSetConvertToSinglePlacementGroupInput.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "activePlacementGroupId": {
                "type": "string",
                "description": "Id of the placement group in which you want future virtual machine instances to be placed. To\nquery placement group Id, please use Virtual Machine Scale Set VMs - Get API. If not provided,\nthe platform will choose one with maximum number of virtual machine instances."
              }
            }
          },
          "resourceGroupName": { "type": "string" }
        },
        "required": ["resourceGroupName", "vmScaleSetName", "parameters"]
      },
      "outputSchema": {},
      "method": "convertToSinglePlacementGroup",
      "service": "compute",
      "displayName": "Virtual Machine  Scale  Sets ",
      "active": true,
      "resourceType": "virtualMachineScaleSets",
      "output": { "required": [], "optional": [] },
      "rowType": "API",
      "params": {
        "vmScaleSetName": "required",
        "parameters": { "activePlacementGroupId": "<optional>" },
        "resourceGroupName": "required"
      },
      "updatedAt": "2021-05-12T14:10:32.398Z",
      "_id": "9008ccb9",
      "input": {
        "required": [
          "resourceGroupName",
          "vmScaleSetName",
          "parameters",
          "options",
          "callback"
        ],
        "optional": []
      },
      "operationType": "MODIFY",
      "displayService": "compute",
      "addonCount": 19,
      "relationCount": 6,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+500 -165"
    },
    {
      "isAction": true,
      "isRoot": false,
      "properties": { "client": "StorSimple8000SeriesManagementClient" },
      "createdAt": "2021-05-12T14:10:25.597Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": [
          "deviceName",
          "volumeContainerName",
          "volumeName",
          "parameters",
          "resourceGroupName",
          "managerName"
        ],
        "properties": {
          "resourceGroupName": { "type": "string" },
          "managerName": { "type": "string" },
          "deviceName": { "type": "string" },
          "parameters": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "volumeType": {
                "type": "string",
                "description": "Defines values for VolumeType.\nPossible values include: 'Tiered', 'Archival', 'LocallyPinned'",
                "enum": ["Archival", "LocallyPinned", "Tiered"]
              },
              "volumeContainerId": { "type": "string" },
              "operationStatus": {
                "type": "string",
                "description": "Defines values for OperationStatus.\nPossible values include: 'None', 'Updating', 'Deleting', 'Restoring'",
                "enum": ["Deleting", "None", "Restoring", "Updating"]
              },
              "sizeInBytes": { "type": "number" },
              "kind": {
                "type": "string",
                "description": "Defines values for Kind.\nPossible values include: 'Series8000'",
                "enum": ["Series8000"]
              },
              "type": { "type": "string" },
              "accessControlRecordIds": {
                "type": "array",
                "items": { "type": "string" }
              },
              "backupStatus": {
                "type": "string",
                "description": "Defines values for BackupStatus.\nPossible values include: 'Enabled', 'Disabled'",
                "enum": ["Disabled", "Enabled"]
              },
              "monitoringStatus": {
                "type": "string",
                "description": "Defines values for MonitoringStatus.\nPossible values include: 'Enabled', 'Disabled'",
                "enum": ["Disabled", "Enabled"]
              },
              "name": { "type": "string" },
              "volumeStatus": {
                "type": "string",
                "description": "Defines values for VolumeStatus.\nPossible values include: 'Online', 'Offline'",
                "enum": ["Offline", "Online"]
              },
              "id": { "type": "string" },
              "backupPolicyIds": {
                "type": "array",
                "items": { "type": "string" }
              }
            },
            "required": [
              "accessControlRecordIds",
              "monitoringStatus",
              "sizeInBytes",
              "volumeStatus",
              "volumeType"
            ]
          },
          "volumeContainerName": { "type": "string" },
          "volumeName": { "type": "string" }
        },
        "required": [
          "deviceName",
          "volumeContainerName",
          "volumeName",
          "parameters",
          "resourceGroupName",
          "managerName"
        ]
      },
      "outputSchema": {},
      "method": "beginCreateOrUpdate",
      "service": "storsimple8000series",
      "displayName": "Volumes",
      "active": true,
      "resourceType": "volumes",
      "output": { "required": [], "optional": [] },
      "rowType": "API",
      "params": {
        "resourceGroupName": "required",
        "managerName": "required",
        "deviceName": "required",
        "parameters": {
          "volumeType": "required",
          "volumeContainerId": "<optional>",
          "operationStatus": "<optional>",
          "sizeInBytes": "required",
          "kind": "<optional>",
          "type": "<optional>",
          "accessControlRecordIds": ["<optional>"],
          "backupStatus": "<optional>",
          "monitoringStatus": "required",
          "name": "<optional>",
          "volumeStatus": "required",
          "id": "<optional>",
          "backupPolicyIds": ["<optional>"]
        },
        "volumeContainerName": "required",
        "volumeName": "required"
      },
      "updatedAt": "2021-05-12T14:10:51.040Z",
      "_id": "4629122f",
      "input": {
        "required": [
          "deviceName",
          "volumeContainerName",
          "volumeName",
          "parameters",
          "resourceGroupName",
          "managerName"
        ],
        "optional": []
      },
      "operationType": "MODIFY",
      "displayService": "storsimple8000series",
      "addonCount": 5,
      "relationCount": 6,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+488 -135"
    },
    {
      "relations": [],
      "aliases": {},
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": {
        "type": "structure",
        "members": { "datasetImportJobArn": { "type": "string" } }
      },
      "method": "createDatasetImportJob",
      "displayName": "Create Dataset Import Job",
      "active": true,
      "rowType": "API",
      "params": {
        "jobName": "required",
        "datasetArn": "required",
        "dataSource": { "dataLocation": "<optional>" },
        "roleArn": "required"
      },
      "_id": "13b0c945",
      "input": {
        "required": ["jobName", "datasetArn", "dataSource", "roleArn"],
        "optional": ["dataSource.dataLocation"]
      },
      "areValidParams": true,
      "isAction": true,
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:54:21.402Z",
      "inputSchema": {
        "type": "structure",
        "required": ["jobName", "datasetArn", "dataSource", "roleArn"],
        "members": {
          "jobName": { "type": "string" },
          "datasetArn": { "type": "string" },
          "dataSource": {
            "type": "structure",
            "members": { "dataLocation": { "type": "string" } }
          },
          "roleArn": { "type": "string" }
        }
      },
      "historyKeys": [],
      "service": "Personalize",
      "resourceType": "PERSONALIZE_DATASET_IMPORT_JOB",
      "output": { "required": [], "optional": ["datasetImportJobArn"] },
      "updatedAt": "2021-07-29T07:55:05.740Z",
      "normalisations": [],
      "operationType": "CREATE",
      "displayService": "Personalize",
      "addonCount": 3,
      "relationCount": 2,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+386 -177"
    },
    {
      "isAction": false,
      "isRoot": false,
      "properties": { "client": "ManagementLockClient" },
      "createdAt": "2021-05-12T14:06:19.678Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": ["nextPageLink", "options", "callback"],
        "properties": { "nextPageLink": { "type": "string" } },
        "required": ["nextPageLink"]
      },
      "outputSchema": {
        "additionalProperties": false,
        "type": "array",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "items": {
          "description": "The lock information.",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the lock.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
            },
            "owners": {
              "type": "array",
              "description": "The owners of the lock.",
              "items": {
                "description": "Lock owner properties.",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "applicationId": {
                    "type": "string",
                    "description": "The application ID of the lock owner."
                  }
                }
              }
            },
            "notes": {
              "type": "string",
              "description": "Notes about the lock. Maximum of 512 characters."
            },
            "id": {
              "type": "string",
              "description": "The resource ID of the lock.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
            },
            "type": {
              "type": "string",
              "description": "The resource type of the lock - Microsoft.Authorization/locks.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
            },
            "level": {
              "type": "string",
              "description": "The level of the lock. Possible values are: NotSpecified, CanNotDelete, ReadOnly. CanNotDelete\nmeans authorized users are able to read and modify the resources, but not delete. ReadOnly\nmeans authorized users can only read from a resource, but they can't modify or delete it.\nPossible values include: 'NotSpecified', 'CanNotDelete', 'ReadOnly'",
              "enum": ["CanNotDelete", "NotSpecified", "ReadOnly"]
            }
          },
          "required": ["level"]
        }
      },
      "method": "listAtResourceLevelNext",
      "service": "locks",
      "displayName": "Management Locks ",
      "active": false,
      "resourceType": "managementLocks",
      "output": {
        "required": [
          "level",
          "notes",
          "owners.applicationId",
          "id",
          "type",
          "name"
        ],
        "optional": []
      },
      "rowType": "API",
      "params": { "nextPageLink": "required" },
      "updatedAt": "2021-05-12T14:06:45.377Z",
      "_id": "e1aa8e8f",
      "input": {
        "required": ["nextPageLink", "options", "callback"],
        "optional": []
      },
      "operationType": "DISCOVER",
      "displayService": "locks",
      "addonCount": 7,
      "relationCount": 19,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+363 -108"
    },
    {
      "isAction": true,
      "isRoot": false,
      "properties": { "package": "@google-cloud/iot" },
      "createdAt": "2021-08-18T07:24:00.409Z",
      "cloudProvider": "GCP",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": ["request"],
        "definitions": {},
        "properties": {
          "request": {
            "description": "Properties of a TestIamPermissionsRequest.",
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "properties": {
              "resource": {
                "type": ["string"],
                "description": "TestIamPermissionsRequest resource"
              },
              "permissions": {
                "anyOf": [{ "type": "array", "items": { "type": "string" } }],
                "description": "TestIamPermissionsRequest permissions"
              }
            }
          }
        },
        "required": []
      },
      "outputSchema": {
        "description": "Properties of a TestIamPermissionsResponse.",
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "definitions": {},
        "properties": {
          "permissions": {
            "anyOf": [{ "type": "array", "items": { "type": "string" } }],
            "description": "TestIamPermissionsResponse permissions"
          }
        }
      },
      "method": "testIamPermissions",
      "service": "iot",
      "displayName": "Test Iam Permission",
      "active": true,
      "resourceType": "DeviceManagerClient",
      "output": { "required": ["permissions"], "optional": [] },
      "rowType": "API",
      "params": {
        "request": { "resource": "<optional>", "permissions": ["<optional>"] }
      },
      "updatedAt": "2021-08-18T07:24:27.464Z",
      "_id": "d8e4c309",
      "displayResourceType": "Device Managers",
      "input": { "required": [], "optional": ["request"] },
      "operationType": "MODIFY",
      "displayService": "Internet of Things (IoT) Core",
      "addonCount": 7,
      "relationCount": 5,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+108 -169"
    },
    {
      "isAction": true,
      "isRoot": false,
      "properties": { "client": "DataFactoryManagementClient" },
      "createdAt": "2021-05-12T14:10:10.603Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "argumentOrder": [
          "resourceGroupName",
          "factoryName",
          "filterParameters",
          "options",
          "callback"
        ]
      },
      "outputSchema": {},
      "method": "queryByFactory",
      "service": "datafactory",
      "displayName": "Triggers",
      "active": true,
      "resourceType": "triggers",
      "output": { "required": [], "optional": [] },
      "rowType": "API",
      "params": {},
      "updatedAt": "2021-05-12T14:10:35.181Z",
      "_id": "d34469ac",
      "input": {
        "required": [
          "resourceGroupName",
          "factoryName",
          "filterParameters",
          "options",
          "callback"
        ],
        "optional": []
      },
      "operationType": "MODIFY",
      "displayService": "datafactory",
      "addonCount": 19,
      "relationCount": 9,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+330 -120"
    },
    {
      "relations": [],
      "aliases": {},
      "isDependent": true,
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": {
        "type": "structure",
        "members": {
          "resources": {
            "type": "list",
            "member": {
              "type": "structure",
              "members": {
                "resourceGroupArn": { "type": "string" },
                "creationTime": { "type": "timestamp" },
                "resourceShareArn": { "type": "string" },
                "lastUpdatedTime": { "type": "timestamp" },
                "arn": { "type": "string" },
                "type": { "type": "string" },
                "statusMessage": { "type": "string" },
                "status": { "type": "string" }
              }
            }
          },
          "nextToken": { "type": "string" }
        }
      },
      "method": "listPendingInvitationResources",
      "displayName": "Pending Invitation Resources",
      "active": true,
      "rowType": "API",
      "params": { "resourceShareInvitationArn": "required" },
      "_id": "6f9aabc8",
      "input": { "required": ["resourceShareInvitationArn"], "optional": [] },
      "areValidParams": true,
      "isAction": false,
      "primaryKeyField": "resources.resourceShareArn",
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:54:22.794Z",
      "inputSchema": {
        "type": "structure",
        "required": ["resourceShareInvitationArn"],
        "members": {
          "nextToken": { "type": "string" },
          "maxResults": { "type": "integer" },
          "resourceShareInvitationArn": { "type": "string" }
        }
      },
      "historyKeys": [],
      "service": "RAM",
      "resourceType": "RAM_PENDING_INVITATION_RESOURCES",
      "output": {
        "required": [],
        "optional": [
          "resources",
          "resources.arn",
          "resources.type",
          "resources.resourceShareArn",
          "resources.resourceGroupArn",
          "resources.status",
          "resources.statusMessage",
          "resources.creationTime",
          "resources.lastUpdatedTime"
        ]
      },
      "updatedAt": "2021-07-29T07:55:07.195Z",
      "normalisations": [],
      "operationType": "DISCOVER",
      "displayService": "RAM",
      "addonCount": 16,
      "relationCount": 4,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+160 -77"
    },
    {
      "linkedMethod": "describeSubnets",
      "relations": [
        {
          "rKey": "SubnetId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:EC2:Subnets:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "SubnetId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:Glue:DevEndpoints:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "VpcId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:DMS:ReplicationSubnetGroups:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "VpcId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:EC2:VpcClassicLink:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "VpcId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:EC2:VpcClassicLinkDnsSupport:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "VpcId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:EC2:Vpcs:${value}`",
          "enabled": true,
          "direction": "forward"
        },
        {
          "rKey": "VpcId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:RDS:DBClusterSnapshots:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "VpcId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:RDS:DBSnapshots:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "VpcId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:RDS:DBSubnetGroups:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "VpcId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:RDS:OptionGroups:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "Ipv6CidrBlockAssociationSet.AssociationId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:EC2:IamInstanceProfileAssociations:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "Ipv6CidrBlockAssociationSet.AssociationId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:SSM:Association:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "Ipv6CidrBlockAssociationSet.AssociationId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:SSM:AssociationVersions:${value}`",
          "enabled": false,
          "direction": "forward"
        }
      ],
      "aliases": {},
      "isDependent": false,
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": {
        "type": "structure",
        "members": {
          "NextToken": { "type": "string" },
          "Subnets": {
            "type": "list",
            "member": {
              "type": "structure",
              "members": {
                "MapPublicIpOnLaunch": { "type": "boolean" },
                "AvailableIpAddressCount": { "type": "integer" },
                "DefaultForAz": { "type": "boolean" },
                "AvailabilityZoneId": { "type": "string" },
                "AvailabilityZone": { "type": "string" },
                "CidrBlock": { "type": "string" },
                "SubnetId": { "type": "string" },
                "AssignIpv6AddressOnCreation": { "type": "boolean" },
                "VpcId": { "type": "string" },
                "OwnerId": { "type": "string" },
                "State": { "type": "string" },
                "SubnetArn": { "type": "string" },
                "Ipv6CidrBlockAssociationSet": {
                  "type": "list",
                  "member": {
                    "type": "structure",
                    "members": {
                      "Ipv6CidrBlock": { "type": "string" },
                      "AssociationId": { "type": "string" },
                      "Ipv6CidrBlockState": {
                        "type": "structure",
                        "members": {
                          "State": { "type": "string" },
                          "StatusMessage": { "type": "string" }
                        }
                      }
                    }
                  }
                },
                "Tags": {
                  "type": "list",
                  "member": {
                    "type": "structure",
                    "members": {
                      "Value": { "type": "string" },
                      "Key": { "type": "string" }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "method": "describeLoadBalancers",
      "relationType": "HAS",
      "displayName": "Subnets",
      "linkedService": "EC2",
      "active": true,
      "rowType": "RELATION",
      "params": {
        "SubnetIds": ["<optional1>", "<optional2>"],
        "Filters": [
          { "Values": ["<optional1>", "<optional2>"], "Name": "<optional>" }
        ]
      },
      "_id": "76f5536d",
      "input": {
        "required": [],
        "optional": ["Filters", "SubnetIds", "Filters.Name", "Filters.Values"]
      },
      "areValidParams": true,
      "isAction": false,
      "primaryKeyField": "Subnets.SubnetId",
      "isRoot": true,
      "customDef": {},
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:54:10.457Z",
      "inputSchema": {
        "type": "structure",
        "members": {
          "DryRun": { "type": "boolean" },
          "Filters": {
            "type": "list",
            "member": {
              "type": "structure",
              "members": {
                "Values": { "type": "list", "member": { "type": "string" } },
                "Name": { "type": "string" }
              }
            }
          },
          "NextToken": { "type": "string" },
          "SubnetIds": { "type": "list", "member": { "type": "string" } },
          "MaxResults": { "type": "integer" }
        }
      },
      "historyKeys": [],
      "service": "ELBv2",
      "resourceType": "ELBV2_LOAD_BALANCERS",
      "linkedResourceType": "EC2_SUBNETS",
      "output": {
        "required": [],
        "optional": [
          "Subnets",
          "Subnets.AvailabilityZone",
          "Subnets.AvailabilityZoneId",
          "Subnets.AvailableIpAddressCount",
          "Subnets.CidrBlock",
          "Subnets.DefaultForAz",
          "Subnets.MapPublicIpOnLaunch",
          "Subnets.State",
          "Subnets.SubnetId",
          "Subnets.VpcId",
          "Subnets.OwnerId",
          "Subnets.AssignIpv6AddressOnCreation",
          "Subnets.Ipv6CidrBlockAssociationSet",
          "Subnets.Tags",
          "Subnets.SubnetArn",
          "Subnets.Ipv6CidrBlockAssociationSet.AssociationId",
          "Subnets.Ipv6CidrBlockAssociationSet.Ipv6CidrBlock",
          "Subnets.Ipv6CidrBlockAssociationSet.Ipv6CidrBlockState",
          "Subnets.Ipv6CidrBlockAssociationSet.Ipv6CidrBlockState.State",
          "Subnets.Ipv6CidrBlockAssociationSet.Ipv6CidrBlockState.StatusMessage",
          "Subnets.Tags.Key",
          "Subnets.Tags.Value"
        ]
      },
      "updatedAt": "2021-07-29T07:54:52.544Z",
      "normalisations": [],
      "operationType": "DISCOVER",
      "displayService": "EC2",
      "addonCount": 17,
      "relationCount": 19,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+396 -194"
    },
    {
      "linkedMethod": "listByServer",
      "isAction": false,
      "isRoot": false,
      "properties": {
        "addOnConfidence": 0.9090909090909091,
        "client": "SqlManagementClient"
      },
      "createdAt": "2021-08-18T10:31:51.177Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": ["resourceGroupName", "serverName"],
        "properties": {
          "serverName": { "type": "string" },
          "resourceGroupName": { "type": "string" }
        },
        "required": ["resourceGroupName", "serverName"]
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/ServerVulnerabilityAssessmentListResult",
        "definitions": {
          "ServerVulnerabilityAssessment": {
            "description": "A server vulnerability assessment.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "storageContainerSasKey": {
                "type": "string",
                "description": "A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required."
              },
              "storageAccountAccessKey": {
                "type": "string",
                "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required."
              },
              "name": {
                "type": "string",
                "description": "Resource name.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
              },
              "id": {
                "type": "string",
                "description": "Resource ID.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
              },
              "type": {
                "type": "string",
                "description": "Resource type.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
              },
              "storageContainerPath": {
                "type": "string",
                "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/)."
              },
              "recurringScans": {
                "$ref": "#/definitions/VulnerabilityAssessmentRecurringScansProperties",
                "description": "The recurring scans settings"
              }
            },
            "required": ["storageContainerPath"]
          },
          "VulnerabilityAssessmentRecurringScansProperties": {
            "description": "Properties of a Vulnerability Assessment recurring scans.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "emails": {
                "type": "array",
                "items": { "type": "string" },
                "description": "Specifies an array of e-mail addresses to which the scan notification is sent."
              },
              "emailSubscriptionAdmins": {
                "type": "boolean",
                "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators. Default value: true."
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Recurring scans state."
              }
            }
          },
          "ServerVulnerabilityAssessmentListResult": {
            "additionalProperties": {
              "$ref": "#/definitions/ServerVulnerabilityAssessment"
            },
            "type": "object",
            "properties": {
              "length": { "type": "number" },
              "nextLink": {
                "type": "string",
                "description": "Link to retrieve next page of results.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
              }
            },
            "required": ["length"]
          }
        }
      },
      "method": "list",
      "service": "sql",
      "displayName": "Server Vulnerability  Assessments /listByServer",
      "linkedService": "sql",
      "active": true,
      "resourceType": "servers",
      "linkedResourceType": "serverVulnerabilityAssessments",
      "output": {
        "required": [
          "$schema",
          "definitions.ServerVulnerabilityAssessmentListResult.type",
          "definitions.ServerVulnerabilityAssessmentListResult.properties.length.type",
          "definitions.ServerVulnerabilityAssessmentListResult.properties.nextLink.type",
          "definitions.ServerVulnerabilityAssessmentListResult.properties.nextLink.description",
          "definitions.ServerVulnerabilityAssessmentListResult.additionalProperties.$ref",
          "definitions.ServerVulnerabilityAssessmentListResult.required",
          "definitions.ServerVulnerabilityAssessment.type",
          "definitions.ServerVulnerabilityAssessment.properties.id.type",
          "definitions.ServerVulnerabilityAssessment.properties.id.description",
          "definitions.ServerVulnerabilityAssessment.properties.name.type",
          "definitions.ServerVulnerabilityAssessment.properties.name.description",
          "definitions.ServerVulnerabilityAssessment.properties.type.type",
          "definitions.ServerVulnerabilityAssessment.properties.type.description",
          "definitions.ServerVulnerabilityAssessment.properties.storageContainerPath.type",
          "definitions.ServerVulnerabilityAssessment.properties.storageContainerPath.description",
          "definitions.ServerVulnerabilityAssessment.properties.storageContainerSasKey.type",
          "definitions.ServerVulnerabilityAssessment.properties.storageContainerSasKey.description",
          "definitions.ServerVulnerabilityAssessment.properties.storageAccountAccessKey.type",
          "definitions.ServerVulnerabilityAssessment.properties.storageAccountAccessKey.description",
          "definitions.ServerVulnerabilityAssessment.properties.recurringScans.$ref",
          "definitions.ServerVulnerabilityAssessment.properties.recurringScans.description",
          "definitions.ServerVulnerabilityAssessment.required",
          "definitions.ServerVulnerabilityAssessment.additionalProperties",
          "definitions.ServerVulnerabilityAssessment.description",
          "definitions.VulnerabilityAssessmentRecurringScansProperties.type",
          "definitions.VulnerabilityAssessmentRecurringScansProperties.properties.isEnabled.type",
          "definitions.VulnerabilityAssessmentRecurringScansProperties.properties.isEnabled.description",
          "definitions.VulnerabilityAssessmentRecurringScansProperties.properties.emailSubscriptionAdmins.type",
          "definitions.VulnerabilityAssessmentRecurringScansProperties.properties.emailSubscriptionAdmins.description",
          "definitions.VulnerabilityAssessmentRecurringScansProperties.properties.emails.type",
          "definitions.VulnerabilityAssessmentRecurringScansProperties.properties.emails.items.type",
          "definitions.VulnerabilityAssessmentRecurringScansProperties.properties.emails.description",
          "definitions.VulnerabilityAssessmentRecurringScansProperties.additionalProperties",
          "definitions.VulnerabilityAssessmentRecurringScansProperties.description"
        ],
        "optional": []
      },
      "rowType": "ADDON",
      "params": { "serverName": "obj.name" },
      "updatedAt": "2021-08-18T10:31:51.516Z",
      "_id": "f7b3c494",
      "input": {
        "required": ["resourceGroupName", "serverName"],
        "optional": []
      },
      "operationType": "DISCOVER",
      "displayService": "sql",
      "addonCount": 5,
      "relationCount": 13,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+338 -193"
    },
    {
      "relations": [],
      "aliases": {},
      "isDependent": true,
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": { "type": "structure", "members": { "type": "string" } },
      "method": "deleteUser",
      "displayName": "Delete User",
      "active": true,
      "rowType": "API",
      "params": { "UserName": "required", "AuthenticationType": "required" },
      "_id": "cdd42bdb",
      "input": {
        "required": ["UserName", "AuthenticationType"],
        "optional": []
      },
      "areValidParams": true,
      "isAction": true,
      "isRoot": false,
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:53:56.252Z",
      "inputSchema": {
        "type": "structure",
        "required": ["UserName", "AuthenticationType"],
        "members": {
          "UserName": { "type": "string", "sensitive": true },
          "AuthenticationType": { "type": "string" }
        }
      },
      "historyKeys": [],
      "service": "AppStream",
      "resourceType": "APPSTREAM_USER",
      "output": { "required": [], "optional": [] },
      "updatedAt": "2021-07-29T07:54:36.900Z",
      "normalisations": [],
      "operationType": "DELETE",
      "displayService": "AppStream",
      "addonCount": 10,
      "relationCount": 16,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+56 -191"
    },
    {
      "linkedMethod": "list",
      "isAction": false,
      "isRoot": false,
      "properties": {
        "rating": 0.9473684210526315,
        "client": "NetworkManagementClient",
        "bidirectional": true,
        "srcKey": "virtualHub",
        "srcRef": "virtualHub"
      },
      "createdAt": "2021-08-18T11:21:16.842Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": [],
        "properties": {},
        "required": []
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$ref": "#/definitions/ListVirtualHubsResult",
        "definitions": {
          "ProvisioningState": {
            "type": "string",
            "description": "Defines values for ProvisioningState. Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'",
            "enum": ["Succeeded", "Updating", "Deleting", "Failed"]
          },
          "SubResource": {
            "description": "Reference to another subresource.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "id": { "type": "string", "description": "Resource ID." }
            }
          },
          "VirtualHubRoute": {
            "description": "VirtualHub route.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "addressPrefixes": {
                "type": "array",
                "items": { "type": "string" },
                "description": "List of all addressPrefixes."
              },
              "nextHopIpAddress": {
                "type": "string",
                "description": "NextHop ip address."
              }
            }
          },
          "VirtualHubRouteTable": {
            "description": "VirtualHub route table.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "routes": {
                "type": "array",
                "items": { "$ref": "#/definitions/VirtualHubRoute" },
                "description": "List of all routes."
              }
            }
          },
          "VirtualHubRouteTableV2": {
            "description": "VirtualHubRouteTableV2 Resource.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
              },
              "routes": {
                "type": "array",
                "items": { "$ref": "#/definitions/VirtualHubRouteV2" },
                "description": "List of all routes."
              },
              "etag": {
                "type": "string",
                "description": "A unique read-only string that changes whenever the resource is updated.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
              },
              "id": { "type": "string", "description": "Resource ID." },
              "provisioningState": {
                "$ref": "#/definitions/ProvisioningState",
                "description": "The provisioning state of the virtual hub route table v2 resource. Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
              },
              "attachedConnections": {
                "type": "array",
                "items": { "type": "string" },
                "description": "List of all connections attached to this route table v2."
              }
            }
          },
          "VirtualHub": {
            "description": "VirtualHub Resource.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "routingState": {
                "$ref": "#/definitions/RoutingState",
                "description": "The routing state. Possible values include: 'None', 'Provisioned', 'Provisioning', 'Failed'"
              },
              "routeTable": {
                "$ref": "#/definitions/VirtualHubRouteTable",
                "description": "The routeTable associated with this virtual hub."
              },
              "bgpConnections": {
                "type": "array",
                "items": { "$ref": "#/definitions/SubResource" },
                "description": "List of references to Bgp Connections.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
              },
              "virtualRouterAsn": {
                "type": "number",
                "description": "VirtualRouter ASN."
              },
              "addressPrefix": {
                "type": "string",
                "description": "Address-prefix for this VirtualHub."
              },
              "securityPartnerProvider": {
                "$ref": "#/definitions/SubResource",
                "description": "The securityPartnerProvider associated with this VirtualHub."
              },
              "type": {
                "type": "string",
                "description": "Resource type.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
              },
              "vpnGateway": {
                "$ref": "#/definitions/SubResource",
                "description": "The VpnGateway associated with this VirtualHub."
              },
              "expressRouteGateway": {
                "$ref": "#/definitions/SubResource",
                "description": "The expressRouteGateway associated with this VirtualHub."
              },
              "ipConfigurations": {
                "type": "array",
                "items": { "$ref": "#/definitions/SubResource" },
                "description": "List of references to IpConfigurations.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
              },
              "p2SVpnGateway": {
                "$ref": "#/definitions/SubResource",
                "description": "The P2SVpnGateway associated with this VirtualHub."
              },
              "id": { "type": "string", "description": "Resource ID." },
              "securityProviderName": {
                "type": "string",
                "description": "The Security Provider name."
              },
              "virtualHubRouteTableV2s": {
                "type": "array",
                "items": { "$ref": "#/definitions/VirtualHubRouteTableV2" },
                "description": "List of all virtual hub route table v2s associated with this VirtualHub."
              },
              "sku": {
                "type": "string",
                "description": "The sku of this VirtualHub."
              },
              "provisioningState": {
                "$ref": "#/definitions/ProvisioningState",
                "description": "The provisioning state of the virtual hub resource. Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
              },
              "virtualWan": {
                "$ref": "#/definitions/SubResource",
                "description": "The VirtualWAN to which the VirtualHub belongs."
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": { "type": "string" }
              },
              "azureFirewall": {
                "$ref": "#/definitions/SubResource",
                "description": "The azureFirewall associated with this VirtualHub."
              },
              "virtualRouterIps": {
                "type": "array",
                "items": { "type": "string" },
                "description": "VirtualRouter IPs."
              },
              "name": {
                "type": "string",
                "description": "Resource name.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
              },
              "allowBranchToBranchTraffic": {
                "type": "boolean",
                "description": "Flag to control transit for VirtualRouter hub."
              },
              "location": {
                "type": "string",
                "description": "Resource location."
              },
              "etag": {
                "type": "string",
                "description": "A unique read-only string that changes whenever the resource is updated.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
              }
            }
          },
          "VirtualHubRouteV2": {
            "description": "VirtualHubRouteTableV2 route.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "destinationType": {
                "type": "string",
                "description": "The type of destinations."
              },
              "nextHops": {
                "type": "array",
                "items": { "type": "string" },
                "description": "NextHops ip address."
              },
              "destinations": {
                "type": "array",
                "items": { "type": "string" },
                "description": "List of all destinations."
              },
              "nextHopType": {
                "type": "string",
                "description": "The type of next hops."
              }
            }
          },
          "RoutingState": {
            "type": "string",
            "description": "Defines values for RoutingState. Possible values include: 'None', 'Provisioned', 'Provisioning', 'Failed'",
            "enum": ["None", "Provisioned", "Provisioning", "Failed"]
          },
          "ListVirtualHubsResult": {
            "additionalProperties": { "$ref": "#/definitions/VirtualHub" },
            "type": "object",
            "properties": {
              "length": { "type": "number" },
              "nextLink": {
                "type": "string",
                "description": "URL to get the next set of operation list results if there are any."
              }
            },
            "required": ["length"]
          }
        }
      },
      "method": "list",
      "service": "network",
      "displayName": "Virtual Hubs /list",
      "linkedService": "network",
      "active": true,
      "resourceType": "vpnGateways",
      "linkedResourceType": "virtualHubs",
      "output": {
        "required": [
          "$schema",
          "definitions.ListVirtualHubsResult.type",
          "definitions.ListVirtualHubsResult.properties.length.type",
          "definitions.ListVirtualHubsResult.properties.nextLink.type",
          "definitions.ListVirtualHubsResult.properties.nextLink.description",
          "definitions.ListVirtualHubsResult.additionalProperties.$ref",
          "definitions.ListVirtualHubsResult.required",
          "definitions.VirtualHub.type",
          "definitions.VirtualHub.properties.id.type",
          "definitions.VirtualHub.properties.id.description",
          "definitions.VirtualHub.properties.name.type",
          "definitions.VirtualHub.properties.name.description",
          "definitions.VirtualHub.properties.type.type",
          "definitions.VirtualHub.properties.type.description",
          "definitions.VirtualHub.properties.location.type",
          "definitions.VirtualHub.properties.location.description",
          "definitions.VirtualHub.properties.tags.type",
          "definitions.VirtualHub.properties.tags.additionalProperties.type",
          "definitions.VirtualHub.properties.tags.description",
          "definitions.VirtualHub.properties.virtualWan.$ref",
          "definitions.VirtualHub.properties.virtualWan.description",
          "definitions.VirtualHub.properties.vpnGateway.$ref",
          "definitions.VirtualHub.properties.vpnGateway.description",
          "definitions.VirtualHub.properties.pVpnGateway.$ref",
          "definitions.VirtualHub.properties.pVpnGateway.description",
          "definitions.VirtualHub.properties.expressRouteGateway.$ref",
          "definitions.VirtualHub.properties.expressRouteGateway.description",
          "definitions.VirtualHub.properties.azureFirewall.$ref",
          "definitions.VirtualHub.properties.azureFirewall.description",
          "definitions.VirtualHub.properties.securityPartnerProvider.$ref",
          "definitions.VirtualHub.properties.securityPartnerProvider.description",
          "definitions.VirtualHub.properties.addressPrefix.type",
          "definitions.VirtualHub.properties.addressPrefix.description",
          "definitions.VirtualHub.properties.routeTable.$ref",
          "definitions.VirtualHub.properties.routeTable.description",
          "definitions.VirtualHub.properties.provisioningState.$ref",
          "definitions.VirtualHub.properties.provisioningState.description",
          "definitions.VirtualHub.properties.securityProviderName.type",
          "definitions.VirtualHub.properties.securityProviderName.description",
          "definitions.VirtualHub.properties.virtualHubRouteTableV.type",
          "definitions.VirtualHub.properties.virtualHubRouteTableV.items.$ref",
          "definitions.VirtualHub.properties.virtualHubRouteTableV.description",
          "definitions.VirtualHub.properties.sku.type",
          "definitions.VirtualHub.properties.sku.description",
          "definitions.VirtualHub.properties.routingState.$ref",
          "definitions.VirtualHub.properties.routingState.description",
          "definitions.VirtualHub.properties.bgpConnections.type",
          "definitions.VirtualHub.properties.bgpConnections.items.$ref",
          "definitions.VirtualHub.properties.bgpConnections.description",
          "definitions.VirtualHub.properties.ipConfigurations.type",
          "definitions.VirtualHub.properties.ipConfigurations.items.$ref",
          "definitions.VirtualHub.properties.ipConfigurations.description",
          "definitions.VirtualHub.properties.virtualRouterAsn.type",
          "definitions.VirtualHub.properties.virtualRouterAsn.description",
          "definitions.VirtualHub.properties.virtualRouterIps.type",
          "definitions.VirtualHub.properties.virtualRouterIps.items.type",
          "definitions.VirtualHub.properties.virtualRouterIps.description",
          "definitions.VirtualHub.properties.allowBranchToBranchTraffic.type",
          "definitions.VirtualHub.properties.allowBranchToBranchTraffic.description",
          "definitions.VirtualHub.properties.etag.type",
          "definitions.VirtualHub.properties.etag.description",
          "definitions.VirtualHub.additionalProperties",
          "definitions.VirtualHub.description",
          "definitions.SubResource.type",
          "definitions.SubResource.properties.id.type",
          "definitions.SubResource.properties.id.description",
          "definitions.SubResource.additionalProperties",
          "definitions.SubResource.description",
          "definitions.VirtualHubRouteTable.type",
          "definitions.VirtualHubRouteTable.properties.routes.type",
          "definitions.VirtualHubRouteTable.properties.routes.items.$ref",
          "definitions.VirtualHubRouteTable.properties.routes.description",
          "definitions.VirtualHubRouteTable.additionalProperties",
          "definitions.VirtualHubRouteTable.description",
          "definitions.VirtualHubRoute.type",
          "definitions.VirtualHubRoute.properties.addressPrefixes.type",
          "definitions.VirtualHubRoute.properties.addressPrefixes.items.type",
          "definitions.VirtualHubRoute.properties.addressPrefixes.description",
          "definitions.VirtualHubRoute.properties.nextHopIpAddress.type",
          "definitions.VirtualHubRoute.properties.nextHopIpAddress.description",
          "definitions.VirtualHubRoute.additionalProperties",
          "definitions.VirtualHubRoute.description",
          "definitions.ProvisioningState.type",
          "definitions.ProvisioningState.enum",
          "definitions.ProvisioningState.enum",
          "definitions.ProvisioningState.enum",
          "definitions.ProvisioningState.enum",
          "definitions.ProvisioningState.description",
          "definitions.VirtualHubRouteTableVtype",
          "definitions.VirtualHubRouteTableVproperties.id.type",
          "definitions.VirtualHubRouteTableVproperties.id.description",
          "definitions.VirtualHubRouteTableVproperties.routes.type",
          "definitions.VirtualHubRouteTableVproperties.routes.items.$ref",
          "definitions.VirtualHubRouteTableVproperties.routes.description",
          "definitions.VirtualHubRouteTableVproperties.attachedConnections.type",
          "definitions.VirtualHubRouteTableVproperties.attachedConnections.items.type",
          "definitions.VirtualHubRouteTableVproperties.attachedConnections.description",
          "definitions.VirtualHubRouteTableVproperties.provisioningState.$ref",
          "definitions.VirtualHubRouteTableVproperties.provisioningState.description",
          "definitions.VirtualHubRouteTableVproperties.name.type",
          "definitions.VirtualHubRouteTableVproperties.name.description",
          "definitions.VirtualHubRouteTableVproperties.etag.type",
          "definitions.VirtualHubRouteTableVproperties.etag.description",
          "definitions.VirtualHubRouteTableVadditionalProperties",
          "definitions.VirtualHubRouteTableVdescription",
          "definitions.VirtualHubRouteVtype",
          "definitions.VirtualHubRouteVproperties.destinationType.type",
          "definitions.VirtualHubRouteVproperties.destinationType.description",
          "definitions.VirtualHubRouteVproperties.destinations.type",
          "definitions.VirtualHubRouteVproperties.destinations.items.type",
          "definitions.VirtualHubRouteVproperties.destinations.description",
          "definitions.VirtualHubRouteVproperties.nextHopType.type",
          "definitions.VirtualHubRouteVproperties.nextHopType.description",
          "definitions.VirtualHubRouteVproperties.nextHops.type",
          "definitions.VirtualHubRouteVproperties.nextHops.items.type",
          "definitions.VirtualHubRouteVproperties.nextHops.description",
          "definitions.VirtualHubRouteVadditionalProperties",
          "definitions.VirtualHubRouteVdescription",
          "definitions.RoutingState.type",
          "definitions.RoutingState.enum",
          "definitions.RoutingState.enum",
          "definitions.RoutingState.enum",
          "definitions.RoutingState.enum",
          "definitions.RoutingState.description"
        ],
        "optional": []
      },
      "rowType": "RELATION",
      "params": {},
      "updatedAt": "2021-08-18T11:21:17.116Z",
      "_id": "2be94160",
      "input": { "required": [], "optional": [] },
      "operationType": "DISCOVER",
      "displayService": "network",
      "addonCount": 14,
      "relationCount": 7,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+280 -30"
    },
    {
      "relations": [],
      "aliases": {},
      "isDependent": true,
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": {},
      "method": "updateAccessKey",
      "displayName": "Update Access Key",
      "active": true,
      "rowType": "API",
      "params": {
        "Status": "required",
        "AccessKeyId": "required",
        "UserName": "<optional>"
      },
      "_id": "7470b008",
      "input": {
        "required": ["AccessKeyId", "Status"],
        "optional": ["UserName"]
      },
      "areValidParams": true,
      "isAction": true,
      "isRoot": false,
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:54:13.896Z",
      "inputSchema": {
        "type": "structure",
        "required": ["AccessKeyId", "Status"],
        "members": {
          "Status": { "type": "string" },
          "AccessKeyId": { "type": "string" },
          "UserName": { "type": "string" }
        }
      },
      "historyKeys": [],
      "service": "IAM",
      "resourceType": "IAM_ACCESS_KEY",
      "output": { "required": [], "optional": [] },
      "updatedAt": "2021-07-29T07:54:56.360Z",
      "normalisations": [],
      "operationType": "MODIFY",
      "displayService": "IAM",
      "addonCount": 9,
      "relationCount": 13,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+263 -127"
    },
    {
      "relations": [],
      "aliases": {},
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": {
        "type": "structure",
        "members": {
          "Status": { "type": "string" },
          "ErrorMessage": { "type": "string" },
          "S3Location": { "type": "string" }
        }
      },
      "method": "describeReportCreation",
      "displayName": "Report Creation",
      "active": true,
      "rowType": "API",
      "params": {},
      "_id": "e74629e9",
      "input": { "required": [], "optional": [] },
      "areValidParams": true,
      "isAction": false,
      "isRoot": true,
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:54:24.221Z",
      "inputSchema": { "type": "structure", "members": { "type": "string" } },
      "historyKeys": [],
      "service": "ResourceGroupsTaggingAPI",
      "resourceType": "RESOURCEGROUPSTAGGINGAPI_REPORT_CREATION",
      "output": {
        "required": [],
        "optional": ["Status", "S3Location", "ErrorMessage"]
      },
      "updatedAt": "2021-07-29T07:55:08.641Z",
      "normalisations": [],
      "operationType": "DISCOVER",
      "displayService": "ResourceGroupsTaggingAPI",
      "addonCount": 5,
      "relationCount": 19,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+470 -54"
    },
    {
      "relations": [],
      "aliases": {},
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": { "type": "structure", "members": { "type": "string" } },
      "method": "updateComponentConfiguration",
      "displayName": "Update Component Configuration",
      "active": true,
      "rowType": "API",
      "params": {
        "ComponentConfiguration": "<optional>",
        "ComponentName": "required",
        "Monitor": "<optional>",
        "Tier": "<optional>",
        "ResourceGroupName": "required"
      },
      "_id": "b1d6a845",
      "input": {
        "required": ["ResourceGroupName", "ComponentName"],
        "optional": ["Monitor", "Tier", "ComponentConfiguration"]
      },
      "areValidParams": true,
      "isAction": true,
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:53:55.903Z",
      "inputSchema": {
        "type": "structure",
        "required": ["ResourceGroupName", "ComponentName"],
        "members": {
          "ComponentConfiguration": { "type": "string" },
          "ComponentName": { "type": "string" },
          "Monitor": { "type": "boolean" },
          "Tier": { "type": "string" },
          "ResourceGroupName": { "type": "string" }
        }
      },
      "historyKeys": [],
      "service": "ApplicationInsights",
      "resourceType": "APPLICATIONINSIGHTS_COMPONENT_CONFIGURATION",
      "output": { "required": [], "optional": [] },
      "updatedAt": "2021-07-29T07:54:36.515Z",
      "normalisations": [],
      "operationType": "MODIFY",
      "displayService": "ApplicationInsights",
      "addonCount": 9,
      "relationCount": 10,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+183 -52"
    },
    {
      "relations": [],
      "aliases": {},
      "isDependent": false,
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": {
        "type": "structure",
        "members": {
          "securityProfileIdentifiers": {
            "type": "list",
            "member": {
              "type": "structure",
              "required": ["name", "arn"],
              "members": {
                "name": { "type": "string" },
                "arn": { "type": "string" }
              }
            }
          },
          "nextToken": { "type": "string" }
        }
      },
      "method": "listSecurityProfiles",
      "displayName": "Security Profiles",
      "active": true,
      "rowType": "API",
      "params": {},
      "_id": "d3738cb0",
      "input": { "required": [], "optional": [] },
      "areValidParams": true,
      "isAction": false,
      "primaryKeyField": "securityProfileIdentifiers.arn",
      "isRoot": true,
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:54:16.248Z",
      "inputSchema": {
        "type": "structure",
        "members": {
          "nextToken": { "location": "querystring" },
          "maxResults": { "type": "integer", "location": "querystring" }
        }
      },
      "historyKeys": [],
      "service": "Iot",
      "resourceType": "IOT_SECURITY_PROFILES",
      "output": {
        "required": [
          "securityProfileIdentifiers.name",
          "securityProfileIdentifiers.arn"
        ],
        "optional": ["securityProfileIdentifiers"]
      },
      "updatedAt": "2021-07-29T07:54:59.147Z",
      "normalisations": [],
      "operationType": "DISCOVER",
      "displayService": "Iot",
      "addonCount": 10,
      "relationCount": 14,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+59 -194"
    },
    {
      "relations": [],
      "aliases": {},
      "isDependent": true,
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": {
        "type": "structure",
        "members": {
          "repository": {
            "type": "structure",
            "members": {
              "repositoryUri": { "type": "string" },
              "registryId": { "type": "string" },
              "createdAt": { "type": "timestamp" },
              "repositoryArn": { "type": "string" },
              "repositoryName": { "type": "string" },
              "imageTagMutability": { "type": "string" }
            }
          }
        }
      },
      "method": "deleteRepository",
      "displayName": "Delete Repository",
      "active": true,
      "rowType": "API",
      "params": {
        "repositoryName": "required",
        "registryId": "<optional>",
        "force": "<optional>"
      },
      "_id": "48fc3673",
      "input": {
        "required": ["repositoryName"],
        "optional": ["registryId", "force"]
      },
      "areValidParams": true,
      "isAction": true,
      "isRoot": false,
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:54:09.227Z",
      "inputSchema": {
        "type": "structure",
        "required": ["repositoryName"],
        "members": {
          "repositoryName": { "type": "string" },
          "registryId": { "type": "string" },
          "force": { "type": "boolean" }
        }
      },
      "historyKeys": [],
      "service": "ECR",
      "resourceType": "ECR_REPOSITORY",
      "output": {
        "required": [],
        "optional": [
          "repository",
          "repository.repositoryArn",
          "repository.registryId",
          "repository.repositoryName",
          "repository.repositoryUri",
          "repository.createdAt"
        ]
      },
      "updatedAt": "2021-07-29T07:54:51.257Z",
      "normalisations": [],
      "operationType": "DELETE",
      "displayService": "ECR",
      "addonCount": 15,
      "relationCount": 1,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+241 -138"
    },
    {
      "isAction": true,
      "isRoot": false,
      "properties": { "client": "NetworkManagementClient" },
      "createdAt": "2021-05-12T14:10:17.972Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": ["resourceGroupName", "publicIpPrefixName"],
        "properties": {
          "resourceGroupName": { "type": "string" },
          "publicIpPrefixName": { "type": "string" }
        },
        "required": ["resourceGroupName", "publicIpPrefixName"]
      },
      "outputSchema": {},
      "method": "deleteMethod",
      "service": "network",
      "displayName": "PublicIP Prefixes ",
      "active": true,
      "resourceType": "publicIPPrefixes",
      "output": { "required": [], "optional": [] },
      "rowType": "API",
      "params": {
        "resourceGroupName": "required",
        "publicIpPrefixName": "required"
      },
      "updatedAt": "2021-05-12T14:10:43.183Z",
      "_id": "2dddac32",
      "input": {
        "required": ["resourceGroupName", "publicIpPrefixName"],
        "optional": []
      },
      "operationType": "DELETE",
      "displayService": "network",
      "addonCount": 5,
      "relationCount": 13,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+242 -94"
    },
    {
      "isAction": true,
      "isRoot": false,
      "properties": { "client": "IotDpsClient" },
      "createdAt": "2021-05-12T14:10:11.451Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": [
          "resourceGroupName",
          "provisioningServiceName",
          "provisioningServiceTags"
        ],
        "properties": {
          "provisioningServiceName": { "type": "string" },
          "provisioningServiceTags": {
            "type": "object",
            "properties": {
              "tags": {
                "type": "object",
                "additionalProperties": { "type": "string" }
              }
            },
            "additionalProperties": false
          },
          "resourceGroupName": { "type": "string" }
        },
        "required": [
          "resourceGroupName",
          "provisioningServiceName",
          "provisioningServiceTags"
        ]
      },
      "outputSchema": {},
      "method": "beginUpdate",
      "service": "deviceprovisioningservices",
      "displayName": "Iot Dps  Resource ",
      "active": true,
      "resourceType": "iotDpsResource",
      "output": { "required": [], "optional": [] },
      "rowType": "API",
      "params": {
        "provisioningServiceName": "required",
        "resourceGroupName": "required"
      },
      "updatedAt": "2021-05-12T14:10:35.607Z",
      "_id": "1eaabd69",
      "input": {
        "required": [
          "resourceGroupName",
          "provisioningServiceName",
          "provisioningServiceTags"
        ],
        "optional": []
      },
      "operationType": "MODIFY",
      "displayService": "deviceprovisioningservices",
      "addonCount": 8,
      "relationCount": 12,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+311 -8"
    },
    {
      "isAction": true,
      "isRoot": false,
      "properties": { "package": "@google-cloud/bigquery" },
      "createdAt": "2021-08-18T07:23:50.475Z",
      "cloudProvider": "GCP",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": ["id"],
        "definitions": {},
        "properties": { "id": { "type": "string" } },
        "required": ["id"]
      },
      "outputSchema": {
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "definitions": {
          "bigquery_IClustering": {
            "type": "object",
            "properties": {
              "fields": {
                "type": "array",
                "items": { "type": "string" },
                "description": "[Repeated] One or more fields on which data should be clustered. Only top-level, non-repeated, simple-type fields are supported. When you cluster a table using multiple columns, the order of columns you specify is important. The order of the specified columns determines the sort order of the data."
              }
            },
            "additionalProperties": false
          },
          "bigquery_IEncryptionConfiguration": {
            "type": "object",
            "properties": {
              "kmsKeyName": {
                "type": "string",
                "description": "[Optional] Describes the Cloud KMS encryption key that will be used to protect destination BigQuery table. The BigQuery Service Account associated with your project requires access to this encryption key."
              }
            },
            "additionalProperties": false
          },
          "bigquery_IUserDefinedFunctionResource": {
            "description": "This is used for defining User Defined Function (UDF) resources only when using legacy SQL. Users of Standard SQL should leverage either DDL (e.g. CREATE [TEMPORARY] FUNCTION ... ) or the Routines API to define UDF resources. For additional information on migrating, see: https://cloud.google.com/bigquery/docs/reference/standard-sql/migrating-from-legacy-sql#differences_in_user-defined_javascript_functions",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "inlineCode": {
                "type": "string",
                "description": "[Pick one] An inline resource that contains code for a user-defined function (UDF). Providing a inline code resource is equivalent to providing a URI for a file containing the same code."
              },
              "resourceUri": {
                "type": "string",
                "description": "[Pick one] A code resource to load from a Google Cloud Storage URI (gs://bucket/path)."
              }
            }
          },
          "bigquery_ITimePartitioning": {
            "type": "object",
            "properties": {
              "expirationMs": {
                "type": "string",
                "description": "[Optional] Number of milliseconds for which to keep the storage for partitions in the table. The storage in a partition will have an expiration time of its partition time plus this value."
              },
              "field": {
                "type": "string",
                "description": "[Beta] [Optional] If not set, the table is partitioned by pseudo column, referenced via either '_PARTITIONTIME' as TIMESTAMP type, or '_PARTITIONDATE' as DATE type. If field is specified, the table is instead partitioned by this field. The field must be a top-level TIMESTAMP or DATE field. Its mode must be NULLABLE or REQUIRED."
              },
              "requirePartitionFilter": { "type": "boolean" },
              "type": {
                "type": "string",
                "description": "[Required] The supported types are DAY, HOUR, MONTH, and YEAR, which will generate one partition per day, hour, month, and year, respectively. When the type is not specified, the default behavior is DAY."
              }
            },
            "additionalProperties": false
          },
          "bigquery_IBqmlIterationResult": {
            "type": "object",
            "properties": {
              "index": {
                "type": "number",
                "description": "[Output-only, Beta] Index of the ML training iteration, starting from zero for each training run."
              },
              "learnRate": {
                "type": "number",
                "description": "[Output-only, Beta] Learning rate used for this iteration, it varies for different training iterations if learn_rate_strategy option is not constant."
              },
              "durationMs": {
                "type": "string",
                "description": "[Output-only, Beta] Time taken to run the training iteration in milliseconds."
              },
              "evalLoss": {
                "type": "number",
                "description": "[Output-only, Beta] Eval loss computed on the eval data at the end of the iteration. The eval loss is used for early stopping to avoid overfitting. No eval loss if eval_split_method option is specified as no_split or auto_split with input data size less than 500 rows."
              },
              "trainingLoss": {
                "type": "number",
                "description": "[Output-only, Beta] Training loss computed on the training data at the end of the iteration. The training loss function is defined by model type."
              }
            },
            "additionalProperties": false
          },
          "bigquery_IGoogleSheetsOptions": {
            "type": "object",
            "properties": {
              "range": {
                "type": "string",
                "description": "[Optional] Range of a sheet to query from. Only used when non-empty. Typical format: sheet_name!top_left_cell_id:bottom_right_cell_id For example: sheet1!A1:B20"
              },
              "skipLeadingRows": {
                "type": "string",
                "description": "[Optional] The number of rows at the top of a sheet that BigQuery will skip when reading the data. The default value is 0. This property is useful if you have header rows that should be skipped. When autodetect is on, behavior is the following: * skipLeadingRows unspecified - Autodetect tries to detect headers in the first row. If they are not detected, the row is read as data. Otherwise data is read starting from the second row. * skipLeadingRows is 0 - Instructs autodetect that there are no headers and data should be read starting from the first row. * skipLeadingRows = N > 0 - Autodetect skips N-1 rows and tries to detect headers in row N. If headers are not detected, row N is just skipped. Otherwise row N is used to extract column names for the detected schema."
              }
            },
            "additionalProperties": false
          },
          "bigquery_IViewDefinition": {
            "type": "object",
            "properties": {
              "userDefinedFunctionResources": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/bigquery_IUserDefinedFunctionResource"
                },
                "description": "Describes user-defined function resources used in the query."
              },
              "query": {
                "type": "string",
                "description": "[Required] A query that BigQuery executes when the view is referenced."
              },
              "useLegacySql": {
                "type": "boolean",
                "description": "Specifies whether to use BigQuery's legacy SQL for this view. The default value is true. If set to false, the view will use BigQuery's standard SQL: https://cloud.google.com/bigquery/sql-reference/ Queries and views that reference this view must use the same flag value."
              }
            },
            "additionalProperties": false
          },
          "bigquery_IMaterializedViewDefinition": {
            "type": "object",
            "properties": {
              "refreshIntervalMs": {
                "type": "string",
                "description": "[Optional] [TrustedTester] The maximum frequency at which this materialized view will be refreshed. The default value is \"1800000\" (30 minutes)."
              },
              "enableRefresh": {
                "type": "boolean",
                "description": "[Optional] [TrustedTester] Enable automatic refresh of the materialized view when the base table is updated. The default value is \"true\"."
              },
              "lastRefreshTime": {
                "type": "string",
                "description": "[Output-only] [TrustedTester] The time when this materialized view was last modified, in milliseconds since the epoch."
              },
              "query": {
                "type": "string",
                "description": "[Required] A query whose result is persisted."
              }
            },
            "additionalProperties": false
          },
          "bigquery_ITableSchema": {
            "type": "object",
            "properties": {
              "fields": {
                "type": "array",
                "items": { "$ref": "#/definitions/bigquery_ITableFieldSchema" },
                "description": "Describes the fields in a table."
              }
            },
            "additionalProperties": false
          },
          "bigquery_ISnapshotDefinition": {
            "type": "object",
            "properties": {
              "baseTableReference": {
                "$ref": "#/definitions/bigquery_ITableReference",
                "description": "[Required] Reference describing the ID of the table that is snapshotted."
              },
              "snapshotTime": {
                "type": "string",
                "description": "[Required] The time at which the base table was snapshot."
              }
            },
            "additionalProperties": false
          },
          "bigquery_IModelDefinition": {
            "type": "object",
            "properties": {
              "trainingRuns": {
                "type": "array",
                "items": { "$ref": "#/definitions/bigquery_IBqmlTrainingRun" },
                "description": "[Output-only, Beta] Information about ml training runs, each training run comprises of multiple iterations and there may be multiple training runs for the model if warm start is used or if a user decides to continue a previously cancelled query."
              },
              "modelOptions": {
                "description": "[Output-only, Beta] Model options used for the first training run. These options are immutable for subsequent training runs. Default values are used for any options not specified in the input query.",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "lossType": { "type": "string" },
                  "labels": { "type": "array", "items": { "type": "string" } },
                  "modelType": { "type": "string" }
                }
              }
            },
            "additionalProperties": false
          },
          "bigquery_IBigtableOptions": {
            "type": "object",
            "properties": {
              "columnFamilies": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/bigquery_IBigtableColumnFamily"
                },
                "description": "[Optional] List of column families to expose in the table schema along with their types. This list restricts the column families that can be referenced in queries and specifies their value types. You can use this list to do type conversions - see the 'type' field for more details. If you leave this list empty, all column families are present in the table schema and their values are read as BYTES. During a query only the column families referenced in that query are read from Bigtable."
              },
              "ignoreUnspecifiedColumnFamilies": {
                "type": "boolean",
                "description": "[Optional] If field is true, then the column families that are not specified in columnFamilies list are not exposed in the table schema. Otherwise, they are read with BYTES type values. The default value is false."
              },
              "readRowkeyAsString": {
                "type": "boolean",
                "description": "[Optional] If field is true, then the rowkey column families will be read and converted to string. Otherwise they are read with BYTES type values and users need to manually cast them with CAST if necessary. The default value is false."
              }
            },
            "additionalProperties": false
          },
          "bigquery_IStreamingbuffer": {
            "type": "object",
            "properties": {
              "estimatedRows": {
                "type": "string",
                "description": "[Output-only] A lower-bound estimate of the number of rows currently in the streaming buffer."
              },
              "estimatedBytes": {
                "type": "string",
                "description": "[Output-only] A lower-bound estimate of the number of bytes currently in the streaming buffer."
              },
              "oldestEntryTime": {
                "type": "string",
                "description": "[Output-only] Contains the timestamp of the oldest entry in the streaming buffer, in milliseconds since the epoch, if the streaming buffer is available."
              }
            },
            "additionalProperties": false
          },
          "bigquery_ITableFieldSchema": {
            "type": "object",
            "properties": {
              "mode": {
                "type": "string",
                "description": "[Optional] The field mode. Possible values include NULLABLE, REQUIRED and REPEATED. The default value is NULLABLE."
              },
              "policyTags": {
                "type": "object",
                "properties": {
                  "names": {
                    "type": "array",
                    "items": { "type": "string" },
                    "description": "A list of category resource names. For example, \"projects/1/location/eu/taxonomies/2/policyTags/3\". At most 1 policy tag is allowed."
                  }
                },
                "additionalProperties": false
              },
              "name": {
                "type": "string",
                "description": "[Required] The field name. The name must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_), and must start with a letter or underscore. The maximum length is 128 characters."
              },
              "description": {
                "type": "string",
                "description": "[Optional] The field description. The maximum length is 1,024 characters."
              },
              "categories": {
                "description": "[Optional] The categories attached to this field, used for field-level access control.",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "names": {
                    "type": "array",
                    "items": { "type": "string" },
                    "description": "A list of category resource names. For example, \"projects/1/taxonomies/2/categories/3\". At most 5 categories are allowed."
                  }
                }
              },
              "fields": {
                "type": "array",
                "items": { "$ref": "#/definitions/bigquery_ITableFieldSchema" },
                "description": "[Optional] Describes the nested schema fields if the type property is set to RECORD."
              },
              "type": {
                "type": "string",
                "description": "[Required] The field data type. Possible values include STRING, BYTES, INTEGER, INT64 (same as INTEGER), FLOAT, FLOAT64 (same as FLOAT), BOOLEAN, BOOL (same as BOOLEAN), TIMESTAMP, DATE, TIME, DATETIME, RECORD (where RECORD indicates that the field contains a nested schema) or STRUCT (same as RECORD)."
              }
            },
            "additionalProperties": false
          },
          "bigquery_IBqmlTrainingRun": {
            "type": "object",
            "properties": {
              "startTime": {
                "type": "string",
                "description": "[Output-only, Beta] Training run start time in milliseconds since the epoch."
              },
              "trainingOptions": {
                "description": "[Output-only, Beta] Training options used by this training run. These options are mutable for subsequent training runs. Default values are explicitly stored for options not specified in the input query of the first training run. For subsequent training runs, any option not explicitly specified in the input query will be copied from the previous training run.",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "earlyStop": { "type": "boolean" },
                  "l1Reg": { "type": "number" },
                  "maxIteration": { "type": "string" },
                  "l2Reg": { "type": "number" },
                  "learnRate": { "type": "number" },
                  "lineSearchInitLearnRate": { "type": "number" },
                  "warmStart": { "type": "boolean" },
                  "learnRateStrategy": { "type": "string" },
                  "minRelProgress": { "type": "number" }
                }
              },
              "iterationResults": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/bigquery_IBqmlIterationResult"
                },
                "description": "[Output-only, Beta] List of each iteration results."
              },
              "state": {
                "type": "string",
                "description": "[Output-only, Beta] Different state applicable for a training run. IN PROGRESS: Training run is in progress. FAILED: Training run ended due to a non-retryable failure. SUCCEEDED: Training run successfully completed. CANCELLED: Training run cancelled by the user."
              }
            },
            "additionalProperties": false
          },
          "bigquery_IHivePartitioningOptions": {
            "type": "object",
            "properties": {
              "mode": {
                "type": "string",
                "description": "[Optional] When set, what mode of hive partitioning to use when reading data. The following modes are supported. (1) AUTO: automatically infer partition key name(s) and type(s). (2) STRINGS: automatically infer partition key name(s). All types are interpreted as strings. (3) CUSTOM: partition key schema is encoded in the source URI prefix. Not all storage formats support hive partitioning. Requesting hive partitioning on an unsupported format will lead to an error. Currently supported types include: AVRO, CSV, JSON, ORC and Parquet."
              },
              "requirePartitionFilter": {
                "type": "boolean",
                "description": "[Optional] If set to true, queries over this table require a partition filter that can be used for partition elimination to be specified. Note that this field should only be true when creating a permanent external table or querying a temporary external table. Hive-partitioned loads with requirePartitionFilter explicitly set to true will fail."
              },
              "sourceUriPrefix": {
                "type": "string",
                "description": "[Optional] When hive partition detection is requested, a common prefix for all source uris should be supplied. The prefix must end immediately before the partition key encoding begins. For example, consider files following this data layout. gs://bucket/path_to_table/dt=2019-01-01/country=BR/id=7/file.avro gs://bucket/path_to_table/dt=2018-12-31/country=CA/id=3/file.avro When hive partitioning is requested with either AUTO or STRINGS detection, the common prefix can be either of gs://bucket/path_to_table or gs://bucket/path_to_table/ (trailing slash does not matter)."
              }
            },
            "additionalProperties": false
          },
          "bigquery_ICsvOptions": {
            "type": "object",
            "properties": {
              "allowQuotedNewlines": {
                "type": "boolean",
                "description": "[Optional] Indicates if BigQuery should allow quoted data sections that contain newline characters in a CSV file. The default value is false."
              },
              "skipLeadingRows": {
                "type": "string",
                "description": "[Optional] The number of rows at the top of a CSV file that BigQuery will skip when reading the data. The default value is 0. This property is useful if you have header rows in the file that should be skipped. When autodetect is on, the behavior is the following: * skipLeadingRows unspecified - Autodetect tries to detect headers in the first row. If they are not detected, the row is read as data. Otherwise data is read starting from the second row. * skipLeadingRows is 0 - Instructs autodetect that there are no headers and data should be read starting from the first row. * skipLeadingRows = N > 0 - Autodetect skips N-1 rows and tries to detect headers in row N. If headers are not detected, row N is just skipped. Otherwise row N is used to extract column names for the detected schema."
              },
              "quote": {
                "type": "string",
                "description": "[Optional] The value that is used to quote data sections in a CSV file. BigQuery converts the string to ISO-8859-1 encoding, and then uses the first byte of the encoded string to split the data in its raw, binary state. The default value is a double-quote ('\"'). If your data does not contain quoted sections, set the property value to an empty string. If your data contains quoted newline characters, you must also set the allowQuotedNewlines property to true."
              },
              "encoding": {
                "type": "string",
                "description": "[Optional] The character encoding of the data. The supported values are UTF-8 or ISO-8859-1. The default value is UTF-8. BigQuery decodes the data after the raw, binary data has been split using the values of the quote and fieldDelimiter properties."
              },
              "fieldDelimiter": {
                "type": "string",
                "description": "[Optional] The separator for fields in a CSV file. BigQuery converts the string to ISO-8859-1 encoding, and then uses the first byte of the encoded string to split the data in its raw, binary state. BigQuery also supports the escape sequence \"\\t\" to specify a tab separator. The default value is a comma (',')."
              },
              "allowJaggedRows": {
                "type": "boolean",
                "description": "[Optional] Indicates if BigQuery should accept rows that are missing trailing optional columns. If true, BigQuery treats missing trailing columns as null values. If false, records with missing trailing columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. The default value is false."
              }
            },
            "additionalProperties": false
          },
          "bigquery_ITableReference": {
            "type": "object",
            "properties": {
              "datasetId": {
                "type": "string",
                "description": "[Required] The ID of the dataset containing this table."
              },
              "projectId": {
                "type": "string",
                "description": "[Required] The ID of the project containing this table."
              },
              "tableId": {
                "type": "string",
                "description": "[Required] The ID of the table. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters."
              }
            },
            "additionalProperties": false
          },
          "bigquery_IExternalDataConfiguration": {
            "type": "object",
            "properties": {
              "schema": {
                "$ref": "#/definitions/bigquery_ITableSchema",
                "description": "[Optional] The schema for the data. Schema is required for CSV and JSON formats. Schema is disallowed for Google Cloud Bigtable, Cloud Datastore backups, and Avro formats."
              },
              "autodetect": {
                "type": "boolean",
                "description": "Try to detect schema and format options automatically. Any option specified explicitly will be honored."
              },
              "sourceUris": {
                "type": "array",
                "items": { "type": "string" },
                "description": "[Required] The fully-qualified URIs that point to your data in Google Cloud. For Google Cloud Storage URIs: Each URI can contain one '*' wildcard character and it must come after the 'bucket' name. Size limits related to load jobs apply to external data sources. For Google Cloud Bigtable URIs: Exactly one URI can be specified and it has be a fully specified and valid HTTPS URL for a Google Cloud Bigtable table. For Google Cloud Datastore backups, exactly one URI can be specified. Also, the '*' wildcard character is not allowed."
              },
              "hivePartitioningOptions": {
                "$ref": "#/definitions/bigquery_IHivePartitioningOptions",
                "description": "[Optional, Trusted Tester] Options to configure hive partitioning support."
              },
              "bigtableOptions": {
                "$ref": "#/definitions/bigquery_IBigtableOptions",
                "description": "[Optional] Additional options if sourceFormat is set to BIGTABLE."
              },
              "csvOptions": {
                "$ref": "#/definitions/bigquery_ICsvOptions",
                "description": "Additional properties to set if sourceFormat is set to CSV."
              },
              "ignoreUnknownValues": {
                "type": "boolean",
                "description": "[Optional] Indicates if BigQuery should allow extra values that are not represented in the table schema. If true, the extra values are ignored. If false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. The default value is false. The sourceFormat property determines what BigQuery treats as an extra value: CSV: Trailing columns JSON: Named values that don't match any column names Google Cloud Bigtable: This setting is ignored. Google Cloud Datastore backups: This setting is ignored. Avro: This setting is ignored."
              },
              "connectionId": {
                "type": "string",
                "description": "[Optional, Trusted Tester] Connection for external data source."
              },
              "googleSheetsOptions": {
                "$ref": "#/definitions/bigquery_IGoogleSheetsOptions",
                "description": "[Optional] Additional options if sourceFormat is set to GOOGLE_SHEETS."
              },
              "compression": {
                "type": "string",
                "description": "[Optional] The compression type of the data source. Possible values include GZIP and NONE. The default value is NONE. This setting is ignored for Google Cloud Bigtable, Google Cloud Datastore backups and Avro formats."
              },
              "sourceFormat": {
                "type": "string",
                "description": "[Required] The data format. For CSV files, specify \"CSV\". For Google sheets, specify \"GOOGLE_SHEETS\". For newline-delimited JSON, specify \"NEWLINE_DELIMITED_JSON\". For Avro files, specify \"AVRO\". For Google Cloud Datastore backups, specify \"DATASTORE_BACKUP\". [Beta] For Google Cloud Bigtable, specify \"BIGTABLE\"."
              },
              "maxBadRecords": {
                "type": "number",
                "description": "[Optional] The maximum number of bad records that BigQuery can ignore when reading data. If the number of bad records exceeds this value, an invalid error is returned in the job result. This is only valid for CSV, JSON, and Google Sheets. The default value is 0, which requires that all records are valid. This setting is ignored for Google Cloud Bigtable, Google Cloud Datastore backups and Avro formats."
              }
            },
            "additionalProperties": false
          },
          "bigquery_IRangePartitioning": {
            "type": "object",
            "properties": {
              "field": {
                "type": "string",
                "description": "[TrustedTester] [Required] The table is partitioned by this field. The field must be a top-level NULLABLE/REQUIRED field. The only supported type is INTEGER/INT64."
              },
              "range": {
                "description": "[TrustedTester] [Required] Defines the ranges for range partitioning.",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "start": {
                    "type": "string",
                    "description": "[TrustedTester] [Required] The start of range partitioning, inclusive."
                  },
                  "end": {
                    "type": "string",
                    "description": "[TrustedTester] [Required] The end of range partitioning, exclusive."
                  },
                  "interval": {
                    "type": "string",
                    "description": "[TrustedTester] [Required] The width of each interval."
                  }
                }
              }
            },
            "additionalProperties": false
          },
          "bigquery_IBigtableColumn": {
            "type": "object",
            "properties": {
              "qualifierEncoded": {
                "type": "string",
                "description": "[Required] Qualifier of the column. Columns in the parent column family that has this exact qualifier are exposed as . field. If the qualifier is valid UTF-8 string, it can be specified in the qualifier_string field. Otherwise, a base-64 encoded value must be set to qualifier_encoded. The column field name is the same as the column qualifier. However, if the qualifier is not a valid BigQuery field identifier i.e. does not match [a-zA-Z][a-zA-Z0-9_]*, a valid identifier must be provided as field_name."
              },
              "fieldName": {
                "type": "string",
                "description": "[Optional] If the qualifier is not a valid BigQuery field identifier i.e. does not match [a-zA-Z][a-zA-Z0-9_]*, a valid identifier must be provided as the column field name and is used as field name in queries."
              },
              "encoding": {
                "type": "string",
                "description": "[Optional] The encoding of the values when the type is not STRING. Acceptable encoding values are: TEXT - indicates values are alphanumeric text strings. BINARY - indicates values are encoded using HBase Bytes.toBytes family of functions. 'encoding' can also be set at the column family level. However, the setting at this level takes precedence if 'encoding' is set at both levels."
              },
              "qualifierString": { "type": "string" },
              "type": {
                "type": "string",
                "description": "[Optional] The type to convert the value in cells of this column. The values are expected to be encoded using HBase Bytes.toBytes function when using the BINARY encoding value. Following BigQuery types are allowed (case-sensitive) - BYTES STRING INTEGER FLOAT BOOLEAN Default type is BYTES. 'type' can also be set at the column family level. However, the setting at this level takes precedence if 'type' is set at both levels."
              },
              "onlyReadLatest": {
                "type": "boolean",
                "description": "[Optional] If this is set, only the latest version of value in this column are exposed. 'onlyReadLatest' can also be set at the column family level. However, the setting at this level takes precedence if 'onlyReadLatest' is set at both levels."
              }
            },
            "additionalProperties": false
          },
          "bigquery_IBigtableColumnFamily": {
            "type": "object",
            "properties": {
              "familyId": {
                "type": "string",
                "description": "Identifier of the column family."
              },
              "encoding": {
                "type": "string",
                "description": "[Optional] The encoding of the values when the type is not STRING. Acceptable encoding values are: TEXT - indicates values are alphanumeric text strings. BINARY - indicates values are encoded using HBase Bytes.toBytes family of functions. This can be overridden for a specific column by listing that column in 'columns' and specifying an encoding for it."
              },
              "type": {
                "type": "string",
                "description": "[Optional] The type to convert the value in cells of this column family. The values are expected to be encoded using HBase Bytes.toBytes function when using the BINARY encoding value. Following BigQuery types are allowed (case-sensitive) - BYTES STRING INTEGER FLOAT BOOLEAN Default type is BYTES. This can be overridden for a specific column by listing that column in 'columns' and specifying a type for it."
              },
              "columns": {
                "type": "array",
                "items": { "$ref": "#/definitions/bigquery_IBigtableColumn" },
                "description": "[Optional] Lists of columns that should be exposed as individual fields as opposed to a list of (column name, value) pairs. All columns whose qualifier matches a qualifier in this list can be accessed as .. Other columns can be accessed as a list through .Column field."
              },
              "onlyReadLatest": {
                "type": "boolean",
                "description": "[Optional] If this is set only the latest version of value are exposed for all columns in this column family. This can be overridden for a specific column by listing that column in 'columns' and specifying a different setting for that column."
              }
            },
            "additionalProperties": false
          }
        },
        "properties": {
          "schema": {
            "$ref": "#/definitions/bigquery_ITableSchema",
            "description": "[Optional] Describes the schema of this table."
          },
          "lastModifiedTime": {
            "type": "string",
            "description": "[Output-only] The time when this table was last modified, in milliseconds since the epoch."
          },
          "creationTime": {
            "type": "string",
            "description": "[Output-only] The time when this table was created, in milliseconds since the epoch."
          },
          "numRows": {
            "type": "string",
            "description": "[Output-only] The number of rows of data in this table, excluding any data in the streaming buffer."
          },
          "description": {
            "type": "string",
            "description": "[Optional] A user-friendly description of this table."
          },
          "requirePartitionFilter": {
            "type": "boolean",
            "description": "[Optional] If set to true, queries over this table require a partition filter that can be used for partition elimination to be specified."
          },
          "type": {
            "type": "string",
            "description": "[Output-only] Describes the table type. The following values are supported: TABLE: A normal BigQuery table. VIEW: A virtual table defined by a SQL query. SNAPSHOT: An immutable, read-only table that is a copy of another table. [TrustedTester] MATERIALIZED_VIEW: SQL query whose result is persisted. EXTERNAL: A table that references data stored in an external storage system, such as Google Cloud Storage. The default value is TABLE."
          },
          "numBytes": {
            "type": "string",
            "description": "[Output-only] The size of this table in bytes, excluding any data in the streaming buffer."
          },
          "externalDataConfiguration": {
            "$ref": "#/definitions/bigquery_IExternalDataConfiguration",
            "description": "[Optional] Describes the data format, location, and other properties of a table stored outside of BigQuery. By defining these properties, the data source can then be queried as if it were a standard BigQuery table."
          },
          "view": {
            "$ref": "#/definitions/bigquery_IViewDefinition",
            "description": "[Optional] The view definition."
          },
          "numLongTermBytes": {
            "type": "string",
            "description": "[Output-only] The number of bytes in the table that are considered \"long-term storage\"."
          },
          "encryptionConfiguration": {
            "$ref": "#/definitions/bigquery_IEncryptionConfiguration",
            "description": "Custom encryption configuration (e.g., Cloud KMS keys)."
          },
          "model": {
            "$ref": "#/definitions/bigquery_IModelDefinition",
            "description": "[Output-only, Beta] Present iff this table represents a ML model. Describes the training information for the model, and it is required to run 'PREDICT' queries."
          },
          "id": {
            "type": "string",
            "description": "[Output-only] An opaque ID uniquely identifying the table."
          },
          "friendlyName": {
            "type": "string",
            "description": "[Optional] A descriptive name for this table."
          },
          "materializedView": {
            "$ref": "#/definitions/bigquery_IMaterializedViewDefinition",
            "description": "[Optional] Materialized view definition."
          },
          "snapshotDefinition": {
            "$ref": "#/definitions/bigquery_ISnapshotDefinition",
            "description": "[Output-only] Snapshot definition."
          },
          "timePartitioning": {
            "$ref": "#/definitions/bigquery_ITimePartitioning",
            "description": "Time-based partitioning specification for this table. Only one of timePartitioning and rangePartitioning should be specified."
          },
          "streamingBuffer": {
            "$ref": "#/definitions/bigquery_IStreamingbuffer",
            "description": "[Output-only] Contains information regarding this table's streaming buffer, if one is present. This field will be absent if the table is not being streamed to or if there is no data in the streaming buffer."
          },
          "kind": {
            "type": "string",
            "description": "[Output-only] The type of the resource."
          },
          "labels": {
            "type": "object",
            "description": "The labels associated with this table. You can use these to organize and group your tables. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.",
            "additionalProperties": { "type": "string" }
          },
          "selfLink": {
            "type": "string",
            "description": "[Output-only] A URL that can be used to access this resource again."
          },
          "numPhysicalBytes": {
            "type": "string",
            "description": "[Output-only] [TrustedTester] The physical size of this table in bytes, excluding any data in the streaming buffer. This includes compression and storage used for time travel."
          },
          "tableReference": {
            "$ref": "#/definitions/bigquery_ITableReference",
            "description": "[Required] Reference describing the ID of this table."
          },
          "expirationTime": {
            "type": "string",
            "description": "[Optional] The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed. The defaultTableExpirationMs property of the encapsulating dataset can be used to set a default expirationTime on newly created tables."
          },
          "rangePartitioning": {
            "$ref": "#/definitions/bigquery_IRangePartitioning",
            "description": "[TrustedTester] Range partitioning specification for this table. Only one of timePartitioning and rangePartitioning should be specified."
          },
          "clustering": {
            "$ref": "#/definitions/bigquery_IClustering",
            "description": "[Beta] Clustering specification for the table. Must be specified with partitioning, data in the table will be first partitioned and subsequently clustered."
          },
          "etag": {
            "type": "string",
            "description": "[Output-only] A hash of the table metadata. Used to ensure there were no concurrent modifications to the resource when attempting an update. Not guaranteed to change when the table contents or the fields numRows, numBytes, numLongTermBytes or lastModifiedTime change."
          },
          "location": {
            "type": "string",
            "description": "[Output-only] The geographic location where the table resides. This value is inherited from the dataset."
          }
        }
      },
      "method": "createTable",
      "service": "bigquery",
      "displayName": "Table",
      "active": true,
      "resourceType": "Dataset",
      "output": {
        "required": [
          "tableReference.projectId",
          "tableReference.datasetId",
          "tableReference.tableId",
          "clustering.fields",
          "friendlyName",
          "snapshotDefinition.baseTableReference.description",
          "snapshotDefinition.snapshotTime",
          "kind",
          "numRows",
          "timePartitioning.field",
          "timePartitioning.expirationMs",
          "timePartitioning.requirePartitionFilter",
          "timePartitioning.type",
          "numBytes",
          "creationTime",
          "description",
          "labels.dolore_",
          "labels.nis",
          "id",
          "encryptionConfiguration.kmsKeyName",
          "type",
          "location",
          "expirationTime",
          "selfLink",
          "etag",
          "materializedView.query",
          "materializedView.refreshIntervalMs",
          "materializedView.lastRefreshTime",
          "materializedView.enableRefresh",
          "externalDataConfiguration.csvOptions.allowJaggedRows",
          "externalDataConfiguration.csvOptions.fieldDelimiter",
          "externalDataConfiguration.csvOptions.quote",
          "externalDataConfiguration.csvOptions.allowQuotedNewlines",
          "externalDataConfiguration.csvOptions.encoding",
          "externalDataConfiguration.csvOptions.skipLeadingRows",
          "externalDataConfiguration.schema.fields.description",
          "externalDataConfiguration.schema.fields.policyTags.names",
          "externalDataConfiguration.schema.fields.categories.names",
          "externalDataConfiguration.schema.fields.fields",
          "externalDataConfiguration.schema.fields.mode",
          "externalDataConfiguration.schema.fields.type",
          "externalDataConfiguration.schema.fields.name",
          "externalDataConfiguration.bigtableOptions.columnFamilies.encoding",
          "externalDataConfiguration.bigtableOptions.columnFamilies.columns.qualifierEncoded",
          "externalDataConfiguration.bigtableOptions.columnFamilies.columns.encoding",
          "externalDataConfiguration.bigtableOptions.columnFamilies.columns.onlyReadLatest",
          "externalDataConfiguration.bigtableOptions.columnFamilies.columns.fieldName",
          "externalDataConfiguration.bigtableOptions.columnFamilies.columns.type",
          "externalDataConfiguration.bigtableOptions.columnFamilies.columns.qualifierString",
          "externalDataConfiguration.bigtableOptions.columnFamilies.familyId",
          "externalDataConfiguration.bigtableOptions.columnFamilies.onlyReadLatest",
          "externalDataConfiguration.bigtableOptions.columnFamilies.type",
          "externalDataConfiguration.bigtableOptions.ignoreUnspecifiedColumnFamilies",
          "externalDataConfiguration.bigtableOptions.readRowkeyAsString",
          "externalDataConfiguration.compression",
          "externalDataConfiguration.ignoreUnknownValues",
          "externalDataConfiguration.googleSheetsOptions.skipLeadingRows",
          "externalDataConfiguration.googleSheetsOptions.range",
          "externalDataConfiguration.hivePartitioningOptions.mode",
          "externalDataConfiguration.hivePartitioningOptions.requirePartitionFilter",
          "externalDataConfiguration.hivePartitioningOptions.sourceUriPrefix",
          "externalDataConfiguration.sourceUris",
          "externalDataConfiguration.sourceFormat",
          "externalDataConfiguration.connectionId",
          "externalDataConfiguration.maxBadRecords",
          "externalDataConfiguration.autodetect",
          "lastModifiedTime",
          "requirePartitionFilter",
          "model.modelOptions.labels",
          "model.modelOptions.modelType",
          "model.modelOptions.lossType",
          "model.trainingRuns.state",
          "model.trainingRuns.trainingOptions.leg",
          "model.trainingRuns.trainingOptions.learnRateStrategy",
          "model.trainingRuns.trainingOptions.warmStart",
          "model.trainingRuns.trainingOptions.minRelProgress",
          "model.trainingRuns.trainingOptions.leg",
          "model.trainingRuns.trainingOptions.lineSearchInitLearnRate",
          "model.trainingRuns.trainingOptions.learnRate",
          "model.trainingRuns.trainingOptions.maxIteration",
          "model.trainingRuns.trainingOptions.earlyStop",
          "model.trainingRuns.iterationResults.learnRate",
          "model.trainingRuns.iterationResults.trainingLoss",
          "model.trainingRuns.iterationResults.evalLoss",
          "model.trainingRuns.iterationResults.index",
          "model.trainingRuns.iterationResults.durationMs",
          "model.trainingRuns.startTime",
          "numPhysicalBytes",
          "view.userDefinedFunctionResources.resourceUri",
          "view.userDefinedFunctionResources.inlineCode",
          "view.query",
          "view.useLegacySql",
          "schema.fields.description",
          "schema.fields.mode",
          "schema.fields.type",
          "schema.fields.policyTags.names",
          "schema.fields.name",
          "schema.fields.categories.names",
          "schema.fields.fields",
          "numLongTermBytes",
          "streamingBuffer.estimatedBytes",
          "streamingBuffer.estimatedRows",
          "streamingBuffer.oldestEntryTime",
          "rangePartitioning.range.interval",
          "rangePartitioning.range.start",
          "rangePartitioning.range.end",
          "rangePartitioning.field"
        ],
        "optional": []
      },
      "rowType": "API",
      "params": { "id": "required" },
      "updatedAt": "2021-08-18T07:24:09.934Z",
      "_id": "bd186138",
      "displayResourceType": "Datasets",
      "input": { "required": ["id"], "optional": [] },
      "operationType": "CREATE",
      "displayService": "Google BigQuery",
      "addonCount": 13,
      "relationCount": 3,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+266 -180"
    },
    {
      "relations": [],
      "aliases": {},
      "isDependent": true,
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": {
        "type": "structure",
        "members": { "ChangeToken": { "type": "string" } }
      },
      "method": "deleteByteMatchSet",
      "displayName": "Delete Byte Match Set",
      "active": true,
      "rowType": "API",
      "params": { "ByteMatchSetId": "required", "ChangeToken": "required" },
      "_id": "a2ae96b4",
      "input": {
        "required": ["ByteMatchSetId", "ChangeToken"],
        "optional": []
      },
      "areValidParams": true,
      "isAction": true,
      "isRoot": false,
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:54:32.822Z",
      "inputSchema": {
        "type": "structure",
        "required": ["ByteMatchSetId", "ChangeToken"],
        "members": {
          "ByteMatchSetId": { "type": "string" },
          "ChangeToken": { "type": "string" }
        }
      },
      "historyKeys": [],
      "service": "WAFRegional",
      "resourceType": "WAFREGIONAL_BYTE_MATCH_SET",
      "output": { "required": [], "optional": ["ChangeToken"] },
      "updatedAt": "2021-07-29T07:55:15.282Z",
      "normalisations": [],
      "operationType": "DELETE",
      "displayService": "WAFRegional",
      "addonCount": 17,
      "relationCount": 6,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+432 -183"
    },
    {
      "relations": [],
      "aliases": {},
      "isDependent": true,
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": {
        "type": "structure",
        "resultWrapper": "SetIdentityFeedbackForwardingEnabledResult",
        "members": { "type": "string" }
      },
      "method": "setIdentityFeedbackForwardingEnabled",
      "displayName": "Set Identity Feedback Forwarding Enabled",
      "active": true,
      "rowType": "API",
      "params": { "Identity": "required", "ForwardingEnabled": "required" },
      "_id": "8a4066cc",
      "input": {
        "required": ["Identity", "ForwardingEnabled"],
        "optional": []
      },
      "areValidParams": true,
      "isAction": true,
      "isRoot": false,
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:54:29.480Z",
      "inputSchema": {
        "type": "structure",
        "required": ["Identity", "ForwardingEnabled"],
        "members": {
          "Identity": { "type": "string" },
          "ForwardingEnabled": { "type": "boolean" }
        }
      },
      "historyKeys": [],
      "service": "SES",
      "resourceType": "SES_IDENTITY_FEEDBACK_FORWARDING_ENABLED",
      "output": { "required": [], "optional": [] },
      "updatedAt": "2021-07-29T07:55:12.324Z",
      "normalisations": [],
      "operationType": "MODIFY",
      "displayService": "SES",
      "addonCount": 4,
      "relationCount": 19,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+55 -117"
    },
    {
      "relations": [],
      "aliases": {},
      "isDependent": true,
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": {
        "type": "structure",
        "members": {
          "Description": { "type": "string" },
          "EngineVersion": { "type": "string" },
          "LatestRevision": {
            "type": "structure",
            "members": {
              "Revision": { "type": "integer" },
              "Created": { "type": "timestamp", "timestampFormat": "iso8601" },
              "Description": { "type": "string" }
            }
          },
          "EngineType": { "type": "string" },
          "Id": { "type": "string" },
          "Arn": { "type": "string" },
          "Tags": {
            "type": "map",
            "value": { "type": "string" },
            "key": { "type": "string" }
          },
          "Created": { "type": "timestamp", "timestampFormat": "iso8601" },
          "Name": { "type": "string" }
        }
      },
      "method": "describeConfiguration",
      "displayName": "Configuration",
      "active": true,
      "rowType": "API",
      "params": { "ConfigurationId": "required" },
      "_id": "b0cf865c",
      "input": { "required": ["ConfigurationId"], "optional": [] },
      "areValidParams": true,
      "isAction": false,
      "isRoot": false,
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:54:19.891Z",
      "inputSchema": {
        "type": "structure",
        "required": ["ConfigurationId"],
        "members": { "ConfigurationId": { "location": "uri" } }
      },
      "historyKeys": [],
      "service": "MQ",
      "resourceType": "MQ_CONFIGURATION",
      "output": {
        "required": [],
        "optional": [
          "Arn",
          "Created",
          "Description",
          "EngineType",
          "EngineVersion",
          "Id",
          "LatestRevision",
          "Name",
          "Tags",
          "LatestRevision.Created",
          "LatestRevision.Description",
          "LatestRevision.Revision"
        ]
      },
      "updatedAt": "2021-07-29T07:55:04.127Z",
      "normalisations": [],
      "operationType": "DISCOVER",
      "displayService": "MQ",
      "addonCount": 13,
      "relationCount": 10,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+493 -27"
    },
    {
      "isAction": false,
      "isRoot": false,
      "properties": { "client": "WebSiteManagementClient" },
      "createdAt": "2021-05-12T14:06:08.585Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": ["resourceGroupName", "name", "options", "callback"],
        "properties": {
          "name": { "type": "string" },
          "resourceGroupName": { "type": "string" }
        },
        "required": ["resourceGroupName", "name"]
      },
      "outputSchema": {
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "additionalProperties": false
      },
      "method": "get",
      "service": "appservice",
      "displayName": "Certificates",
      "active": false,
      "resourceType": "certificates",
      "output": { "required": [], "optional": [] },
      "rowType": "API",
      "params": { "name": "required", "resourceGroupName": "required" },
      "updatedAt": "2021-05-12T14:06:36.094Z",
      "_id": "83db495f",
      "input": {
        "required": ["resourceGroupName", "name", "options", "callback"],
        "optional": []
      },
      "operationType": "DISCOVER",
      "displayService": "appservice",
      "addonCount": 16,
      "relationCount": 17,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+376 -160"
    },
    {
      "relations": [],
      "aliases": {},
      "isDependent": true,
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": {
        "type": "structure",
        "members": {
          "operations": {
            "type": "list",
            "member": {
              "type": "structure",
              "members": {
                "createdAt": { "type": "timestamp" },
                "statusChangedAt": { "type": "timestamp" },
                "isTerminal": { "type": "boolean" },
                "errorCode": { "type": "string" },
                "resourceName": { "type": "string" },
                "location": {
                  "type": "structure",
                  "members": {
                    "availabilityZone": { "type": "string" },
                    "regionName": { "type": "string" }
                  }
                },
                "operationType": { "type": "string" },
                "id": { "type": "string" },
                "operationDetails": { "type": "string" },
                "resourceType": { "type": "string" },
                "status": { "type": "string" },
                "errorDetails": { "type": "string" }
              }
            }
          }
        }
      },
      "method": "attachInstancesToLoadBalancer",
      "displayName": "Attach Instances To Load Balancer",
      "active": true,
      "rowType": "API",
      "params": {
        "loadBalancerName": "required",
        "instanceNames": ["required1", "required2"]
      },
      "_id": "c21eaa25",
      "input": {
        "required": ["loadBalancerName", "instanceNames"],
        "optional": []
      },
      "areValidParams": true,
      "isAction": true,
      "isRoot": false,
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:54:18.142Z",
      "inputSchema": {
        "type": "structure",
        "required": ["loadBalancerName", "instanceNames"],
        "members": {
          "loadBalancerName": { "type": "string" },
          "instanceNames": { "type": "list", "member": { "type": "string" } }
        }
      },
      "historyKeys": [],
      "service": "Lightsail",
      "resourceType": "LIGHTSAIL_INSTANCES_TO_LOAD_BALANCER",
      "output": {
        "required": [],
        "optional": [
          "operations",
          "operations.id",
          "operations.resourceName",
          "operations.resourceType",
          "operations.createdAt",
          "operations.location",
          "operations.isTerminal",
          "operations.operationDetails",
          "operations.operationType",
          "operations.status",
          "operations.statusChangedAt",
          "operations.errorCode",
          "operations.errorDetails",
          "operations.location.availabilityZone",
          "operations.location.regionName"
        ]
      },
      "updatedAt": "2021-07-29T07:55:01.004Z",
      "normalisations": [],
      "operationType": "MODIFY",
      "displayService": "Lightsail",
      "addonCount": 4,
      "relationCount": 20,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+98 -138"
    },
    {
      "isAction": false,
      "isRoot": false,
      "properties": {},
      "createdAt": "2021-05-12T14:06:20.840Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": [
          "resourceGroupName",
          "projectName",
          "options",
          "callback"
        ],
        "properties": {
          "projectName": { "type": "string" },
          "resourceGroupName": { "type": "string" }
        },
        "required": ["resourceGroupName", "projectName"]
      },
      "outputSchema": {},
      "method": "listByProject",
      "service": "migrate",
      "displayName": " Assessments ",
      "active": false,
      "resourceType": "Assessments",
      "output": { "required": [], "optional": [] },
      "rowType": "API",
      "params": { "projectName": "required", "resourceGroupName": "required" },
      "updatedAt": "2021-05-12T14:06:46.591Z",
      "_id": "e359547a",
      "input": {
        "required": ["resourceGroupName", "projectName", "options", "callback"],
        "optional": []
      },
      "operationType": "DISCOVER",
      "displayService": "migrate",
      "addonCount": 5,
      "relationCount": 17,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+167 -37"
    },
    {
      "isAction": true,
      "isRoot": false,
      "properties": { "client": "NetworkManagementClient" },
      "createdAt": "2021-05-12T14:10:18.021Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": ["resourceGroupName", "routeFilterName"],
        "properties": {
          "routeFilterName": { "type": "string" },
          "resourceGroupName": { "type": "string" }
        },
        "required": ["resourceGroupName", "routeFilterName"]
      },
      "outputSchema": {},
      "method": "deleteMethod",
      "service": "network",
      "displayName": "Route Filters ",
      "active": true,
      "resourceType": "routeFilters",
      "output": { "required": [], "optional": [] },
      "rowType": "API",
      "params": {
        "routeFilterName": "required",
        "resourceGroupName": "required"
      },
      "updatedAt": "2021-05-12T14:10:43.244Z",
      "_id": "c87bd7a7",
      "input": {
        "required": ["resourceGroupName", "routeFilterName"],
        "optional": []
      },
      "operationType": "DELETE",
      "displayService": "network",
      "addonCount": 4,
      "relationCount": 1,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+280 -120"
    },
    {
      "isAction": false,
      "isRoot": false,
      "properties": { "client": "AppPlatformManagementClient" },
      "createdAt": "2021-05-12T14:06:08.084Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": [
          "resourceGroupName",
          "serviceName",
          "appName",
          "options",
          "callback"
        ],
        "properties": {
          "serviceName": { "type": "string" },
          "appName": { "type": "string" },
          "resourceGroupName": { "type": "string" }
        },
        "required": ["resourceGroupName", "serviceName", "appName"]
      },
      "outputSchema": {
        "additionalProperties": false,
        "type": "array",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "items": {
          "description": "Binding resource payload",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the resource.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
            },
            "id": {
              "type": "string",
              "description": "Fully qualified resource Id for the resource.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
            },
            "type": {
              "type": "string",
              "description": "The type of the resource.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
            },
            "properties": {
              "description": "Properties of the Binding resource",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "createdAt": {
                  "type": "string",
                  "description": "Creation time of the Binding resource\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
                },
                "resourceId": {
                  "type": "string",
                  "description": "The Azure resource id of the bound resource"
                },
                "resourceName": {
                  "type": "string",
                  "description": "The name of the bound resource\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
                },
                "bindingParameters": {
                  "type": "object",
                  "description": "Binding parameters of the Binding resource",
                  "additionalProperties": {}
                },
                "generatedProperties": {
                  "type": "string",
                  "description": "The generated Spring Boot property file for this binding. The secret will be deducted.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
                },
                "key": {
                  "type": "string",
                  "description": "The key of the bound resource"
                },
                "resourceType": {
                  "type": "string",
                  "description": "The standard Azure resource type of the bound resource\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
                },
                "updatedAt": {
                  "type": "string",
                  "description": "Update time of the Binding resource\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
                }
              }
            }
          }
        }
      },
      "method": "list",
      "service": "appplatform",
      "displayName": "Bindings",
      "active": true,
      "resourceType": "bindings",
      "output": {
        "required": [
          "properties.resourceName",
          "properties.resourceType",
          "properties.resourceId",
          "properties.key",
          "properties.generatedProperties",
          "properties.createdAt",
          "properties.updatedAt",
          "id",
          "name",
          "type"
        ],
        "optional": []
      },
      "rowType": "API",
      "params": {
        "serviceName": "required",
        "appName": "required",
        "resourceGroupName": "required"
      },
      "updatedAt": "2021-05-12T14:06:35.606Z",
      "_id": "618b4f0e",
      "input": {
        "required": [
          "resourceGroupName",
          "serviceName",
          "appName",
          "options",
          "callback"
        ],
        "optional": []
      },
      "operationType": "DISCOVER",
      "displayService": "appplatform",
      "addonCount": 11,
      "relationCount": 6,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+168 -75"
    },
    {
      "relations": [],
      "aliases": {},
      "isDependent": true,
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": {
        "type": "structure",
        "members": {
          "ResourceId": { "type": "string" },
          "ResourceType": { "type": "string" }
        }
      },
      "method": "addTags",
      "displayName": "Add Tags",
      "active": true,
      "rowType": "API",
      "params": {
        "ResourceId": "required",
        "Tags": [{ "Value": "<optional>", "Key": "<optional>" }],
        "ResourceType": "required"
      },
      "_id": "d593f8b8",
      "input": {
        "required": ["Tags", "ResourceId", "ResourceType"],
        "optional": ["Tags.Key", "Tags.Value"]
      },
      "areValidParams": true,
      "isAction": true,
      "isRoot": false,
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:54:18.558Z",
      "inputSchema": {
        "type": "structure",
        "required": ["Tags", "ResourceId", "ResourceType"],
        "members": {
          "ResourceId": { "type": "string" },
          "Tags": {
            "type": "list",
            "member": {
              "type": "structure",
              "members": {
                "Value": { "type": "string" },
                "Key": { "type": "string" }
              }
            }
          },
          "ResourceType": { "type": "string" }
        }
      },
      "historyKeys": [],
      "service": "MachineLearning",
      "resourceType": "MACHINELEARNING_TAGS",
      "output": { "required": [], "optional": ["ResourceId", "ResourceType"] },
      "updatedAt": "2021-07-29T07:55:01.544Z",
      "normalisations": [],
      "operationType": "MODIFY",
      "displayService": "MachineLearning",
      "addonCount": 20,
      "relationCount": 10,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+5 -153"
    },
    {
      "isAction": true,
      "isRoot": false,
      "properties": { "package": "@google-cloud/compute" },
      "createdAt": "2021-08-18T07:23:54.319Z",
      "cloudProvider": "GCP",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": ["request"],
        "definitions": {
          "google_cloud_compute_v1_IDistributionPolicyZoneConfiguration": {
            "description": "Properties of a DistributionPolicyZoneConfiguration.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "zone": {
                "type": ["string"],
                "description": "DistributionPolicyZoneConfiguration zone"
              }
            }
          },
          "google_cloud_compute_v1_IInstanceGroupManagerStatusStatefulPerInstanceConfigs": {
            "description": "Properties of an InstanceGroupManagerStatusStatefulPerInstanceConfigs.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "allEffective": {
                "type": ["boolean"],
                "description": "InstanceGroupManagerStatusStatefulPerInstanceConfigs allEffective"
              }
            }
          },
          "google_cloud_compute_v1_IStatefulPolicyPreservedState": {
            "description": "Properties of a StatefulPolicyPreservedState.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "disks": {
                "anyOf": [
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/google_cloud_compute_v1_IStatefulPolicyPreservedStateDiskDevice"
                    }
                  }
                ],
                "description": "StatefulPolicyPreservedState disks"
              }
            }
          },
          "google_cloud_compute_v1_INamedPort": {
            "description": "Properties of a NamedPort.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "name": { "type": ["string"], "description": "NamedPort name" },
              "port": { "type": ["number"], "description": "NamedPort port" }
            }
          },
          "google_cloud_compute_v1_IInstanceGroupManagerStatusVersionTarget": {
            "description": "Properties of an InstanceGroupManagerStatusVersionTarget.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "isReached": {
                "type": ["boolean"],
                "description": "InstanceGroupManagerStatusVersionTarget isReached"
              }
            }
          },
          "google_cloud_compute_v1_IInstanceGroupManager": {
            "description": "Properties of an InstanceGroupManager.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "autoHealingPolicies": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/google_cloud_compute_v1_IInstanceGroupManagerAutoHealingPolicy"
                    }
                  }
                ],
                "description": "InstanceGroupManager autoHealingPolicies"
              },
              "instanceTemplate": {
                "type": ["string"],
                "description": "InstanceGroupManager instanceTemplate"
              },
              "kind": {
                "type": ["string"],
                "description": "InstanceGroupManager kind"
              },
              "distributionPolicy": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/google_cloud_compute_v1_IDistributionPolicy"
                  }
                ],
                "description": "InstanceGroupManager distributionPolicy"
              },
              "description": {
                "type": ["string"],
                "description": "InstanceGroupManager description"
              },
              "namedPorts": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/google_cloud_compute_v1_INamedPort"
                    }
                  }
                ],
                "description": "InstanceGroupManager namedPorts"
              },
              "baseInstanceName": {
                "type": ["string"],
                "description": "InstanceGroupManager baseInstanceName"
              },
              "instanceGroup": {
                "type": ["string"],
                "description": "InstanceGroupManager instanceGroup"
              },
              "targetPools": {
                "anyOf": [{ "type": "array", "items": { "type": "string" } }],
                "description": "InstanceGroupManager targetPools"
              },
              "selfLink": {
                "type": ["string"],
                "description": "InstanceGroupManager selfLink"
              },
              "statefulPolicy": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/google_cloud_compute_v1_IStatefulPolicy"
                  }
                ],
                "description": "InstanceGroupManager statefulPolicy"
              },
              "targetSize": {
                "type": ["number"],
                "description": "InstanceGroupManager targetSize"
              },
              "versions": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/google_cloud_compute_v1_IInstanceGroupManagerVersion"
                    }
                  }
                ],
                "description": "InstanceGroupManager versions"
              },
              "zone": {
                "type": ["string"],
                "description": "InstanceGroupManager zone"
              },
              "updatePolicy": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/google_cloud_compute_v1_IInstanceGroupManagerUpdatePolicy"
                  }
                ],
                "description": "InstanceGroupManager updatePolicy"
              },
              "creationTimestamp": {
                "type": ["string"],
                "description": "InstanceGroupManager creationTimestamp"
              },
              "currentActions": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/google_cloud_compute_v1_IInstanceGroupManagerActionsSummary"
                  }
                ],
                "description": "InstanceGroupManager currentActions"
              },
              "fingerprint": {
                "type": ["string"],
                "description": "InstanceGroupManager fingerprint"
              },
              "name": {
                "type": ["string"],
                "description": "InstanceGroupManager name"
              },
              "id": {
                "type": ["string"],
                "description": "InstanceGroupManager id"
              },
              "region": {
                "type": ["string"],
                "description": "InstanceGroupManager region"
              },
              "status": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/google_cloud_compute_v1_IInstanceGroupManagerStatus"
                  }
                ],
                "description": "InstanceGroupManager status"
              }
            }
          },
          "google_cloud_compute_v1_IInstanceGroupManagerUpdatePolicy": {
            "description": "Properties of an InstanceGroupManagerUpdatePolicy.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "maxSurge": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/google_cloud_compute_v1_IFixedOrPercent"
                  }
                ],
                "description": "InstanceGroupManagerUpdatePolicy maxSurge"
              },
              "minimalAction": {
                "type": ["string"],
                "description": "InstanceGroupManagerUpdatePolicy minimalAction"
              },
              "replacementMethod": {
                "type": ["string"],
                "description": "InstanceGroupManagerUpdatePolicy replacementMethod"
              },
              "type": {
                "type": ["string"],
                "description": "InstanceGroupManagerUpdatePolicy type"
              },
              "maxUnavailable": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/google_cloud_compute_v1_IFixedOrPercent"
                  }
                ],
                "description": "InstanceGroupManagerUpdatePolicy maxUnavailable"
              },
              "instanceRedistributionType": {
                "type": ["string"],
                "description": "InstanceGroupManagerUpdatePolicy instanceRedistributionType"
              }
            }
          },
          "google_cloud_compute_v1_IInstanceGroupManagerActionsSummary": {
            "description": "Properties of an InstanceGroupManagerActionsSummary.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "creatingWithoutRetries": {
                "type": ["number"],
                "description": "InstanceGroupManagerActionsSummary creatingWithoutRetries"
              },
              "restarting": {
                "type": ["number"],
                "description": "InstanceGroupManagerActionsSummary restarting"
              },
              "verifying": {
                "type": ["number"],
                "description": "InstanceGroupManagerActionsSummary verifying"
              },
              "deleting": {
                "type": ["number"],
                "description": "InstanceGroupManagerActionsSummary deleting"
              },
              "refreshing": {
                "type": ["number"],
                "description": "InstanceGroupManagerActionsSummary refreshing"
              },
              "abandoning": {
                "type": ["number"],
                "description": "InstanceGroupManagerActionsSummary abandoning"
              },
              "creating": {
                "type": ["number"],
                "description": "InstanceGroupManagerActionsSummary creating"
              },
              "recreating": {
                "type": ["number"],
                "description": "InstanceGroupManagerActionsSummary recreating"
              },
              "none": {
                "type": ["number"],
                "description": "InstanceGroupManagerActionsSummary none"
              }
            }
          },
          "google_cloud_compute_v1_IStatefulPolicy": {
            "description": "Properties of a StatefulPolicy.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "preservedState": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/google_cloud_compute_v1_IStatefulPolicyPreservedState"
                  }
                ],
                "description": "StatefulPolicy preservedState"
              }
            }
          },
          "google_cloud_compute_v1_StatefulPolicyPreservedStateDiskDevice_AutoDelete": {
            "type": "number",
            "description": "AutoDelete enum.",
            "enum": [0, 74175084, 95727719]
          },
          "google_cloud_compute_v1_IInstanceGroupManagerStatus": {
            "description": "Properties of an InstanceGroupManagerStatus.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "autoscaler": {
                "type": ["string"],
                "description": "InstanceGroupManagerStatus autoscaler"
              },
              "versionTarget": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/google_cloud_compute_v1_IInstanceGroupManagerStatusVersionTarget"
                  }
                ],
                "description": "InstanceGroupManagerStatus versionTarget"
              },
              "stateful": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/google_cloud_compute_v1_IInstanceGroupManagerStatusStateful"
                  }
                ],
                "description": "InstanceGroupManagerStatus stateful"
              },
              "isStable": {
                "type": ["boolean"],
                "description": "InstanceGroupManagerStatus isStable"
              }
            }
          },
          "google_cloud_compute_v1_IInstanceGroupManagerVersion": {
            "description": "Properties of an InstanceGroupManagerVersion.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "name": {
                "type": ["string"],
                "description": "InstanceGroupManagerVersion name"
              },
              "targetSize": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/google_cloud_compute_v1_IFixedOrPercent"
                  }
                ],
                "description": "InstanceGroupManagerVersion targetSize"
              },
              "instanceTemplate": {
                "type": ["string"],
                "description": "InstanceGroupManagerVersion instanceTemplate"
              }
            }
          },
          "google_cloud_compute_v1_IStatefulPolicyPreservedStateDiskDevice": {
            "description": "Properties of a StatefulPolicyPreservedStateDiskDevice.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "autoDelete": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/google_cloud_compute_v1_StatefulPolicyPreservedStateDiskDevice_AutoDelete"
                  },
                  { "type": "string", "const": "UNDEFINED_AUTO_DELETE" },
                  { "type": "string", "const": "NEVER" },
                  {
                    "type": "string",
                    "const": "ON_PERMANENT_INSTANCE_DELETION"
                  }
                ],
                "description": "StatefulPolicyPreservedStateDiskDevice autoDelete"
              }
            }
          },
          "google_cloud_compute_v1_IDistributionPolicy": {
            "description": "Properties of a DistributionPolicy.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "zones": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/google_cloud_compute_v1_IDistributionPolicyZoneConfiguration"
                    }
                  }
                ],
                "description": "DistributionPolicy zones"
              }
            }
          },
          "google_cloud_compute_v1_IInstanceGroupManagerStatusStateful": {
            "description": "Properties of an InstanceGroupManagerStatusStateful.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "hasStatefulConfig": {
                "type": ["boolean"],
                "description": "InstanceGroupManagerStatusStateful hasStatefulConfig"
              },
              "perInstanceConfigs": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/google_cloud_compute_v1_IInstanceGroupManagerStatusStatefulPerInstanceConfigs"
                  }
                ],
                "description": "InstanceGroupManagerStatusStateful perInstanceConfigs"
              }
            }
          },
          "google_cloud_compute_v1_IInstanceGroupManagerAutoHealingPolicy": {
            "description": "Properties of an InstanceGroupManagerAutoHealingPolicy.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "initialDelaySec": {
                "type": ["number"],
                "description": "InstanceGroupManagerAutoHealingPolicy initialDelaySec"
              },
              "healthCheck": {
                "type": ["string"],
                "description": "InstanceGroupManagerAutoHealingPolicy healthCheck"
              }
            }
          },
          "google_cloud_compute_v1_IFixedOrPercent": {
            "description": "Properties of a FixedOrPercent.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "calculated": {
                "type": ["number"],
                "description": "FixedOrPercent calculated"
              },
              "percent": {
                "type": ["number"],
                "description": "FixedOrPercent percent"
              },
              "fixed": {
                "type": ["number"],
                "description": "FixedOrPercent fixed"
              }
            }
          }
        },
        "properties": {
          "request": {
            "description": "Properties of a PatchRegionInstanceGroupManagerRequest.",
            "additionalProperties": false,
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "properties": {
              "instanceGroupManager": {
                "type": ["string"],
                "description": "PatchRegionInstanceGroupManagerRequest instanceGroupManager"
              },
              "project": {
                "type": ["string"],
                "description": "PatchRegionInstanceGroupManagerRequest project"
              },
              "instanceGroupManagerResource": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/google_cloud_compute_v1_IInstanceGroupManager"
                  }
                ],
                "description": "PatchRegionInstanceGroupManagerRequest instanceGroupManagerResource"
              },
              "region": {
                "type": ["string"],
                "description": "PatchRegionInstanceGroupManagerRequest region"
              },
              "requestId": {
                "type": ["string"],
                "description": "PatchRegionInstanceGroupManagerRequest requestId"
              }
            }
          }
        },
        "required": ["request"]
      },
      "outputSchema": {
        "description": "Properties of an Operation.",
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "definitions": {
          "google_cloud_compute_v1_IError": {
            "description": "Properties of an Error.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "errors": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/google_cloud_compute_v1_IErrors"
                    }
                  }
                ],
                "description": "Error errors"
              }
            }
          },
          "google_cloud_compute_v1_IErrors": {
            "description": "Properties of an Errors.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "message": {
                "type": ["string"],
                "description": "Errors message"
              },
              "location": {
                "type": ["string"],
                "description": "Errors location"
              },
              "code": { "type": ["string"], "description": "Errors code" }
            }
          },
          "google_cloud_compute_v1_Warnings_Code": {
            "type": "number",
            "description": "Code enum.",
            "enum": [
              0,
              150308440,
              391835586,
              346526230,
              369442967,
              451954443,
              175546307,
              329669423,
              417377419,
              481440678,
              344505463,
              324964999,
              383382887,
              464250446,
              243758146,
              417081265,
              105763924,
              30036744,
              39966469,
              3745539,
              496728641,
              168598460,
              275245642,
              268305617,
              390513439,
              13328052
            ]
          },
          "google_cloud_compute_v1_IData": {
            "description": "Properties of a Data.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "value": { "type": ["string"], "description": "Data value" },
              "key": { "type": ["string"], "description": "Data key" }
            }
          },
          "google_cloud_compute_v1_Operation_Status": {
            "type": "number",
            "description": "Status enum.",
            "enum": [0, 2104194, 35394935, 121282975]
          },
          "google_cloud_compute_v1_IWarnings": {
            "description": "Properties of a Warnings.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "data": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/google_cloud_compute_v1_IData"
                    }
                  }
                ],
                "description": "Warnings data"
              },
              "message": {
                "type": ["string"],
                "description": "Warnings message"
              },
              "code": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/google_cloud_compute_v1_Warnings_Code"
                  },
                  { "type": "string", "const": "UNDEFINED_CODE" },
                  { "type": "string", "const": "CLEANUP_FAILED" },
                  { "type": "string", "const": "DEPRECATED_RESOURCE_USED" },
                  { "type": "string", "const": "DEPRECATED_TYPE_USED" },
                  {
                    "type": "string",
                    "const": "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
                  },
                  { "type": "string", "const": "EXPERIMENTAL_TYPE_USED" },
                  { "type": "string", "const": "EXTERNAL_API_WARNING" },
                  { "type": "string", "const": "FIELD_VALUE_OVERRIDEN" },
                  { "type": "string", "const": "INJECTED_KERNELS_DEPRECATED" },
                  { "type": "string", "const": "LARGE_DEPLOYMENT_WARNING" },
                  { "type": "string", "const": "MISSING_TYPE_DEPENDENCY" },
                  {
                    "type": "string",
                    "const": "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
                  },
                  { "type": "string", "const": "NEXT_HOP_CANNOT_IP_FORWARD" },
                  { "type": "string", "const": "NEXT_HOP_INSTANCE_NOT_FOUND" },
                  {
                    "type": "string",
                    "const": "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
                  },
                  { "type": "string", "const": "NEXT_HOP_NOT_RUNNING" },
                  { "type": "string", "const": "NOT_CRITICAL_ERROR" },
                  { "type": "string", "const": "NO_RESULTS_ON_PAGE" },
                  { "type": "string", "const": "PARTIAL_SUCCESS" },
                  { "type": "string", "const": "REQUIRED_TOS_AGREEMENT" },
                  {
                    "type": "string",
                    "const": "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
                  },
                  { "type": "string", "const": "RESOURCE_NOT_DELETED" },
                  { "type": "string", "const": "SCHEMA_VALIDATION_IGNORED" },
                  {
                    "type": "string",
                    "const": "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
                  },
                  { "type": "string", "const": "UNDECLARED_PROPERTIES" },
                  { "type": "string", "const": "UNREACHABLE" }
                ],
                "description": "Warnings code"
              }
            }
          }
        },
        "properties": {
          "httpErrorMessage": {
            "type": ["string"],
            "description": "Operation httpErrorMessage"
          },
          "targetId": {
            "type": ["string"],
            "description": "Operation targetId"
          },
          "kind": { "type": ["string"], "description": "Operation kind" },
          "warnings": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/google_cloud_compute_v1_IWarnings"
                }
              }
            ],
            "description": "Operation warnings"
          },
          "description": {
            "type": ["string"],
            "description": "Operation description"
          },
          "error": {
            "anyOf": [
              { "$ref": "#/definitions/google_cloud_compute_v1_IError" }
            ],
            "description": "Operation error"
          },
          "statusMessage": {
            "type": ["string"],
            "description": "Operation statusMessage"
          },
          "selfLink": {
            "type": ["string"],
            "description": "Operation selfLink"
          },
          "insertTime": {
            "type": ["string"],
            "description": "Operation insertTime"
          },
          "httpErrorStatusCode": {
            "type": ["number"],
            "description": "Operation httpErrorStatusCode"
          },
          "zone": { "type": ["string"], "description": "Operation zone" },
          "targetLink": {
            "type": ["string"],
            "description": "Operation targetLink"
          },
          "creationTimestamp": {
            "type": ["string"],
            "description": "Operation creationTimestamp"
          },
          "name": { "type": ["string"], "description": "Operation name" },
          "progress": {
            "type": ["number"],
            "description": "Operation progress"
          },
          "operationType": {
            "type": ["string"],
            "description": "Operation operationType"
          },
          "startTime": {
            "type": ["string"],
            "description": "Operation startTime"
          },
          "endTime": { "type": ["string"], "description": "Operation endTime" },
          "id": { "type": ["string"], "description": "Operation id" },
          "region": { "type": ["string"], "description": "Operation region" },
          "clientOperationId": {
            "type": ["string"],
            "description": "Operation clientOperationId"
          },
          "user": { "type": ["string"], "description": "Operation user" },
          "status": {
            "anyOf": [
              {
                "$ref": "#/definitions/google_cloud_compute_v1_Operation_Status"
              },
              { "type": "string", "const": "UNDEFINED_STATUS" },
              { "type": "string", "const": "DONE" },
              { "type": "string", "const": "PENDING" },
              { "type": "string", "const": "RUNNING" }
            ],
            "description": "Operation status"
          }
        }
      },
      "method": "patch",
      "service": "compute",
      "displayName": "Patch",
      "active": true,
      "resourceType": "RegionInstanceGroupManagersClient",
      "output": {
        "required": [
          "kind",
          "startTime",
          "statusMessage",
          "name",
          "description",
          "progress",
          "creationTimestamp",
          "region",
          "insertTime",
          "httpErrorStatusCode",
          "targetId",
          "httpErrorMessage",
          "selfLink",
          "targetLink",
          "error.errors.code",
          "error.errors.location",
          "error.errors.message",
          "endTime",
          "operationType",
          "clientOperationId",
          "zone",
          "status",
          "id",
          "warnings.message",
          "warnings.code",
          "warnings.data.key",
          "warnings.data.value",
          "user"
        ],
        "optional": []
      },
      "rowType": "API",
      "params": {
        "request": {
          "instanceGroupManager": "<optional>",
          "project": "<optional>",
          "instanceGroupManagerResource": {
            "instanceTemplate": "<optional>",
            "autoHealingPolicies": [
              { "initialDelaySec": "<optional>", "healthCheck": "<optional>" }
            ],
            "kind": "<optional>",
            "distributionPolicy": { "zones": [{ "zone": "<optional>" }] },
            "description": "<optional>",
            "namedPorts": [{ "name": "<optional>", "port": "<optional>" }],
            "baseInstanceName": "<optional>",
            "targetPools": ["<optional>"],
            "instanceGroup": "<optional>",
            "selfLink": "<optional>",
            "targetSize": "<optional>",
            "statefulPolicy": {
              "preservedState": {
                "disks": { "magna_62": { "autoDelete": "<optional>" } }
              }
            },
            "versions": [
              {
                "name": "<optional>",
                "targetSize": {
                  "calculated": "<optional>",
                  "percent": "<optional>",
                  "fixed": "<optional>"
                },
                "instanceTemplate": "<optional>"
              }
            ],
            "zone": "<optional>",
            "updatePolicy": {
              "maxSurge": {
                "calculated": "<optional>",
                "percent": "<optional>",
                "fixed": "<optional>"
              },
              "minimalAction": "<optional>",
              "type": "<optional>",
              "replacementMethod": "<optional>",
              "maxUnavailable": {
                "calculated": "<optional>",
                "percent": "<optional>",
                "fixed": "<optional>"
              },
              "instanceRedistributionType": "<optional>"
            },
            "currentActions": {
              "restarting": "<optional>",
              "verifying": "<optional>",
              "creatingWithoutRetries": "<optional>",
              "deleting": "<optional>",
              "refreshing": "<optional>",
              "abandoning": "<optional>",
              "creating": "<optional>",
              "recreating": "<optional>",
              "none": "<optional>"
            },
            "name": "<optional>",
            "fingerprint": "<optional>",
            "creationTimestamp": "<optional>",
            "id": "<optional>",
            "region": "<optional>",
            "status": {
              "autoscaler": "<optional>",
              "versionTarget": { "isReached": "<optional>" },
              "stateful": {
                "hasStatefulConfig": "<optional>",
                "perInstanceConfigs": { "allEffective": "<optional>" }
              },
              "isStable": "<optional>"
            }
          },
          "region": "<optional>",
          "requestId": "<optional>"
        }
      },
      "updatedAt": "2021-08-18T07:24:15.336Z",
      "_id": "6c0adbab",
      "displayResourceType": "Region Instance Group Managers",
      "input": { "required": ["request"], "optional": [] },
      "operationType": "MODIFY",
      "displayService": "Google Compute Engine",
      "addonCount": 10,
      "relationCount": 16,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+93 -33"
    },
    {
      "isAction": true,
      "isRoot": false,
      "properties": {},
      "createdAt": "2021-05-12T14:10:15.663Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": [
          "resourceGroupName",
          "accountName",
          "liveEventName",
          "parameters"
        ],
        "properties": {
          "resourceGroupName": { "type": "string" },
          "accountName": { "type": "string" },
          "parameters": {
            "description": "The Live Event.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "preview": {
                "description": "The Live Event preview.",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "accessControl": {
                    "description": "The access control for LiveEvent preview.",
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "ip": {
                        "description": "The IP access control properties.",
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "allow": {
                            "type": "array",
                            "description": "The IP allow list.",
                            "items": {
                              "description": "The IP address range in the CIDR scheme.",
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The friendly name for the IP address range."
                                },
                                "subnetPrefixLength": {
                                  "type": "number",
                                  "description": "The subnet mask prefix length (see CIDR notation)."
                                },
                                "address": {
                                  "type": "string",
                                  "description": "The IP address."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "endpoints": {
                    "type": "array",
                    "description": "The endpoints for preview.",
                    "items": {
                      "description": "The Live Event endpoint.",
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "protocol": {
                          "type": "string",
                          "description": "The endpoint protocol."
                        },
                        "url": {
                          "type": "string",
                          "description": "The endpoint URL."
                        }
                      }
                    }
                  },
                  "alternativeMediaId": {
                    "type": "string",
                    "description": "An Alternative Media Identifier associated with the StreamingLocator created for the preview.\nThis value is specified at creation time and cannot be updated.  The identifier can be used in\nthe CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the\nStreamingPolicy specified in the StreamingPolicyName field."
                  },
                  "streamingPolicyName": {
                    "type": "string",
                    "description": "The name of streaming policy used for the LiveEvent preview.  This value is specified at\ncreation time and cannot be updated."
                  },
                  "previewLocator": {
                    "type": "string",
                    "description": "The identifier of the preview locator in Guid format.  Specifying this at creation time allows\nthe caller to know the preview locator url before the event is created.  If omitted, the\nservice will generate a random identifier.  This value cannot be updated once the live event\nis created."
                  }
                }
              },
              "input": {
                "description": "The Live Event input.",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "accessControl": {
                    "description": "The access control for LiveEvent Input.",
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "ip": {
                        "description": "The IP access control properties.",
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "allow": {
                            "type": "array",
                            "description": "The IP allow list.",
                            "items": {
                              "description": "The IP address range in the CIDR scheme.",
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The friendly name for the IP address range."
                                },
                                "subnetPrefixLength": {
                                  "type": "number",
                                  "description": "The subnet mask prefix length (see CIDR notation)."
                                },
                                "address": {
                                  "type": "string",
                                  "description": "The IP address."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "endpoints": {
                    "type": "array",
                    "description": "The input endpoints for the Live Event.",
                    "items": {
                      "description": "The Live Event endpoint.",
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "protocol": {
                          "type": "string",
                          "description": "The endpoint protocol."
                        },
                        "url": {
                          "type": "string",
                          "description": "The endpoint URL."
                        }
                      }
                    }
                  },
                  "keyFrameIntervalDuration": {
                    "type": "string",
                    "description": "ISO 8601 timespan duration of the key frame interval duration."
                  },
                  "accessToken": {
                    "type": "string",
                    "description": "A unique identifier for a stream.  This can be specified at creation time but cannot be\nupdated.  If omitted, the service will generate a unique value."
                  },
                  "streamingProtocol": {
                    "type": "string",
                    "description": "The streaming protocol for the Live Event.  This is specified at creation time and cannot be\nupdated. Possible values include: 'FragmentedMP4', 'RTMP'",
                    "enum": ["FragmentedMP4", "RTMP"]
                  }
                },
                "required": ["streamingProtocol"]
              },
              "vanityUrl": {
                "type": "boolean",
                "description": "Specifies whether to use a vanity url with the Live Event.  This value is specified at\ncreation time and cannot be updated."
              },
              "streamOptions": {
                "type": "array",
                "description": "The options to use for the LiveEvent.  This value is specified at creation time and cannot be\nupdated.",
                "items": { "type": "string", "enum": ["Default", "LowLatency"] }
              },
              "description": {
                "type": "string",
                "description": "The Live Event description."
              },
              "location": {
                "type": "string",
                "description": "The Azure Region of the resource."
              },
              "encoding": {
                "description": "The Live Event encoding.",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "presetName": {
                    "type": "string",
                    "description": "The encoding preset name.  This value is specified at creation time and cannot be updated."
                  },
                  "encodingType": {
                    "type": "string",
                    "description": "The encoding type for Live Event.  This value is specified at creation time and cannot be\nupdated. Possible values include: 'None', 'Basic', 'Standard', 'Premium1080p'",
                    "enum": ["Basic", "None", "Premium1080p", "Standard"]
                  }
                }
              },
              "crossSiteAccessPolicies": {
                "description": "The Live Event access policies.",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "clientAccessPolicy": {
                    "type": "string",
                    "description": "The content of clientaccesspolicy.xml used by Silverlight."
                  },
                  "crossDomainPolicy": {
                    "type": "string",
                    "description": "The content of crossdomain.xml used by Silverlight."
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": { "type": "string" }
              }
            },
            "required": ["input"]
          },
          "liveEventName": { "type": "string" }
        },
        "required": [
          "resourceGroupName",
          "accountName",
          "liveEventName",
          "parameters"
        ]
      },
      "outputSchema": {
        "description": "The live event.",
        "additionalProperties": false,
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "preview": {
            "description": "Live event preview settings. Preview allows live event producers to preview the live streaming\ncontent without creating any live output.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "accessControl": {
                "description": "The access control for live event preview.",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ip": {
                    "description": "The IP access control properties.",
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "allow": {
                        "type": "array",
                        "description": "The IP allow list.",
                        "items": {
                          "description": "The IP address range in the CIDR scheme.",
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The friendly name for the IP address range."
                            },
                            "subnetPrefixLength": {
                              "type": "number",
                              "description": "The subnet mask prefix length (see CIDR notation)."
                            },
                            "address": {
                              "type": "string",
                              "description": "The IP address."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "endpoints": {
                "type": "array",
                "description": "The endpoints for preview. Do not share the preview URL with the live event audience.",
                "items": {
                  "description": "The live event endpoint.",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "protocol": {
                      "type": "string",
                      "description": "The endpoint protocol."
                    },
                    "url": {
                      "type": "string",
                      "description": "The endpoint URL."
                    }
                  }
                }
              },
              "alternativeMediaId": {
                "type": "string",
                "description": "An alternative media identifier associated with the streaming locator created for the preview.\nThis value is specified at creation time and cannot be updated. The identifier can be used in\nthe CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the\nStreamingPolicy specified in the StreamingPolicyName field."
              },
              "streamingPolicyName": {
                "type": "string",
                "description": "The name of streaming policy used for the live event preview. This value is specified at\ncreation time and cannot be updated."
              },
              "previewLocator": {
                "type": "string",
                "description": "The identifier of the preview locator in Guid format. Specifying this at creation time allows\nthe caller to know the preview locator url before the event is created. If omitted, the\nservice will generate a random identifier. This value cannot be updated once the live event is\ncreated."
              }
            }
          },
          "hostnamePrefix": {
            "type": "string",
            "description": "When useStaticHostname is set to true, the hostnamePrefix specifies the first part of the\nhostname assigned to the live event preview and ingest endpoints. The final hostname would be\na combination of this prefix, the media service account name and a short code for the Azure\nMedia Services data center."
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "description": "The creation time for the live event\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
          },
          "streamOptions": {
            "type": "array",
            "description": "The options to use for the LiveEvent. This value is specified at creation time and cannot be\nupdated. The valid values for the array entry values are 'Default' and 'LowLatency'.",
            "items": { "type": "string", "enum": ["Default", "LowLatency"] }
          },
          "description": {
            "type": "string",
            "description": "A description for the live event."
          },
          "transcriptions": {
            "type": "array",
            "description": "Live transcription settings for the live event. See\nhttps://go.microsoft.com/fwlink/?linkid=2133742 for more information about the live\ntranscription feature.",
            "items": {
              "description": "Describes the transcription tracks in the output of a live event, generated using speech-to-text\ntranscription. This property is reserved for future use, any value set on this property will be\nignored.",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "outputTranscriptionTrack": {
                  "description": "Describes a transcription track in the output of a live event, generated using speech-to-text\ntranscription. This property is reserved for future use, any value set on this property will\nbe ignored.",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "trackName": {
                      "type": "string",
                      "description": "The output track name. This property is reserved for future use, any value set on this\nproperty will be ignored."
                    }
                  },
                  "required": ["trackName"]
                },
                "language": {
                  "type": "string",
                  "description": "Specifies the language (locale) to be used for speech-to-text transcription – it should match\nthe spoken language in the audio track. The value should be in BCP-47 format (e.g: 'en-US').\nSee https://go.microsoft.com/fwlink/?linkid=2133742 for more information about the live\ntranscription feature and the list of supported languages."
                },
                "inputTrackSelection": {
                  "type": "array",
                  "description": "Provides a mechanism to select the audio track in the input live feed, to which speech-to-text\ntranscription is applied. This property is reserved for future use, any value set on this\nproperty will be ignored.",
                  "items": {
                    "description": "A track selection condition. This property is reserved for future use, any value set on this\nproperty will be ignored.",
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "property": {
                        "type": "string",
                        "description": "Property name to select. This property is reserved for future use, any value set on this\nproperty will be ignored."
                      },
                      "operation": {
                        "type": "string",
                        "description": "Comparing operation. This property is reserved for future use, any value set on this property\nwill be ignored."
                      },
                      "value": {
                        "type": "string",
                        "description": "Property value to select. This property is reserved for future use, any value set on this\nproperty will be ignored."
                      }
                    }
                  }
                }
              }
            }
          },
          "provisioningState": {
            "type": "string",
            "description": "The provisioning state of the live event.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
          },
          "encoding": {
            "description": "Encoding settings for the live event. It configures whether a live encoder is used for the\nlive event and settings for the live encoder if it is used.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "keyFrameInterval": {
                "type": "string",
                "description": "Use an ISO 8601 time value between 0.5 to 20 seconds to specify the output fragment length for\nthe video and audio tracks of an encoding live event. For example, use PT2S to indicate 2\nseconds. For the video track it also defines the key frame interval, or the length of a GoP\n(group of pictures).   If this value is not set for an encoding live event, the fragment\nduration defaults to 2 seconds. The value cannot be set for pass-through live events."
              },
              "stretchMode": {
                "type": "string",
                "description": "Specifies how the input video will be resized to fit the desired output resolution(s). Default\nis None. Possible values include: 'None', 'AutoSize', 'AutoFit'",
                "enum": ["AutoFit", "AutoSize", "None"]
              },
              "presetName": {
                "type": "string",
                "description": "The optional encoding preset name, used when encodingType is not None. This value is specified\nat creation time and cannot be updated. If the encodingType is set to Standard, then the\ndefault preset name is ‘Default720p’. Else if the encodingType is set to Premium1080p, the\ndefault preset is ‘Default1080p’."
              },
              "encodingType": {
                "type": "string",
                "description": "Live event type. When encodingType is set to None, the service simply passes through the\nincoming video and audio layer(s) to the output. When encodingType is set to Standard or\nPremium1080p, a live encoder transcodes the incoming stream into multiple bitrates or layers.\nSee https://go.microsoft.com/fwlink/?linkid=2095101 for more information. This property cannot\nbe modified after the live event is created. Possible values include: 'None', 'Standard',\n'Premium1080p'",
                "enum": ["None", "Premium1080p", "Standard"]
              }
            }
          },
          "useStaticHostname": {
            "type": "boolean",
            "description": "Specifies whether a static hostname would be assigned to the live event preview and ingest\nendpoints. This value can only be updated if the live event is in Standby state"
          },
          "type": {
            "type": "string",
            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or\n\"Microsoft.Storage/storageAccounts\"\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
          },
          "tags": {
            "type": "object",
            "description": "Resource tags.",
            "additionalProperties": { "type": "string" }
          },
          "input": {
            "description": "Live event input settings. It defines how the live event receives input from a contribution\nencoder.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "accessControl": {
                "description": "Access control for live event input.",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ip": {
                    "description": "The IP access control properties.",
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "allow": {
                        "type": "array",
                        "description": "The IP allow list.",
                        "items": {
                          "description": "The IP address range in the CIDR scheme.",
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The friendly name for the IP address range."
                            },
                            "subnetPrefixLength": {
                              "type": "number",
                              "description": "The subnet mask prefix length (see CIDR notation)."
                            },
                            "address": {
                              "type": "string",
                              "description": "The IP address."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "endpoints": {
                "type": "array",
                "description": "The input endpoints for the live event.",
                "items": {
                  "description": "The live event endpoint.",
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "protocol": {
                      "type": "string",
                      "description": "The endpoint protocol."
                    },
                    "url": {
                      "type": "string",
                      "description": "The endpoint URL."
                    }
                  }
                }
              },
              "keyFrameIntervalDuration": {
                "type": "string",
                "description": "ISO 8601 time duration of the key frame interval duration of the input. This value sets the\nEXT-X-TARGETDURATION property in the HLS output. For example, use PT2S to indicate 2 seconds.\nLeave the value empty for encoding live events."
              },
              "accessToken": {
                "type": "string",
                "description": "A UUID in string form to uniquely identify the stream. This can be specified at creation time\nbut cannot be updated. If omitted, the service will generate a unique value."
              },
              "streamingProtocol": {
                "type": "string",
                "description": "The input protocol for the live event. This is specified at creation time and cannot be\nupdated. Possible values include: 'FragmentedMP4', 'RTMP'",
                "enum": ["FragmentedMP4", "RTMP"]
              }
            },
            "required": ["streamingProtocol"]
          },
          "systemData": {
            "description": "The system metadata relating to this resource.\n**NOTE: This property will not be serialized. It can only be populated by the server.**",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp of resource creation (UTC)."
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time",
                "description": "The timestamp of resource last modification (UTC)"
              },
              "createdBy": {
                "type": "string",
                "description": "The identity that created the resource."
              },
              "lastModifiedByType": {
                "type": "string",
                "description": "The type of identity that last modified the resource. Possible values include: 'User',\n'Application', 'ManagedIdentity', 'Key'",
                "enum": ["Application", "Key", "ManagedIdentity", "User"]
              },
              "createdByType": {
                "type": "string",
                "description": "The type of identity that created the resource. Possible values include: 'User',\n'Application', 'ManagedIdentity', 'Key'",
                "enum": ["Application", "Key", "ManagedIdentity", "User"]
              },
              "lastModifiedBy": {
                "type": "string",
                "description": "The identity that last modified the resource."
              }
            }
          },
          "name": {
            "type": "string",
            "description": "The name of the resource\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
          },
          "resourceState": {
            "type": "string",
            "description": "The resource state of the live event. See https://go.microsoft.com/fwlink/?linkid=2139012 for\nmore information. Possible values include: 'Stopped', 'Allocating', 'StandBy', 'Starting',\n'Running', 'Stopping', 'Deleting'\n**NOTE: This property will not be serialized. It can only be populated by the server.**",
            "enum": [
              "Allocating",
              "Deleting",
              "Running",
              "StandBy",
              "Starting",
              "Stopped",
              "Stopping"
            ]
          },
          "location": {
            "type": "string",
            "description": "The geo-location where the resource lives"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "description": "The last modified time of the live event.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
          },
          "id": {
            "type": "string",
            "description": "Fully qualified resource ID for the resource. Ex -\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
          },
          "crossSiteAccessPolicies": {
            "description": "Live event cross site access policies.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "clientAccessPolicy": {
                "type": "string",
                "description": "The content of clientaccesspolicy.xml used by Silverlight."
              },
              "crossDomainPolicy": {
                "type": "string",
                "description": "The content of crossdomain.xml used by Silverlight."
              }
            }
          }
        },
        "required": ["input", "location"]
      },
      "method": "update",
      "service": "mediaservices",
      "displayName": " Live  Events ",
      "active": true,
      "resourceType": "LiveEvents",
      "output": {
        "required": [
          "input.streamingProtocol",
          "input.accessControl.ip.allow.name",
          "input.accessControl.ip.allow.address",
          "input.accessControl.ip.allow.subnetPrefixLength",
          "input.keyFrameIntervalDuration",
          "input.accessToken",
          "input.endpoints.protocol",
          "input.endpoints.url",
          "location",
          "description",
          "preview.endpoints.protocol",
          "preview.endpoints.url",
          "preview.accessControl.ip.allow.name",
          "preview.accessControl.ip.allow.address",
          "preview.accessControl.ip.allow.subnetPrefixLength",
          "preview.previewLocator",
          "preview.streamingPolicyName",
          "preview.alternativeMediaId",
          "encoding.encodingType",
          "encoding.presetName",
          "encoding.stretchMode",
          "encoding.keyFrameInterval",
          "transcriptions.language",
          "transcriptions.inputTrackSelection.property",
          "transcriptions.inputTrackSelection.operation",
          "transcriptions.inputTrackSelection.value",
          "transcriptions.outputTranscriptionTrack.trackName",
          "provisioningState",
          "resourceState",
          "crossSiteAccessPolicies.clientAccessPolicy",
          "crossSiteAccessPolicies.crossDomainPolicy",
          "useStaticHostname",
          "hostnamePrefix",
          "streamOptions",
          "created",
          "lastModified",
          "systemData.createdBy",
          "systemData.createdByType",
          "systemData.createdAt",
          "systemData.lastModifiedBy",
          "systemData.lastModifiedByType",
          "systemData.lastModifiedAt",
          "id",
          "name",
          "type"
        ],
        "optional": []
      },
      "rowType": "API",
      "params": {
        "resourceGroupName": "required",
        "accountName": "required",
        "parameters": {
          "preview": {
            "accessControl": {
              "ip": {
                "allow": [
                  {
                    "name": "<optional>",
                    "subnetPrefixLength": "<optional>",
                    "address": "<optional>"
                  }
                ]
              }
            },
            "endpoints": [{ "protocol": "<optional>", "url": "<optional>" }],
            "alternativeMediaId": "<optional>",
            "streamingPolicyName": "<optional>",
            "previewLocator": "<optional>"
          },
          "input": {
            "accessControl": {
              "ip": {
                "allow": [
                  {
                    "name": "<optional>",
                    "subnetPrefixLength": "<optional>",
                    "address": "<optional>"
                  }
                ]
              }
            },
            "endpoints": [{ "protocol": "<optional>", "url": "<optional>" }],
            "keyFrameIntervalDuration": "<optional>",
            "accessToken": "<optional>",
            "streamingProtocol": "required"
          },
          "vanityUrl": "<optional>",
          "streamOptions": ["<optional>"],
          "description": "<optional>",
          "location": "<optional>",
          "encoding": {
            "presetName": "<optional>",
            "encodingType": "<optional>"
          },
          "crossSiteAccessPolicies": {
            "clientAccessPolicy": "<optional>",
            "crossDomainPolicy": "<optional>"
          }
        },
        "liveEventName": "required"
      },
      "updatedAt": "2021-05-12T14:10:40.783Z",
      "_id": "d16a0d41",
      "input": {
        "required": [
          "resourceGroupName",
          "accountName",
          "liveEventName",
          "parameters"
        ],
        "optional": []
      },
      "operationType": "MODIFY",
      "displayService": "mediaservices",
      "addonCount": 5,
      "relationCount": 10,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+282 -90"
    },
    {
      "relations": [
        {
          "rKey": "DomainId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:ES:ElasticsearchDomains:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "DomainName",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:CloudFront:StreamingDistributionConfig:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "DomainName",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:CloudSearch:Domains:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "DomainName",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:ES:ElasticsearchDomain:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "DomainName",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:ES:DomainNames:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "DomainName",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:Route53Domains:DomainDetail:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "DomainName",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:Route53Domains:DomainSuggestions:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "DomainName",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:Route53Domains:Domains:${value}`",
          "enabled": false,
          "direction": "forward"
        }
      ],
      "aliases": {},
      "isDependent": false,
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": {
        "resultWrapper": "DescribeDomainsResult",
        "type": "structure",
        "required": ["DomainStatusList"],
        "members": {
          "DomainStatusList": {
            "type": "list",
            "member": {
              "type": "structure",
              "required": ["DomainId", "DomainName", "RequiresIndexDocuments"],
              "members": {
                "DocService": {
                  "type": "structure",
                  "members": { "Endpoint": { "type": "string" } }
                },
                "DomainName": { "type": "string" },
                "SearchInstanceType": { "type": "string" },
                "SearchPartitionCount": { "type": "integer" },
                "Created": { "type": "boolean" },
                "RequiresIndexDocuments": { "type": "boolean" },
                "Processing": { "type": "boolean" },
                "SearchInstanceCount": { "type": "integer" },
                "DomainId": { "type": "string" },
                "Limits": {
                  "type": "structure",
                  "required": [
                    "MaximumReplicationCount",
                    "MaximumPartitionCount"
                  ],
                  "members": {
                    "MaximumReplicationCount": { "type": "integer" },
                    "MaximumPartitionCount": { "type": "integer" }
                  }
                },
                "SearchService": {
                  "type": "structure",
                  "members": { "Endpoint": { "type": "string" } }
                },
                "Deleted": { "type": "boolean" },
                "ARN": { "type": "string" }
              }
            }
          }
        }
      },
      "method": "describeDomains",
      "displayName": "Domains",
      "active": true,
      "rowType": "API",
      "params": { "DomainNames": ["<optional1>", "<optional2>"] },
      "_id": "d5ee2cdb",
      "input": { "required": [], "optional": ["DomainNames"] },
      "areValidParams": true,
      "isAction": false,
      "primaryKeyField": "DomainStatusList.DomainName",
      "isRoot": true,
      "customDef": {
        "costKeyDef": "return `${data.customArn}`.replace(/:/g, '-')",
        "arnDef": "return `${data.ARN}`"
      },
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:53:58.869Z",
      "inputSchema": {
        "type": "structure",
        "members": {
          "DomainNames": { "type": "list", "member": { "type": "string" } }
        }
      },
      "historyKeys": [],
      "service": "CloudSearch",
      "resourceType": "CLOUDSEARCH_DOMAINS",
      "output": {
        "required": [
          "DomainStatusList",
          "DomainStatusList.DomainId",
          "DomainStatusList.DomainName",
          "DomainStatusList.RequiresIndexDocuments",
          "DomainStatusList.Limits.MaximumReplicationCount",
          "DomainStatusList.Limits.MaximumPartitionCount"
        ],
        "optional": [
          "DomainStatusList.ARN",
          "DomainStatusList.Created",
          "DomainStatusList.Deleted",
          "DomainStatusList.DocService",
          "DomainStatusList.SearchService",
          "DomainStatusList.Processing",
          "DomainStatusList.SearchInstanceType",
          "DomainStatusList.SearchPartitionCount",
          "DomainStatusList.SearchInstanceCount",
          "DomainStatusList.Limits",
          "DomainStatusList.DocService.Endpoint",
          "DomainStatusList.SearchService.Endpoint"
        ]
      },
      "updatedAt": "2021-07-29T07:54:40.988Z",
      "normalisations": [],
      "operationType": "DISCOVER",
      "displayService": "CloudSearch",
      "addonCount": 18,
      "relationCount": 7,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+217 -125"
    },
    {
      "isAction": false,
      "isRoot": false,
      "properties": { "client": "AzureStackManagementClient" },
      "createdAt": "2021-05-12T14:06:11.931Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": [
          "resourceGroup",
          "registrationName",
          "options",
          "callback"
        ],
        "properties": {
          "resourceGroup": { "type": "string" },
          "registrationName": { "type": "string" }
        },
        "required": ["resourceGroup", "registrationName"]
      },
      "outputSchema": {
        "description": "The resource containing the Azure Stack activation key.",
        "additionalProperties": false,
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "activationKey": {
            "type": "string",
            "description": "Azure Stack activation key."
          }
        }
      },
      "method": "getActivationKey",
      "service": "azurestack",
      "displayName": "Registrations",
      "active": false,
      "resourceType": "registrations",
      "output": { "required": ["activationKey"], "optional": [] },
      "rowType": "API",
      "params": { "resourceGroup": "required", "registrationName": "required" },
      "updatedAt": "2021-05-12T14:06:38.905Z",
      "_id": "20ed930b",
      "input": {
        "required": [
          "resourceGroup",
          "registrationName",
          "options",
          "callback"
        ],
        "optional": []
      },
      "operationType": "DISCOVER",
      "displayService": "azurestack",
      "addonCount": 8,
      "relationCount": 9,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+392 -41"
    },
    {
      "linkedMethod": "describeSpotFleetInstances",
      "relations": [
        {
          "rKey": "ActiveInstancesInstanceId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:AutoScaling:AutoScalingInstances:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "ActiveInstancesInstanceId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:EC2:ClassicLinkInstances:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "ActiveInstancesInstanceId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:EC2:InstanceAttribute:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "ActiveInstancesInstanceId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:EC2:InstanceStatus:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "ActiveInstancesInstanceId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:EC2:Instances:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "ActiveInstancesInstanceId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:ElasticBeanstalk:InstancesHealth:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "ActiveInstancesInstanceId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:ELB:InstanceHealth:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "ActiveInstancesInstanceId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:GameLift:InstanceAccess:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "ActiveInstancesInstanceId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:OpsWorks:ElasticIps:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "ActiveInstancesInstanceId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:OpsWorks:Instances:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "ActiveInstancesInstanceId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:OpsWorks:TimeBasedAutoScaling:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "ActiveInstancesInstanceId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:SSM:EffectiveInstanceAssociations:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "ActiveInstancesInstanceId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:SSM:InstanceAssociationsStatus:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "ActiveInstancesInstanceId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:SSM:InstancePatchStates:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "ActiveInstancesInstanceId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:SSM:Associations:${value}`",
          "enabled": false,
          "direction": "forward"
        },
        {
          "rKey": "ActiveInstancesSpotInstanceRequestId",
          "rValueType": "inline",
          "rKeyType": "static",
          "rValue": "`dataforest:${user}:${region}:EC2:SpotInstanceRequests:${value}`",
          "enabled": false,
          "direction": "forward"
        }
      ],
      "aliases": {},
      "isDependent": true,
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": {
        "type": "structure",
        "members": {
          "ActiveInstances": {
            "type": "list",
            "member": {
              "type": "structure",
              "members": {
                "InstanceHealth": { "type": "string" },
                "SpotInstanceRequestId": { "type": "string" },
                "InstanceType": { "type": "string" },
                "InstanceId": { "type": "string" }
              }
            }
          },
          "NextToken": { "type": "string" },
          "SpotFleetRequestId": { "type": "string" }
        }
      },
      "method": "describeSpotFleetRequests",
      "displayName": "Spot Fleet Instances",
      "linkedService": "EC2",
      "active": true,
      "rowType": "ADDON",
      "params": { "SpotFleetRequestId": "obj.SpotFleetRequestId" },
      "_id": "f5fae3a",
      "input": { "required": ["SpotFleetRequestId"], "optional": [] },
      "areValidParams": true,
      "isAction": false,
      "primaryKeyField": "SpotFleetRequestId",
      "isRoot": false,
      "customDef": {},
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:54:08.313Z",
      "inputSchema": {
        "type": "structure",
        "required": ["SpotFleetRequestId"],
        "members": {
          "DryRun": { "type": "boolean" },
          "NextToken": { "type": "string" },
          "SpotFleetRequestId": { "type": "string" },
          "MaxResults": { "type": "integer" }
        }
      },
      "historyKeys": [],
      "service": "EC2",
      "resourceType": "EC2_SPOT_FLEET_REQUESTS",
      "linkedResourceType": "EC2_SPOT_FLEET_INSTANCES",
      "output": {
        "required": [],
        "optional": [
          "ActiveInstances",
          "SpotFleetRequestId",
          "ActiveInstances.InstanceId",
          "ActiveInstances.InstanceType",
          "ActiveInstances.SpotInstanceRequestId",
          "ActiveInstances.InstanceHealth"
        ]
      },
      "updatedAt": "2021-07-29T07:54:50.388Z",
      "normalisations": [],
      "operationType": "DISCOVER",
      "displayService": "EC2",
      "addonCount": 12,
      "relationCount": 11,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+479 -71"
    },
    {
      "isAction": true,
      "isRoot": false,
      "properties": {},
      "createdAt": "2021-05-12T14:10:11.085Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": [
          "resourceGroupName",
          "stepName",
          "options",
          "callback"
        ],
        "properties": {
          "stepName": { "type": "string" },
          "resourceGroupName": { "type": "string" }
        },
        "required": ["resourceGroupName", "stepName"]
      },
      "outputSchema": {},
      "method": "deleteMethod",
      "service": "deploymentmanager",
      "displayName": " Steps ",
      "active": true,
      "resourceType": "Steps",
      "output": { "required": [], "optional": [] },
      "rowType": "API",
      "params": { "stepName": "required", "resourceGroupName": "required" },
      "updatedAt": "2021-05-12T14:10:35.549Z",
      "_id": "b9ab1f05",
      "input": {
        "required": ["resourceGroupName", "stepName", "options", "callback"],
        "optional": []
      },
      "operationType": "DELETE",
      "displayService": "deploymentmanager",
      "addonCount": 3,
      "relationCount": 9,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+181 -158"
    },
    {
      "isAction": true,
      "isRoot": false,
      "properties": { "package": "@google-cloud/spanner" },
      "createdAt": "2021-08-18T07:24:03.988Z",
      "cloudProvider": "GCP",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": ["name"],
        "definitions": {},
        "properties": { "name": { "type": "string" } },
        "required": ["name"]
      },
      "outputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Represents a Backup.",
        "additionalProperties": false,
        "type": "object",
        "definitions": {
          "google_rpc_IStatus": {
            "description": "Properties of a Status.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "message": {
                "type": ["string"],
                "description": "Status message"
              },
              "details": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": { "$ref": "#/definitions/google_protobuf_IAny" }
                  }
                ],
                "description": "Status details"
              },
              "code": { "type": ["number"], "description": "Status code" }
            }
          },
          "google_protobuf_IAny": {
            "description": "Properties of an Any.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "value": {
                "anyOf": [
                  {
                    "additionalProperties": { "type": "number" },
                    "type": "object",
                    "properties": {
                      "byteLength": { "type": "number" },
                      "length": { "type": "number" },
                      "BYTES_PER_ELEMENT": { "type": "number" },
                      "buffer": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": { "byteLength": { "type": "number" } },
                        "required": ["byteLength"]
                      },
                      "byteOffset": { "type": "number" }
                    },
                    "required": [
                      "BYTES_PER_ELEMENT",
                      "buffer",
                      "byteLength",
                      "byteOffset",
                      "length"
                    ]
                  },
                  { "type": "string" }
                ],
                "description": "Any value"
              },
              "type_url": { "type": ["string"], "description": "Any type_url" }
            }
          },
          "google_spanner_admin_database_v1_Backup_State": {
            "type": "number",
            "description": "State enum.",
            "enum": [0, 1, 2]
          },
          "google_spanner_admin_database_v1_EncryptionInfo_Type": {
            "type": "number",
            "description": "Type enum.",
            "enum": [0, 1, 2]
          },
          "google_spanner_admin_database_v1_IEncryptionInfo": {
            "description": "Properties of an EncryptionInfo.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "encryptionType": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/google_spanner_admin_database_v1_EncryptionInfo_Type"
                  },
                  { "type": "string", "const": "TYPE_UNSPECIFIED" },
                  { "type": "string", "const": "GOOGLE_DEFAULT_ENCRYPTION" },
                  { "type": "string", "const": "CUSTOMER_MANAGED_ENCRYPTION" }
                ],
                "description": "EncryptionInfo encryptionType"
              },
              "kmsKeyVersion": {
                "type": ["string"],
                "description": "EncryptionInfo kmsKeyVersion"
              },
              "encryptionStatus": {
                "anyOf": [{ "$ref": "#/definitions/google_rpc_IStatus" }],
                "description": "EncryptionInfo encryptionStatus"
              }
            }
          },
          "Long_Long": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "low": {
                "type": "number",
                "description": "The low 32 bits as a signed value."
              },
              "unsigned": {
                "type": "boolean",
                "description": "Whether unsigned or not."
              },
              "high": {
                "type": "number",
                "description": "The high 32 bits as a signed value."
              }
            },
            "required": ["high", "low", "unsigned"]
          },
          "google_protobuf_ITimestamp": {
            "description": "Properties of a Timestamp.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "nanos": { "type": ["number"], "description": "Timestamp nanos" },
              "seconds": {
                "anyOf": [
                  { "type": "number" },
                  { "$ref": "#/definitions/Long_Long" },
                  { "type": "string" }
                ],
                "description": "Timestamp seconds"
              }
            }
          }
        },
        "properties": {
          "encryptionInfo": {
            "anyOf": [
              {
                "$ref": "#/definitions/google_spanner_admin_database_v1_IEncryptionInfo"
              }
            ],
            "description": "Backup encryptionInfo."
          },
          "database": { "type": "string", "description": "Backup database." },
          "expireTime": {
            "anyOf": [{ "$ref": "#/definitions/google_protobuf_ITimestamp" }],
            "description": "Backup expireTime."
          },
          "createTime": {
            "anyOf": [{ "$ref": "#/definitions/google_protobuf_ITimestamp" }],
            "description": "Backup createTime."
          },
          "referencingDatabases": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Backup referencingDatabases."
          },
          "versionTime": {
            "anyOf": [{ "$ref": "#/definitions/google_protobuf_ITimestamp" }],
            "description": "Backup versionTime."
          },
          "name": { "type": "string", "description": "Backup name." },
          "state": {
            "anyOf": [
              {
                "$ref": "#/definitions/google_spanner_admin_database_v1_Backup_State"
              },
              { "type": "string", "const": "STATE_UNSPECIFIED" },
              { "type": "string", "const": "CREATING" },
              { "type": "string", "const": "READY" }
            ],
            "description": "Backup state."
          },
          "sizeBytes": {
            "anyOf": [
              { "type": "number" },
              { "$ref": "#/definitions/Long_Long" },
              { "type": "string" }
            ],
            "description": "Backup sizeBytes."
          }
        },
        "required": [
          "database",
          "name",
          "sizeBytes",
          "state",
          "referencingDatabases"
        ]
      },
      "method": "checkCreateBackupProgress",
      "service": "spanner",
      "displayName": "Check Create Backup Progress",
      "active": true,
      "resourceType": "DatabaseAdminClient",
      "output": {
        "required": [
          "database",
          "name",
          "sizeBytes",
          "state",
          "referencingDatabases",
          "encryptionInfo.encryptionType",
          "encryptionInfo.encryptionStatus.message",
          "encryptionInfo.encryptionStatus.details.type_url",
          "encryptionInfo.encryptionStatus.details.value.BYTES_PER_ELEMENT",
          "encryptionInfo.encryptionStatus.details.value.buffer.byteLength",
          "encryptionInfo.encryptionStatus.details.value.byteLength",
          "encryptionInfo.encryptionStatus.details.value.byteOffset",
          "encryptionInfo.encryptionStatus.details.value.length",
          "encryptionInfo.encryptionStatus.code",
          "encryptionInfo.kmsKeyVersion",
          "createTime.nanos",
          "createTime.seconds",
          "expireTime.seconds.high",
          "expireTime.seconds.low",
          "expireTime.seconds.unsigned",
          "expireTime.nanos",
          "versionTime.description"
        ],
        "optional": []
      },
      "rowType": "API",
      "params": { "name": "required" },
      "updatedAt": "2021-08-18T07:24:32.530Z",
      "_id": "1260c461",
      "displayResourceType": "Database Admins",
      "input": { "required": ["name"], "optional": [] },
      "operationType": "MODIFY",
      "displayService": "Spanner",
      "addonCount": 14,
      "relationCount": 5,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+53 -49"
    },
    {
      "relations": [],
      "aliases": {},
      "isDependent": true,
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": {
        "type": "structure",
        "resultWrapper": "RemoveListenerCertificatesResult",
        "members": { "type": "string" }
      },
      "method": "removeListenerCertificates",
      "displayName": "Remove Listener Certificates",
      "active": true,
      "rowType": "API",
      "params": {
        "ListenerArn": "required",
        "Certificates": [
          { "IsDefault": "<optional>", "CertificateArn": "<optional>" }
        ]
      },
      "_id": "bbd81810",
      "input": {
        "required": ["ListenerArn", "Certificates"],
        "optional": ["Certificates.CertificateArn", "Certificates.IsDefault"]
      },
      "areValidParams": true,
      "isAction": true,
      "isRoot": false,
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:54:10.443Z",
      "inputSchema": {
        "type": "structure",
        "required": ["ListenerArn", "Certificates"],
        "members": {
          "ListenerArn": { "type": "string" },
          "Certificates": {
            "type": "list",
            "member": {
              "type": "structure",
              "members": {
                "IsDefault": { "type": "boolean" },
                "CertificateArn": { "type": "string" }
              }
            }
          }
        }
      },
      "historyKeys": [],
      "service": "ELBv2",
      "resourceType": "ELBV2_LISTENER_CERTIFICATES",
      "output": { "required": [], "optional": [] },
      "updatedAt": "2021-07-29T07:54:52.491Z",
      "normalisations": [],
      "operationType": "MODIFY",
      "displayService": "ELBv2",
      "addonCount": 3,
      "relationCount": 16,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+206 -112"
    },
    {
      "isAction": true,
      "isRoot": false,
      "properties": { "client": "StorSimpleManagementClient" },
      "createdAt": "2021-05-12T14:10:24.838Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": [
          "deviceName",
          "request",
          "resourceGroupName",
          "managerName",
          "options",
          "callback"
        ],
        "properties": {
          "request": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "emailList": { "type": "array", "items": { "type": "string" } }
            },
            "required": ["emailList"]
          },
          "resourceGroupName": { "type": "string" },
          "managerName": { "type": "string" },
          "deviceName": { "type": "string" }
        },
        "required": [
          "deviceName",
          "request",
          "resourceGroupName",
          "managerName"
        ]
      },
      "outputSchema": {},
      "method": "sendTestEmail",
      "service": "storsimple1200series",
      "displayName": "Alerts",
      "active": true,
      "resourceType": "alerts",
      "output": { "required": [], "optional": [] },
      "rowType": "API",
      "params": {
        "request": { "emailList": ["<optional>"] },
        "resourceGroupName": "required",
        "managerName": "required",
        "deviceName": "required"
      },
      "updatedAt": "2021-05-12T14:10:50.229Z",
      "_id": "13f6c979",
      "input": {
        "required": [
          "deviceName",
          "request",
          "resourceGroupName",
          "managerName",
          "options",
          "callback"
        ],
        "optional": []
      },
      "operationType": "MODIFY",
      "displayService": "storsimple1200series",
      "addonCount": 5,
      "relationCount": 17,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+361 -1"
    },
    {
      "isAction": false,
      "isRoot": false,
      "properties": { "client": "DataLakeAnalyticsAccountManagementClient" },
      "createdAt": "2021-05-12T14:06:17.162Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": ["location", "options", "callback"],
        "properties": { "location": { "type": "string" } },
        "required": ["location"]
      },
      "outputSchema": {
        "description": "Subscription-level properties and limits for Data Lake Analytics.",
        "additionalProperties": false,
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "state": {
            "type": "string",
            "description": "The subscription state. Possible values include: 'Registered', 'Suspended', 'Deleted',\n'Unregistered', 'Warned'\n**NOTE: This property will not be serialized. It can only be populated by the server.**",
            "enum": [
              "Deleted",
              "Registered",
              "Suspended",
              "Unregistered",
              "Warned"
            ]
          },
          "maxAccountCount": {
            "type": "number",
            "description": "The maximum supported number of accounts under this subscription.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
          },
          "accountCount": {
            "type": "number",
            "description": "The current number of accounts under this subscription.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription credentials that uniquely identifies the subscription.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
          },
          "migrationState": {
            "type": "boolean",
            "description": "The Boolean value of true or false to indicate the maintenance state.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
          }
        }
      },
      "method": "getCapability",
      "service": "datalake-analytics",
      "displayName": "Locations",
      "active": false,
      "resourceType": "locations",
      "output": {
        "required": [
          "subscriptionId",
          "state",
          "maxAccountCount",
          "accountCount",
          "migrationState"
        ],
        "optional": []
      },
      "rowType": "API",
      "params": { "location": "required" },
      "updatedAt": "2021-05-12T14:06:42.759Z",
      "_id": "f94bd37d",
      "input": {
        "required": ["location", "options", "callback"],
        "optional": []
      },
      "operationType": "DISCOVER",
      "displayService": "datalake-analytics",
      "addonCount": 6,
      "relationCount": 17,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+476 -127"
    },
    {
      "relations": [],
      "aliases": {},
      "isDependent": true,
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": { "type": "structure", "members": { "type": "string" } },
      "method": "associateSkillWithUsers",
      "displayName": "Associate Skill With Users",
      "active": true,
      "rowType": "API",
      "params": { "SkillId": "required" },
      "_id": "98b5f6ea",
      "input": { "required": ["SkillId"], "optional": [] },
      "areValidParams": true,
      "isAction": true,
      "isRoot": false,
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:53:54.590Z",
      "inputSchema": {
        "type": "structure",
        "required": ["SkillId"],
        "members": { "SkillId": { "type": "string" } }
      },
      "historyKeys": [],
      "service": "AlexaForBusiness",
      "resourceType": "ALEXAFORBUSINESS_SKILL_WITH_USERS",
      "output": { "required": [], "optional": [] },
      "updatedAt": "2021-07-29T07:54:35.215Z",
      "normalisations": [],
      "operationType": "MODIFY",
      "displayService": "AlexaForBusiness",
      "addonCount": 0,
      "relationCount": 11,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+363 -24"
    },
    {
      "linkedMethod": "listByEnvironment",
      "isAction": false,
      "isRoot": false,
      "properties": {
        "addOnConfidence": 0.9523809523809523,
        "client": "TimeSeriesInsightsClient"
      },
      "createdAt": "2021-05-12T14:07:51.214Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": [
          "resourceGroupName",
          "environmentName",
          "options",
          "callback"
        ],
        "properties": {
          "environmentName": { "type": "string" },
          "resourceGroupName": { "type": "string" }
        },
        "required": ["resourceGroupName", "environmentName"]
      },
      "outputSchema": {
        "description": "The response of the List access policies operation.",
        "additionalProperties": false,
        "type": "object",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "properties": {
          "value": {
            "type": "array",
            "description": "Result of the List access policies operation.",
            "items": {
              "description": "An access policy is used to grant users and applications access to the environment. Roles are\nassigned to service principals in Azure Active Directory. These roles define the actions the\nprincipal can perform through the Time Series Insights data plane APIs.",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Resource name\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
                },
                "principalObjectId": {
                  "type": "string",
                  "description": "The objectId of the principal in Azure Active Directory."
                },
                "description": {
                  "type": "string",
                  "description": "An description of the access policy."
                },
                "id": {
                  "type": "string",
                  "description": "Resource Id\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
                },
                "type": {
                  "type": "string",
                  "description": "Resource type\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
                },
                "roles": {
                  "type": "array",
                  "description": "The list of roles the principal is assigned on the environment.",
                  "items": {
                    "type": "string",
                    "enum": ["Contributor", "Reader"]
                  }
                }
              }
            }
          }
        }
      },
      "method": "listByResourceGroup",
      "service": "timeseriesinsights",
      "displayName": "Access Policies /listByEnvironment",
      "linkedService": "timeseriesinsights",
      "active": true,
      "resourceType": "environments",
      "linkedResourceType": "accessPolicies",
      "output": {
        "required": [
          "value.principalObjectId",
          "value.description",
          "value.roles",
          "value.id",
          "value.name",
          "value.type"
        ],
        "optional": []
      },
      "rowType": "ADDON",
      "params": { "environmentName": "obj.name" },
      "updatedAt": "2021-05-12T14:07:53.999Z",
      "_id": "4bab6b7f",
      "input": {
        "required": [
          "resourceGroupName",
          "environmentName",
          "options",
          "callback"
        ],
        "optional": []
      },
      "operationType": "DISCOVER",
      "displayService": "timeseriesinsights",
      "addonCount": 16,
      "relationCount": 15,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+11 -146"
    },
    {
      "linkedMethod": "listByInstance",
      "isAction": false,
      "isRoot": false,
      "properties": {
        "addOnConfidence": 0.8275862068965517,
        "client": "SqlManagementClient"
      },
      "createdAt": "2021-05-12T14:07:50.570Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": [
          "resourceGroupName",
          "managedInstanceName",
          "options",
          "callback"
        ],
        "properties": {
          "resourceGroupName": { "type": "string" },
          "managedInstanceName": { "type": "string" }
        },
        "required": ["resourceGroupName", "managedInstanceName"]
      },
      "outputSchema": {
        "additionalProperties": false,
        "type": "array",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "items": {
          "description": "A recoverable managed database resource.",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
            },
            "lastAvailableBackupDate": {
              "type": "string",
              "description": "The last available backup date.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
            },
            "id": {
              "type": "string",
              "description": "Resource ID.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
            },
            "type": {
              "type": "string",
              "description": "Resource type.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
            }
          }
        }
      },
      "method": "listByResourceGroup",
      "service": "sql",
      "displayName": "Recoverable Managed  Databases /listByInstance",
      "linkedService": "sql",
      "active": true,
      "resourceType": "servers",
      "linkedResourceType": "recoverableManagedDatabases",
      "output": {
        "required": ["lastAvailableBackupDate", "id", "name", "type"],
        "optional": []
      },
      "rowType": "ADDON",
      "params": { "managedInstanceName": "obj.name" },
      "updatedAt": "2021-05-12T14:07:53.383Z",
      "_id": "696a15c8",
      "input": {
        "required": [
          "resourceGroupName",
          "managedInstanceName",
          "options",
          "callback"
        ],
        "optional": []
      },
      "operationType": "DISCOVER",
      "displayService": "sql",
      "addonCount": 16,
      "relationCount": 12,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+26 -181"
    },
    {
      "isAction": false,
      "isRoot": false,
      "properties": { "client": "AdvisorManagementClient" },
      "createdAt": "2021-05-12T14:06:06.596Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": ["options", "callback"],
        "properties": {
          "options": {
            "description": "Optional Parameters.",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "filter": {
                "type": "string",
                "description": "The filter to apply to the recommendations."
              },
              "top": {
                "type": "number",
                "description": "The number of recommendations per page if a paged version of this API is being used."
              },
              "skipToken": {
                "type": "string",
                "description": "The page-continuation token to use with a paged version of this API."
              },
              "onUploadProgress": {
                "type": "object",
                "description": "Callback which fires upon upload progress.",
                "additionalProperties": false
              },
              "onDownloadProgress": {
                "type": "object",
                "description": "Callback which fires upon download progress.",
                "additionalProperties": false
              },
              "abortSignal": {
                "description": "The signal which can be used to abort requests.",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "dispatchEvent": {
                    "type": "object",
                    "additionalProperties": false
                  },
                  "removeEventListener": {
                    "type": "object",
                    "additionalProperties": false
                  },
                  "onabort": {
                    "type": "object",
                    "additionalProperties": false
                  },
                  "aborted": { "type": "boolean" },
                  "addEventListener": {
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "aborted",
                  "addEventListener",
                  "dispatchEvent",
                  "onabort",
                  "removeEventListener"
                ]
              },
              "customHeaders": {
                "type": "object",
                "additionalProperties": { "type": "string" }
              },
              "timeout": {
                "type": "number",
                "description": "The number of milliseconds a request can take before automatically being terminated."
              }
            }
          }
        },
        "required": ["options"]
      },
      "outputSchema": {
        "additionalProperties": false,
        "type": "array",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "items": {
          "description": "Advisor Recommendation.",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "metadata": {
              "type": "object",
              "description": "The recommendation metadata.",
              "additionalProperties": {}
            },
            "impact": {
              "type": "string",
              "description": "The business impact of the recommendation. Possible values include: 'High', 'Medium', 'Low'",
              "enum": ["High", "Low", "Medium"]
            },
            "impactedValue": {
              "type": "string",
              "description": "The resource identified by Advisor."
            },
            "shortDescription": {
              "description": "A summary of the recommendation.",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "solution": {
                  "type": "string",
                  "description": "The remediation action suggested by the recommendation."
                },
                "problem": {
                  "type": "string",
                  "description": "The issue or opportunity identified by the recommendation."
                }
              }
            },
            "suppressionIds": {
              "type": "array",
              "description": "The list of snoozed and dismissed rules for the recommendation.",
              "items": { "type": "string" }
            },
            "type": {
              "type": "string",
              "description": "The type of the resource.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
            },
            "resourceMetadata": {
              "description": "Metadata of resource that was assessed",
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "resourceId": {
                  "type": "string",
                  "description": "Azure resource Id of the assessed resource"
                },
                "source": {
                  "type": "string",
                  "description": "Source from which recommendation is generated"
                }
              }
            },
            "lastUpdated": {
              "type": "string",
              "format": "date-time",
              "description": "The most recent time that Advisor checked the validity of the recommendation."
            },
            "extendedProperties": {
              "type": "object",
              "description": "Extended properties",
              "additionalProperties": { "type": "string" }
            },
            "recommendationTypeId": {
              "type": "string",
              "description": "The recommendation-type GUID."
            },
            "name": {
              "type": "string",
              "description": "The name of the resource.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
            },
            "risk": {
              "type": "string",
              "description": "The potential risk of not implementing the recommendation. Possible values include: 'Error',\n'Warning', 'None'",
              "enum": ["Error", "None", "Warning"]
            },
            "id": {
              "type": "string",
              "description": "The resource ID.\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
            },
            "category": {
              "type": "string",
              "description": "The category of the recommendation. Possible values include: 'HighAvailability', 'Security',\n'Performance', 'Cost', 'OperationalExcellence'",
              "enum": [
                "Cost",
                "HighAvailability",
                "OperationalExcellence",
                "Performance",
                "Security"
              ]
            },
            "impactedField": {
              "type": "string",
              "description": "The resource type identified by Advisor."
            }
          }
        }
      },
      "method": "list",
      "service": "advisor",
      "displayName": "Recommendations",
      "active": true,
      "resourceType": "recommendations",
      "output": {
        "required": [
          "category",
          "impact",
          "impactedField",
          "impactedValue",
          "lastUpdated",
          "recommendationTypeId",
          "risk",
          "shortDescription.problem",
          "shortDescription.solution",
          "suppressionIds",
          "resourceMetadata.resourceId",
          "resourceMetadata.source",
          "id",
          "name",
          "type"
        ],
        "optional": []
      },
      "rowType": "API",
      "params": {
        "options": {
          "filter": "<optional>",
          "top": "<optional>",
          "abortSignal": { "aborted": "required" },
          "skipToken": "<optional>",
          "timeout": "<optional>"
        }
      },
      "updatedAt": "2021-05-12T14:06:34.038Z",
      "_id": "27c152b6",
      "input": { "required": ["options", "callback"], "optional": [] },
      "operationType": "DISCOVER",
      "displayService": "advisor",
      "addonCount": 7,
      "relationCount": 16,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+378 -125"
    },
    {
      "isAction": true,
      "isRoot": false,
      "properties": { "client": "ManagedLabsClient" },
      "createdAt": "2021-05-12T14:10:14.397Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": [
          "resourceGroupName",
          "labAccountName",
          "labName",
          "environmentSettingName",
          "environmentSetting"
        ],
        "properties": {
          "environmentSettingName": { "type": "string" },
          "labName": { "type": "string" },
          "resourceGroupName": { "type": "string" },
          "labAccountName": { "type": "string" },
          "environmentSetting": {
            "description": "Represents settings of an environment, from which environment instances would be created",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "resourceSettings": {
                "description": "The resource specific settings",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "galleryImageResourceId": {
                    "type": "string",
                    "description": "The resource id of the gallery image used for creating the virtual machine"
                  },
                  "size": {
                    "type": "string",
                    "description": "The size of the virtual machine. Possible values include: 'Basic', 'Standard', 'Performance'",
                    "enum": ["Basic", "Performance", "Standard"]
                  },
                  "referenceVm": {
                    "description": "Details specific to Reference Vm",
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "userName": {
                        "type": "string",
                        "description": "The username of the virtual machine"
                      },
                      "password": {
                        "type": "string",
                        "description": "The password of the virtual machine. This will be set to null in GET resource API"
                      }
                    },
                    "required": ["userName"]
                  }
                },
                "required": ["referenceVm"]
              },
              "description": {
                "type": "string",
                "description": "Describes the environment and its resource settings"
              },
              "location": {
                "type": "string",
                "description": "The location of the resource."
              },
              "provisioningState": {
                "type": "string",
                "description": "The provisioning status of the resource."
              },
              "title": {
                "type": "string",
                "description": "Brief title describing the environment and its resource settings"
              },
              "configurationState": {
                "type": "string",
                "description": "Describes the user's progress in configuring their environment setting. Possible values\ninclude: 'NotApplicable', 'Completed'",
                "enum": ["Completed", "NotApplicable"]
              },
              "uniqueIdentifier": {
                "type": "string",
                "description": "The unique immutable identifier of a resource (Guid)."
              },
              "tags": {
                "type": "object",
                "description": "The tags of the resource.",
                "additionalProperties": { "type": "string" }
              }
            },
            "required": ["resourceSettings"]
          }
        },
        "required": [
          "resourceGroupName",
          "labAccountName",
          "labName",
          "environmentSettingName",
          "environmentSetting"
        ]
      },
      "outputSchema": {},
      "method": "beginCreateOrUpdate",
      "service": "labservices",
      "displayName": "Environment Settings ",
      "active": true,
      "resourceType": "environmentSettings",
      "output": { "required": [], "optional": [] },
      "rowType": "API",
      "params": {
        "environmentSettingName": "required",
        "labName": "required",
        "resourceGroupName": "required",
        "labAccountName": "required",
        "environmentSetting": {
          "resourceSettings": {
            "galleryImageResourceId": "<optional>",
            "size": "<optional>",
            "referenceVm": { "userName": "required", "password": "<optional>" }
          },
          "description": "<optional>",
          "location": "<optional>",
          "provisioningState": "<optional>",
          "title": "<optional>",
          "configurationState": "<optional>",
          "uniqueIdentifier": "<optional>"
        }
      },
      "updatedAt": "2021-05-12T14:10:38.552Z",
      "_id": "20c56a1b",
      "input": {
        "required": [
          "resourceGroupName",
          "labAccountName",
          "labName",
          "environmentSettingName",
          "environmentSetting"
        ],
        "optional": []
      },
      "operationType": "MODIFY",
      "displayService": "labservices",
      "addonCount": 18,
      "relationCount": 4,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+372 -50"
    },
    {
      "isAction": false,
      "isRoot": false,
      "properties": {},
      "createdAt": "2021-05-12T14:06:25.577Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": ["nextPageLink", "options", "callback"],
        "properties": { "nextPageLink": { "type": "string" } },
        "required": ["nextPageLink"]
      },
      "outputSchema": {
        "additionalProperties": false,
        "type": "array",
        "$schema": "http://json-schema.org/draft-07/schema#",
        "items": {
          "description": "The resource whose properties describes the allowed traffic between Azure resources",
          "additionalProperties": false,
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Resource name\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
            },
            "location": {
              "type": "string",
              "description": "Location where the resource is stored\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
            },
            "connectableResources": {
              "type": "array",
              "description": "List of connectable resources\n**NOTE: This property will not be serialized. It can only be populated by the server.**",
              "items": {
                "description": "Describes the allowed inbound and outbound traffic of an Azure resource",
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "inboundConnectedResources": {
                    "type": "array",
                    "description": "The list of Azure resources that the resource has inbound allowed connection from\n**NOTE: This property will not be serialized. It can only be populated by the server.**",
                    "items": {
                      "description": "Describes properties of a connected resource",
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "tcpPorts": {
                          "type": "string",
                          "description": "The allowed tcp ports\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
                        },
                        "connectedResourceId": {
                          "type": "string",
                          "description": "The Azure resource id of the connected resource\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
                        },
                        "udpPorts": {
                          "type": "string",
                          "description": "The allowed udp ports\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
                        }
                      }
                    }
                  },
                  "id": {
                    "type": "string",
                    "description": "The Azure resource id\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
                  },
                  "outboundConnectedResources": {
                    "type": "array",
                    "description": "The list of Azure resources that the resource has outbound allowed connection to\n**NOTE: This property will not be serialized. It can only be populated by the server.**",
                    "items": {
                      "description": "Describes properties of a connected resource",
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "tcpPorts": {
                          "type": "string",
                          "description": "The allowed tcp ports\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
                        },
                        "connectedResourceId": {
                          "type": "string",
                          "description": "The Azure resource id of the connected resource\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
                        },
                        "udpPorts": {
                          "type": "string",
                          "description": "The allowed udp ports\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
                        }
                      }
                    }
                  }
                }
              }
            },
            "id": {
              "type": "string",
              "description": "Resource Id\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
            },
            "calculatedDateTime": {
              "type": "string",
              "format": "date-time",
              "description": "The UTC time on which the allowed connections resource was calculated\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
            },
            "type": {
              "type": "string",
              "description": "Resource type\n**NOTE: This property will not be serialized. It can only be populated by the server.**"
            }
          }
        }
      },
      "method": "listByHomeRegionNext",
      "service": "security",
      "displayName": " Allowed  Connections ",
      "active": false,
      "resourceType": "AllowedConnections",
      "output": {
        "required": [
          "id",
          "name",
          "type",
          "location",
          "calculatedDateTime",
          "connectableResources.id",
          "connectableResources.inboundConnectedResources.connectedResourceId",
          "connectableResources.inboundConnectedResources.tcpPorts",
          "connectableResources.inboundConnectedResources.udpPorts",
          "connectableResources.outboundConnectedResources.connectedResourceId",
          "connectableResources.outboundConnectedResources.tcpPorts",
          "connectableResources.outboundConnectedResources.udpPorts"
        ],
        "optional": []
      },
      "rowType": "API",
      "params": { "nextPageLink": "required" },
      "updatedAt": "2021-05-12T14:06:51.387Z",
      "_id": "c52309fb",
      "input": {
        "required": ["nextPageLink", "options", "callback"],
        "optional": []
      },
      "operationType": "DISCOVER",
      "displayService": "security",
      "addonCount": 3,
      "relationCount": 12,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+271 -185"
    },
    {
      "relations": [],
      "aliases": {},
      "isDependent": true,
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": {},
      "method": "removeTagsFromOnPremisesInstances",
      "displayName": "Remove Tags From On Premises Instances",
      "active": true,
      "rowType": "API",
      "params": {
        "tags": [{ "Value": "<optional>", "Key": "<optional>" }],
        "instanceNames": ["required1", "required2"]
      },
      "_id": "3b81a341",
      "input": {
        "required": ["tags", "instanceNames"],
        "optional": ["tags.Key", "tags.Value"]
      },
      "areValidParams": true,
      "isAction": true,
      "isRoot": false,
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:54:00.336Z",
      "inputSchema": {
        "type": "structure",
        "required": ["tags", "instanceNames"],
        "members": {
          "tags": {
            "type": "list",
            "member": {
              "type": "structure",
              "members": {
                "Value": { "type": "string" },
                "Key": { "type": "string" }
              }
            }
          },
          "instanceNames": { "type": "list", "member": { "type": "string" } }
        }
      },
      "historyKeys": [],
      "service": "CodeDeploy",
      "resourceType": "CODEDEPLOY_TAGS_FROM_ON_PREMISES_INSTANCES",
      "output": { "required": [], "optional": [] },
      "updatedAt": "2021-07-29T07:54:43.882Z",
      "normalisations": [],
      "operationType": "MODIFY",
      "displayService": "CodeDeploy",
      "addonCount": 10,
      "relationCount": 10,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+6 -52"
    },
    {
      "relations": [],
      "aliases": {},
      "isDependent": true,
      "properties": {},
      "cloudProvider": "AWS",
      "outputSchema": {
        "type": "structure",
        "members": { "DirectoryId": { "type": "string" } }
      },
      "method": "connectDirectory",
      "displayName": "Connect Directory",
      "active": true,
      "rowType": "API",
      "params": {
        "Description": "<optional>",
        "ConnectSettings": [
          {
            "CustomerDnsIps": ["required1", "required2"],
            "CustomerUserName": "required",
            "VpcId": "required",
            "SubnetIds": ["required1", "required2"]
          }
        ],
        "Size": "required",
        "ShortName": "<optional>",
        "Tags": ["<optional1>", "<optional2>"],
        "Name": "required",
        "Password": "required"
      },
      "_id": "70e198fb",
      "input": {
        "required": [
          "Name",
          "Password",
          "Size",
          "ConnectSettings",
          "ConnectSettings.VpcId",
          "ConnectSettings.SubnetIds",
          "ConnectSettings.CustomerDnsIps",
          "ConnectSettings.CustomerUserName",
          "Tags.Key",
          "Tags.Value"
        ],
        "optional": ["ShortName", "Description", "Tags"]
      },
      "areValidParams": true,
      "isAction": true,
      "isRoot": false,
      "suppressErrors": [],
      "createdAt": "2021-07-29T07:54:04.544Z",
      "inputSchema": {
        "type": "structure",
        "required": ["Name", "Password", "Size", "ConnectSettings"],
        "members": {
          "Description": { "type": "string" },
          "ConnectSettings": {
            "type": "structure",
            "required": [
              "VpcId",
              "SubnetIds",
              "CustomerDnsIps",
              "CustomerUserName"
            ],
            "members": {
              "CustomerDnsIps": {
                "type": "list",
                "member": { "type": "string" }
              },
              "CustomerUserName": { "type": "string" },
              "VpcId": { "type": "string" },
              "SubnetIds": { "type": "list", "member": { "type": "string" } }
            }
          },
          "Size": { "type": "string" },
          "ShortName": { "type": "string" },
          "Tags": {
            "type": "list",
            "member": {
              "type": "structure",
              "required": ["Key", "Value"],
              "members": {
                "Value": { "type": "string" },
                "Key": { "type": "string" }
              }
            }
          },
          "Name": { "type": "string" },
          "Password": { "type": "string", "sensitive": true }
        }
      },
      "historyKeys": [],
      "service": "DirectoryService",
      "resourceType": "DIRECTORYSERVICE_DIRECTORY",
      "output": { "required": [], "optional": ["DirectoryId"] },
      "updatedAt": "2021-07-29T07:54:48.224Z",
      "normalisations": [],
      "operationType": "MODIFY",
      "displayService": "DirectoryService",
      "addonCount": 19,
      "relationCount": 18,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+489 -90"
    },
    {
      "linkedMethod": "listByResourceGroup",
      "isAction": false,
      "isRoot": false,
      "properties": {
        "rating": 1,
        "client": "NetworkManagementClient",
        "bidirectional": false,
        "srcKey": "subnets.ipConfigurations.publicIPAddress.ipConfiguration.subnet.privateEndpoints.networkInterfaces.ipConfigurations.loadBalancerInboundNatRules.backendIPConfiguration.loadBalancerBackendAddressPools.backendIPConfigurations.loadBalancerInboundNatRules.backendIPConfiguration.virtualNetworkTaps",
        "srcRef": "virtualNetworkTaps"
      },
      "createdAt": "2021-08-18T11:19:04.685Z",
      "cloudProvider": "AZURE",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": ["resourceGroupName"],
        "properties": { "resourceGroupName": { "type": "string" } },
        "required": ["resourceGroupName"]
      },
      "outputSchema": {},
      "method": "list",
      "service": "network",
      "displayName": "Virtual Network  Taps /listByResourceGroup",
      "linkedService": "network",
      "active": true,
      "resourceType": "virtualNetworks",
      "linkedResourceType": "virtualNetworkTaps",
      "output": { "required": [], "optional": [] },
      "rowType": "RELATION",
      "params": {},
      "updatedAt": "2021-08-18T11:19:04.952Z",
      "_id": "ebfaa4d8",
      "input": { "required": ["resourceGroupName"], "optional": [] },
      "operationType": "DISCOVER",
      "displayService": "network",
      "addonCount": 6,
      "relationCount": 14,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+23 -74"
    },
    {
      "isAction": false,
      "isRoot": false,
      "properties": { "package": "@google-cloud/compute" },
      "createdAt": "2021-08-18T07:23:55.341Z",
      "cloudProvider": "GCP",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "description": "Parameters.",
        "additionalProperties": false,
        "type": "object",
        "argumentOrder": [],
        "definitions": {},
        "properties": {},
        "required": []
      },
      "outputSchema": { "type": "string" },
      "method": "getProjectId",
      "service": "compute",
      "displayName": "Project Id",
      "active": true,
      "resourceType": "TargetSslProxiesClient",
      "output": { "required": [], "optional": [] },
      "rowType": "API",
      "params": {},
      "updatedAt": "2021-08-18T07:24:16.925Z",
      "_id": "93866e8",
      "displayResourceType": "Target Ssl Proxies",
      "input": { "required": [], "optional": [] },
      "operationType": "DISCOVER",
      "displayService": "Google Compute Engine",
      "addonCount": 12,
      "relationCount": 17,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+44 -23"
    },
    {
      "isAction": false,
      "isRoot": true,
      "properties": { "updatedBy": "abhishek@totalcloud.io" },
      "createdAt": "2021-02-16T05:47:44.588Z",
      "cloudProvider": "KUBERNETES",
      "inputSchema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "definitions": {},
        "properties": {
          "name": { "type": "string" },
          "namespace": { "type": "string" },
          "exact": { "type": "boolean" },
          "_export": { "type": "boolean" }
        },
        "required": ["name", "namespace"]
      },
      "outputSchema": {},
      "method": "readNamespacedReplicaSet",
      "service": "AppsV1Api",
      "displayName": "Read Namespaced Replica Set",
      "active": true,
      "resourceType": "Apps",
      "output": {
        "required": [
          "metadata.clusterName",
          "metadata.generation",
          "metadata.uid",
          "metadata.deletionGracePeriodSeconds",
          "metadata.ownerReferences.apiVersion",
          "metadata.ownerReferences.uid",
          "metadata.ownerReferences.kind",
          "metadata.ownerReferences.controller",
          "metadata.ownerReferences.name",
          "metadata.ownerReferences.blockOwnerDeletion",
          "metadata.managedFields.fieldsType",
          "metadata.managedFields.manager",
          "metadata.managedFields.apiVersion",
          "metadata.managedFields.time",
          "metadata.managedFields.operation",
          "metadata.managedFields.fieldsVtempor_",
          "metadata.managedFields.fieldsVreprehenderit",
          "metadata.labels.ad_",
          "metadata.labels.ind",
          "metadata.labels.aliqu",
          "metadata.labels.sit",
          "metadata.labels.eiusmoda",
          "metadata.finalizers",
          "metadata.annotations.eni",
          "metadata.annotations.inba",
          "metadata.resourceVersion",
          "metadata.selfLink",
          "metadata.namespace",
          "metadata.deletionTimestamp",
          "metadata.generateName",
          "metadata.creationTimestamp",
          "metadata.name",
          "status.readyReplicas",
          "status.conditions.type",
          "status.conditions.lastTransitionTime",
          "status.conditions.status",
          "status.conditions.message",
          "status.conditions.reason",
          "status.fullyLabeledReplicas",
          "status.availableReplicas",
          "status.replicas",
          "status.observedGeneration",
          "kind",
          "apiVersion",
          "spec.selector.matchLabels.sed",
          "spec.selector.matchLabels.ad",
          "spec.selector.matchExpressions.operator",
          "spec.selector.matchExpressions.key",
          "spec.selector.matchExpressions.values",
          "spec.replicas",
          "spec.template.spec.enableServiceLinks",
          "spec.template.spec.readinessGates.conditionType",
          "spec.template.spec.readinessGates.aliqua_a",
          "spec.template.spec.readinessGates.aliquip",
          "spec.template.spec.schedulerName",
          "spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.key",
          "spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.values",
          "spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchFields.operator",
          "spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.operator",
          "spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.values",
          "spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions.key",
          "spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nisi_bf",
          "spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.elit_c",
          "spec.template.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.e",
          "spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.weight",
          "spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.values",
          "spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.operator",
          "spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchFields.key",
          "spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.values",
          "spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.operator",
          "spec.template.spec.affinity.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.preference.matchExpressions.key",
          "spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.weight",
          "spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.topologyKey",
          "spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaces",
          "spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.values",
          "spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.operator",
          "spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.key",
          "spec.template.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchLabels.aute",
          "spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchLabels.nostrud",
          "spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.key",
          "spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.operator",
          "spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.values",
          "spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaces",
          "spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.topologyKey",
          "spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.weight",
          "spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.values",
          "spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.key",
          "spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchExpressions.operator",
          "spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchLabels.proidenta",
          "spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchLabels.officia_f",
          "spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchLabels.mollit_d",
          "spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchLabels.do_",
          "spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.labelSelector.matchLabels.sit_a",
          "spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.topologyKey",
          "spec.template.spec.affinity.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.namespaces",
          "spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.namespaces",
          "spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchLabels.ipsu",
          "spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.key",
          "spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.operator",
          "spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.labelSelector.matchExpressions.values",
          "spec.template.spec.affinity.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.topologyKey",
          "spec.template.spec.containers.stdin",
          "spec.template.spec.containers.workingDir",
          "spec.template.spec.containers.ports.protocol",
          "spec.template.spec.containers.ports.containerPort",
          "spec.template.spec.containers.ports.hostPort",
          "spec.template.spec.containers.ports.hostIP",
          "spec.template.spec.containers.ports.name",
          "spec.template.spec.containers.volumeMounts.readOnly",
          "spec.template.spec.containers.volumeMounts.subPathExpr",
          "spec.template.spec.containers.volumeMounts.mountPath",
          "spec.template.spec.containers.volumeMounts.name",
          "spec.template.spec.containers.volumeMounts.mountPropagation",
          "spec.template.spec.containers.volumeMounts.subPath",
          "spec.template.spec.containers.image",
          "spec.template.spec.containers.securityContext.procMount",
          "spec.template.spec.containers.securityContext.readOnlyRootFilesystem",
          "spec.template.spec.containers.securityContext.runAsNonRoot",
          "spec.template.spec.containers.securityContext.seLinuxOptions.level",
          "spec.template.spec.containers.securityContext.seLinuxOptions.role",
          "spec.template.spec.containers.securityContext.seLinuxOptions.user",
          "spec.template.spec.containers.securityContext.seLinuxOptions.type",
          "spec.template.spec.containers.securityContext.capabilities.drop",
          "spec.template.spec.containers.securityContext.capabilities.add",
          "spec.template.spec.containers.securityContext.privileged",
          "spec.template.spec.containers.securityContext.runAsUser",
          "spec.template.spec.containers.securityContext.allowPrivilegeEscalation",
          "spec.template.spec.containers.securityContext.windowsOptions.runAsUserName",
          "spec.template.spec.containers.securityContext.windowsOptions.gmsaCredentialSpec",
          "spec.template.spec.containers.securityContext.windowsOptions.gmsaCredentialSpecName",
          "spec.template.spec.containers.securityContext.runAsGroup",
          "spec.template.spec.containers.securityContext.seccompProfile.type",
          "spec.template.spec.containers.securityContext.seccompProfile.localhostProfile",
          "spec.template.spec.containers.livenessProbe.failureThreshold",
          "spec.template.spec.containers.livenessProbe.initialDelaySeconds",
          "spec.template.spec.containers.livenessProbe.httpGet.path",
          "spec.template.spec.containers.livenessProbe.httpGet.host",
          "spec.template.spec.containers.livenessProbe.httpGet.scheme",
          "spec.template.spec.containers.livenessProbe.httpGet.httpHeaders.name",
          "spec.template.spec.containers.livenessProbe.httpGet.httpHeaders.value",
          "spec.template.spec.containers.livenessProbe.httpGet.port.cillum_e",
          "spec.template.spec.containers.livenessProbe.httpGet.port.venia",
          "spec.template.spec.containers.livenessProbe.httpGet.port.reprehenderit_",
          "spec.template.spec.containers.livenessProbe.timeoutSeconds",
          "spec.template.spec.containers.livenessProbe.successThreshold",
          "spec.template.spec.containers.livenessProbe.tcpSocket.port.labore",
          "spec.template.spec.containers.livenessProbe.tcpSocket.port.elitcf",
          "spec.template.spec.containers.livenessProbe.tcpSocket.port.ipsum",
          "spec.template.spec.containers.livenessProbe.tcpSocket.host",
          "spec.template.spec.containers.livenessProbe.periodSeconds",
          "spec.template.spec.containers.livenessProbe.exec.command",
          "spec.template.spec.containers.livenessProbe.exec.tempor_",
          "spec.template.spec.containers.name",
          "spec.template.spec.containers.volumeDevices.devicePath",
          "spec.template.spec.containers.volumeDevices.name",
          "spec.template.spec.containers.resources.requests.veniama",
          "spec.template.spec.containers.resources.requests.esse",
          "spec.template.spec.containers.resources.requests.id__",
          "spec.template.spec.containers.resources.limits.aliquip_a",
          "spec.template.spec.containers.envFrom.prefix",
          "spec.template.spec.containers.envFrom.secretRef.optional",
          "spec.template.spec.containers.envFrom.secretRef.name",
          "spec.template.spec.containers.envFrom.configMapRef.name",
          "spec.template.spec.containers.envFrom.configMapRef.optional",
          "spec.template.spec.containers.terminationMessagePath",
          "spec.template.spec.containers.env.value",
          "spec.template.spec.containers.env.valueFrom.fieldRef.fieldPath",
          "spec.template.spec.containers.env.valueFrom.fieldRef.apiVersion",
          "spec.template.spec.containers.env.valueFrom.secretKeyRef.optional",
          "spec.template.spec.containers.env.valueFrom.secretKeyRef.name",
          "spec.template.spec.containers.env.valueFrom.secretKeyRef.key",
          "spec.template.spec.containers.env.valueFrom.resourceFieldRef.containerName",
          "spec.template.spec.containers.env.valueFrom.resourceFieldRef.divisor",
          "spec.template.spec.containers.env.valueFrom.resourceFieldRef.resource",
          "spec.template.spec.containers.env.valueFrom.configMapKeyRef.optional",
          "spec.template.spec.containers.env.valueFrom.configMapKeyRef.key",
          "spec.template.spec.containers.env.valueFrom.configMapKeyRef.name",
          "spec.template.spec.containers.env.name",
          "spec.template.spec.containers.stdinOnce",
          "spec.template.spec.containers.args",
          "spec.template.spec.containers.command",
          "spec.template.spec.containers.imagePullPolicy",
          "spec.template.spec.containers.startupProbe.successThreshold",
          "spec.template.spec.containers.startupProbe.initialDelaySeconds",
          "spec.template.spec.containers.startupProbe.periodSeconds",
          "spec.template.spec.containers.startupProbe.tcpSocket.port.aute_",
          "spec.template.spec.containers.startupProbe.tcpSocket.port.qu",
          "spec.template.spec.containers.startupProbe.tcpSocket.host",
          "spec.template.spec.containers.startupProbe.httpGet.scheme",
          "spec.template.spec.containers.startupProbe.httpGet.path",
          "spec.template.spec.containers.startupProbe.httpGet.port.occaeca",
          "spec.template.spec.containers.startupProbe.httpGet.port.dolor_",
          "spec.template.spec.containers.startupProbe.httpGet.port.cillumd",
          "spec.template.spec.containers.startupProbe.httpGet.port.fugia",
          "spec.template.spec.containers.startupProbe.httpGet.httpHeaders.value",
          "spec.template.spec.containers.startupProbe.httpGet.httpHeaders.name",
          "spec.template.spec.containers.startupProbe.httpGet.host",
          "spec.template.spec.containers.startupProbe.exec.command",
          "spec.template.spec.containers.startupProbe.exec.elit",
          "spec.template.spec.containers.startupProbe.failureThreshold",
          "spec.template.spec.containers.startupProbe.timeoutSeconds",
          "spec.template.spec.containers.readinessProbe.initialDelaySeconds",
          "spec.template.spec.containers.readinessProbe.periodSeconds",
          "spec.template.spec.containers.readinessProbe.exec.command",
          "spec.template.spec.containers.readinessProbe.exec.qu",
          "spec.template.spec.containers.readinessProbe.httpGet.port.aliquip_e",
          "spec.template.spec.containers.readinessProbe.httpGet.scheme",
          "spec.template.spec.containers.readinessProbe.httpGet.httpHeaders.name",
          "spec.template.spec.containers.readinessProbe.httpGet.httpHeaders.value",
          "spec.template.spec.containers.readinessProbe.httpGet.host",
          "spec.template.spec.containers.readinessProbe.httpGet.path",
          "spec.template.spec.containers.readinessProbe.tcpSocket.host",
          "spec.template.spec.containers.readinessProbe.tcpSocket.port.proiden",
          "spec.template.spec.containers.readinessProbe.tcpSocket.port.cillum",
          "spec.template.spec.containers.readinessProbe.tcpSocket.port.ut",
          "spec.template.spec.containers.readinessProbe.timeoutSeconds",
          "spec.template.spec.containers.readinessProbe.successThreshold",
          "spec.template.spec.containers.readinessProbe.failureThreshold",
          "spec.template.spec.containers.lifecycle.preStop.httpGet.httpHeaders.value",
          "spec.template.spec.containers.lifecycle.preStop.httpGet.httpHeaders.name",
          "spec.template.spec.containers.lifecycle.preStop.httpGet.host",
          "spec.template.spec.containers.lifecycle.preStop.httpGet.scheme",
          "spec.template.spec.containers.lifecycle.preStop.httpGet.path",
          "spec.template.spec.containers.lifecycle.preStop.httpGet.port.adipisicing",
          "spec.template.spec.containers.lifecycle.preStop.httpGet.port.anim_ec",
          "spec.template.spec.containers.lifecycle.preStop.httpGet.port.ipsume",
          "spec.template.spec.containers.lifecycle.preStop.httpGet.port.sed_ab",
          "spec.template.spec.containers.lifecycle.preStop.tcpSocket.host",
          "spec.template.spec.containers.lifecycle.preStop.tcpSocket.port.deserunta",
          "spec.template.spec.containers.lifecycle.preStop.exec.command",
          "spec.template.spec.containers.lifecycle.preStop.exec.officia_",
          "spec.template.spec.containers.lifecycle.preStop.exec.dolore_f",
          "spec.template.spec.containers.lifecycle.preStop.exec.deserunt_aa",
          "spec.template.spec.containers.lifecycle.preStop.exec.dolore",
          "spec.template.spec.containers.lifecycle.preStop.exec.ex",
          "spec.template.spec.containers.lifecycle.postStart.tcpSocket.port.commod",
          "spec.template.spec.containers.lifecycle.postStart.tcpSocket.port.e",
          "spec.template.spec.containers.lifecycle.postStart.tcpSocket.port.pariatur",
          "spec.template.spec.containers.lifecycle.postStart.tcpSocket.host",
          "spec.template.spec.containers.lifecycle.postStart.exec.command",
          "spec.template.spec.containers.lifecycle.postStart.exec.amet",
          "spec.template.spec.containers.lifecycle.postStart.httpGet.path",
          "spec.template.spec.containers.lifecycle.postStart.httpGet.host",
          "spec.template.spec.containers.lifecycle.postStart.httpGet.httpHeaders.value",
          "spec.template.spec.containers.lifecycle.postStart.httpGet.httpHeaders.name",
          "spec.template.spec.containers.lifecycle.postStart.httpGet.scheme",
          "spec.template.spec.containers.lifecycle.postStart.httpGet.port.sunt_a",
          "spec.template.spec.containers.tty",
          "spec.template.spec.containers.terminationMessagePolicy",
          "spec.template.spec.nodeName",
          "spec.template.spec.hostPID",
          "spec.template.spec.shareProcessNamespace",
          "spec.template.spec.hostNetwork",
          "spec.template.spec.volumes.gitRepo.directory",
          "spec.template.spec.volumes.gitRepo.revision",
          "spec.template.spec.volumes.gitRepo.repository",
          "spec.template.spec.volumes.quobyte.tenant",
          "spec.template.spec.volumes.quobyte.volume",
          "spec.template.spec.volumes.quobyte.readOnly",
          "spec.template.spec.volumes.quobyte.group",
          "spec.template.spec.volumes.quobyte.registry",
          "spec.template.spec.volumes.quobyte.user",
          "spec.template.spec.volumes.fc.targetWWNs",
          "spec.template.spec.volumes.fc.fsType",
          "spec.template.spec.volumes.fc.wwids",
          "spec.template.spec.volumes.fc.readOnly",
          "spec.template.spec.volumes.fc.lun",
          "spec.template.spec.volumes.configMap.items.key",
          "spec.template.spec.volumes.configMap.items.mode",
          "spec.template.spec.volumes.configMap.items.path",
          "spec.template.spec.volumes.configMap.defaultMode",
          "spec.template.spec.volumes.configMap.name",
          "spec.template.spec.volumes.configMap.optional",
          "spec.template.spec.volumes.persistentVolumeClaim.claimName",
          "spec.template.spec.volumes.persistentVolumeClaim.readOnly",
          "spec.template.spec.volumes.vsphereVolume.volumePath",
          "spec.template.spec.volumes.vsphereVolume.fsType",
          "spec.template.spec.volumes.vsphereVolume.storagePolicyID",
          "spec.template.spec.volumes.vsphereVolume.storagePolicyName",
          "spec.template.spec.volumes.nfs.path",
          "spec.template.spec.volumes.nfs.readOnly",
          "spec.template.spec.volumes.nfs.server",
          "spec.template.spec.volumes.hostPath.path",
          "spec.template.spec.volumes.hostPath.type",
          "spec.template.spec.volumes.photonPersistentDisk.pdID",
          "spec.template.spec.volumes.photonPersistentDisk.fsType",
          "spec.template.spec.volumes.gcePersistentDisk.readOnly",
          "spec.template.spec.volumes.gcePersistentDisk.pdName",
          "spec.template.spec.volumes.gcePersistentDisk.fsType",
          "spec.template.spec.volumes.gcePersistentDisk.partition",
          "spec.template.spec.volumes.azureDisk.readOnly",
          "spec.template.spec.volumes.azureDisk.kind",
          "spec.template.spec.volumes.azureDisk.fsType",
          "spec.template.spec.volumes.azureDisk.diskURI",
          "spec.template.spec.volumes.azureDisk.diskName",
          "spec.template.spec.volumes.azureDisk.cachingMode",
          "spec.template.spec.volumes.csi.readOnly",
          "spec.template.spec.volumes.csi.volumeAttributes.dolo",
          "spec.template.spec.volumes.csi.fsType",
          "spec.template.spec.volumes.csi.driver",
          "spec.template.spec.volumes.csi.nodePublishSecretRef.name",
          "spec.template.spec.volumes.csi.nodePublishSecretRef.nisi_e",
          "spec.template.spec.volumes.csi.nodePublishSecretRef.magnaf",
          "spec.template.spec.volumes.flocker.datasetUUID",
          "spec.template.spec.volumes.flocker.datasetName",
          "spec.template.spec.volumes.scaleIO.gateway",
          "spec.template.spec.volumes.scaleIO.protectionDomain",
          "spec.template.spec.volumes.scaleIO.volumeName",
          "spec.template.spec.volumes.scaleIO.system",
          "spec.template.spec.volumes.scaleIO.storagePool",
          "spec.template.spec.volumes.scaleIO.fsType",
          "spec.template.spec.volumes.scaleIO.readOnly",
          "spec.template.spec.volumes.scaleIO.sslEnabled",
          "spec.template.spec.volumes.scaleIO.storageMode",
          "spec.template.spec.volumes.scaleIO.secretRef.name",
          "spec.template.spec.volumes.scaleIO.secretRef.Excepteu",
          "spec.template.spec.volumes.scaleIO.secretRef.tempor",
          "spec.template.spec.volumes.scaleIO.secretRef.temporbf",
          "spec.template.spec.volumes.scaleIO.secretRef.ullamcoc",
          "spec.template.spec.volumes.scaleIO.secretRef.reprehenderitb",
          "spec.template.spec.volumes.downwardAPI.items.resourceFieldRef.resource",
          "spec.template.spec.volumes.downwardAPI.items.resourceFieldRef.divisor",
          "spec.template.spec.volumes.downwardAPI.items.resourceFieldRef.containerName",
          "spec.template.spec.volumes.downwardAPI.items.path",
          "spec.template.spec.volumes.downwardAPI.items.fieldRef.fieldPath",
          "spec.template.spec.volumes.downwardAPI.items.fieldRef.apiVersion",
          "spec.template.spec.volumes.downwardAPI.items.mode",
          "spec.template.spec.volumes.downwardAPI.defaultMode",
          "spec.template.spec.volumes.cephfs.path",
          "spec.template.spec.volumes.cephfs.monitors",
          "spec.template.spec.volumes.cephfs.secretRef.name",
          "spec.template.spec.volumes.cephfs.user",
          "spec.template.spec.volumes.cephfs.secretFile",
          "spec.template.spec.volumes.cephfs.readOnly",
          "spec.template.spec.volumes.glusterfs.path",
          "spec.template.spec.volumes.glusterfs.endpoints",
          "spec.template.spec.volumes.glusterfs.readOnly",
          "spec.template.spec.volumes.flexVolume.secretRef.name",
          "spec.template.spec.volumes.flexVolume.secretRef.commodo_e",
          "spec.template.spec.volumes.flexVolume.secretRef.minim_b",
          "spec.template.spec.volumes.flexVolume.fsType",
          "spec.template.spec.volumes.flexVolume.driver",
          "spec.template.spec.volumes.flexVolume.options.sed",
          "spec.template.spec.volumes.flexVolume.options.Excepteur_",
          "spec.template.spec.volumes.flexVolume.options.qui_e",
          "spec.template.spec.volumes.flexVolume.options.cupidatat",
          "spec.template.spec.volumes.flexVolume.readOnly",
          "spec.template.spec.volumes.portworxVolume.fsType",
          "spec.template.spec.volumes.portworxVolume.volumeID",
          "spec.template.spec.volumes.portworxVolume.readOnly",
          "spec.template.spec.volumes.iscsi.fsType",
          "spec.template.spec.volumes.iscsi.targetPortal",
          "spec.template.spec.volumes.iscsi.readOnly",
          "spec.template.spec.volumes.iscsi.portals",
          "spec.template.spec.volumes.iscsi.chapAuthDiscovery",
          "spec.template.spec.volumes.iscsi.chapAuthSession",
          "spec.template.spec.volumes.iscsi.secretRef.name",
          "spec.template.spec.volumes.iscsi.secretRef.enim__",
          "spec.template.spec.volumes.iscsi.lun",
          "spec.template.spec.volumes.iscsi.initiatorName",
          "spec.template.spec.volumes.iscsi.iqn",
          "spec.template.spec.volumes.iscsi.iscsiInterface",
          "spec.template.spec.volumes.cinder.fsType",
          "spec.template.spec.volumes.cinder.readOnly",
          "spec.template.spec.volumes.cinder.volumeID",
          "spec.template.spec.volumes.cinder.secretRef.name",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.annotations.do_ded",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.uid",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.name",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.finalizers",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.generation",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.ownerReferences.uid",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.ownerReferences.name",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.ownerReferences.kind",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.ownerReferences.apiVersion",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.ownerReferences.blockOwnerDeletion",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.ownerReferences.controller",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.creationTimestamp",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.deletionTimestamp",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.namespace",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.deletionGracePeriodSeconds",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.selfLink",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.clusterName",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.managedFields.fieldsType",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.managedFields.operation",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.managedFields.time",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.managedFields.fieldsVproident_c",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.managedFields.apiVersion",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.managedFields.manager",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.generateName",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.resourceVersion",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.labels.magnac",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.labels.cupidatatb",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.metadata.labels.ess",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.spec.volumeMode",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.operator",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.key",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchExpressions.values",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchLabels.magn",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.spec.selector.matchLabels.commodo_d",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.spec.resources.limits.ea_",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.spec.resources.limits.commodo",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.spec.resources.requests.in_e",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.spec.resources.requests.Excepteur_",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.spec.storageClassName",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.spec.volumeName",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.spec.dataSource.name",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.spec.dataSource.kind",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.spec.dataSource.apiGroup",
          "spec.template.spec.volumes.ephemeral.volumeClaimTemplate.spec.accessModes",
          "spec.template.spec.volumes.ephemeral.readOnly",
          "spec.template.spec.volumes.storageos.volumeName",
          "spec.template.spec.volumes.storageos.volumeNamespace",
          "spec.template.spec.volumes.storageos.secretRef.name",
          "spec.template.spec.volumes.storageos.secretRef.irurea",
          "spec.template.spec.volumes.storageos.readOnly",
          "spec.template.spec.volumes.storageos.fsType",
          "spec.template.spec.volumes.azureFile.shareName",
          "spec.template.spec.volumes.azureFile.readOnly",
          "spec.template.spec.volumes.azureFile.secretName",
          "spec.template.spec.volumes.emptyDir.medium",
          "spec.template.spec.volumes.emptyDir.sizeLimit",
          "spec.template.spec.volumes.projected.defaultMode",
          "spec.template.spec.volumes.projected.sources.serviceAccountToken.path",
          "spec.template.spec.volumes.projected.sources.serviceAccountToken.audience",
          "spec.template.spec.volumes.projected.sources.serviceAccountToken.expirationSeconds",
          "spec.template.spec.volumes.projected.sources.configMap.optional",
          "spec.template.spec.volumes.projected.sources.configMap.name",
          "spec.template.spec.volumes.projected.sources.configMap.items.mode",
          "spec.template.spec.volumes.projected.sources.configMap.items.key",
          "spec.template.spec.volumes.projected.sources.configMap.items.path",
          "spec.template.spec.volumes.projected.sources.secret.optional",
          "spec.template.spec.volumes.projected.sources.secret.items.key",
          "spec.template.spec.volumes.projected.sources.secret.items.mode",
          "spec.template.spec.volumes.projected.sources.secret.items.path",
          "spec.template.spec.volumes.projected.sources.secret.name",
          "spec.template.spec.volumes.projected.sources.downwardAPI.items.fieldRef.apiVersion",
          "spec.template.spec.volumes.projected.sources.downwardAPI.items.fieldRef.fieldPath",
          "spec.template.spec.volumes.projected.sources.downwardAPI.items.resourceFieldRef.divisor",
          "spec.template.spec.volumes.projected.sources.downwardAPI.items.resourceFieldRef.containerName",
          "spec.template.spec.volumes.projected.sources.downwardAPI.items.resourceFieldRef.resource",
          "spec.template.spec.volumes.projected.sources.downwardAPI.items.path",
          "spec.template.spec.volumes.projected.sources.downwardAPI.items.mode",
          "spec.template.spec.volumes.projected.sources.downwardAPI.ame",
          "spec.template.spec.volumes.projected.sources.downwardAPI.Duis",
          "spec.template.spec.volumes.projected.sources.downwardAPI.cupidata",
          "spec.template.spec.volumes.secret.optional",
          "spec.template.spec.volumes.secret.items.mode",
          "spec.template.spec.volumes.secret.items.path",
          "spec.template.spec.volumes.secret.items.key",
          "spec.template.spec.volumes.secret.defaultMode",
          "spec.template.spec.volumes.secret.secretName",
          "spec.template.spec.volumes.rbd.image",
          "spec.template.spec.volumes.rbd.pool",
          "spec.template.spec.volumes.rbd.fsType",
          "spec.template.spec.volumes.rbd.user",
          "spec.template.spec.volumes.rbd.secretRef.name",
          "spec.template.spec.volumes.rbd.readOnly",
          "spec.template.spec.volumes.rbd.keyring",
          "spec.template.spec.volumes.rbd.monitors",
          "spec.template.spec.volumes.awsElasticBlockStore.fsType",
          "spec.template.spec.volumes.awsElasticBlockStore.partition",
          "spec.template.spec.volumes.awsElasticBlockStore.readOnly",
          "spec.template.spec.volumes.awsElasticBlockStore.volumeID",
          "spec.template.spec.volumes.name",
          "spec.template.spec.serviceAccountName",
          "spec.template.spec.hostname",
          "spec.template.spec.ephemeralContainers.imagePullPolicy",
          "spec.template.spec.ephemeralContainers.ports.containerPort",
          "spec.template.spec.ephemeralContainers.ports.hostIP",
          "spec.template.spec.ephemeralContainers.ports.protocol",
          "spec.template.spec.ephemeralContainers.ports.hostPort",
          "spec.template.spec.ephemeralContainers.ports.name",
          "spec.template.spec.ephemeralContainers.lifecycle.postStart.exec.command",
          "spec.template.spec.ephemeralContainers.lifecycle.postStart.exec.anim",
          "spec.template.spec.ephemeralContainers.lifecycle.postStart.httpGet.host",
          "spec.template.spec.ephemeralContainers.lifecycle.postStart.httpGet.path",
          "spec.template.spec.ephemeralContainers.lifecycle.postStart.httpGet.scheme",
          "spec.template.spec.ephemeralContainers.lifecycle.postStart.httpGet.port.eiusmod",
          "spec.template.spec.ephemeralContainers.lifecycle.postStart.httpGet.httpHeaders.name",
          "spec.template.spec.ephemeralContainers.lifecycle.postStart.httpGet.httpHeaders.value",
          "spec.template.spec.ephemeralContainers.lifecycle.postStart.tcpSocket.port.dolore_",
          "spec.template.spec.ephemeralContainers.lifecycle.postStart.tcpSocket.port.sit_",
          "spec.template.spec.ephemeralContainers.lifecycle.postStart.tcpSocket.port.non",
          "spec.template.spec.ephemeralContainers.lifecycle.postStart.tcpSocket.host",
          "spec.template.spec.ephemeralContainers.lifecycle.preStop.httpGet.host",
          "spec.template.spec.ephemeralContainers.lifecycle.preStop.httpGet.path",
          "spec.template.spec.ephemeralContainers.lifecycle.preStop.httpGet.scheme",
          "spec.template.spec.ephemeralContainers.lifecycle.preStop.httpGet.port.ut_c",
          "spec.template.spec.ephemeralContainers.lifecycle.preStop.httpGet.port.exercitation_f",
          "spec.template.spec.ephemeralContainers.lifecycle.preStop.httpGet.port.velit",
          "spec.template.spec.ephemeralContainers.lifecycle.preStop.httpGet.httpHeaders.name",
          "spec.template.spec.ephemeralContainers.lifecycle.preStop.httpGet.httpHeaders.value",
          "spec.template.spec.ephemeralContainers.lifecycle.preStop.exec.command",
          "spec.template.spec.ephemeralContainers.lifecycle.preStop.exec.est_b",
          "spec.template.spec.ephemeralContainers.lifecycle.preStop.exec.dolor_f_",
          "spec.template.spec.ephemeralContainers.lifecycle.preStop.tcpSocket.host",
          "spec.template.spec.ephemeralContainers.lifecycle.preStop.tcpSocket.port.laborum__",
          "spec.template.spec.ephemeralContainers.lifecycle.preStop.tcpSocket.port.aut",
          "spec.template.spec.ephemeralContainers.command",
          "spec.template.spec.ephemeralContainers.image",
          "spec.template.spec.ephemeralContainers.env.value",
          "spec.template.spec.ephemeralContainers.env.name",
          "spec.template.spec.ephemeralContainers.env.valueFrom.secretKeyRef.name",
          "spec.template.spec.ephemeralContainers.env.valueFrom.secretKeyRef.key",
          "spec.template.spec.ephemeralContainers.env.valueFrom.secretKeyRef.optional",
          "spec.template.spec.ephemeralContainers.env.valueFrom.resourceFieldRef.containerName",
          "spec.template.spec.ephemeralContainers.env.valueFrom.resourceFieldRef.divisor",
          "spec.template.spec.ephemeralContainers.env.valueFrom.resourceFieldRef.resource",
          "spec.template.spec.ephemeralContainers.env.valueFrom.fieldRef.apiVersion",
          "spec.template.spec.ephemeralContainers.env.valueFrom.fieldRef.fieldPath",
          "spec.template.spec.ephemeralContainers.env.valueFrom.configMapKeyRef.name",
          "spec.template.spec.ephemeralContainers.env.valueFrom.configMapKeyRef.optional",
          "spec.template.spec.ephemeralContainers.env.valueFrom.configMapKeyRef.key",
          "spec.template.spec.ephemeralContainers.envFrom.secretRef.name",
          "spec.template.spec.ephemeralContainers.envFrom.secretRef.optional",
          "spec.template.spec.ephemeralContainers.envFrom.configMapRef.name",
          "spec.template.spec.ephemeralContainers.envFrom.configMapRef.optional",
          "spec.template.spec.ephemeralContainers.envFrom.prefix",
          "spec.template.spec.ephemeralContainers.targetContainerName",
          "spec.template.spec.ephemeralContainers.volumeDevices.name",
          "spec.template.spec.ephemeralContainers.volumeDevices.devicePath",
          "spec.template.spec.ephemeralContainers.securityContext.procMount",
          "spec.template.spec.ephemeralContainers.securityContext.readOnlyRootFilesystem",
          "spec.template.spec.ephemeralContainers.securityContext.seccompProfile.type",
          "spec.template.spec.ephemeralContainers.securityContext.seccompProfile.localhostProfile",
          "spec.template.spec.ephemeralContainers.securityContext.windowsOptions.runAsUserName",
          "spec.template.spec.ephemeralContainers.securityContext.windowsOptions.gmsaCredentialSpecName",
          "spec.template.spec.ephemeralContainers.securityContext.windowsOptions.gmsaCredentialSpec",
          "spec.template.spec.ephemeralContainers.securityContext.runAsUser",
          "spec.template.spec.ephemeralContainers.securityContext.allowPrivilegeEscalation",
          "spec.template.spec.ephemeralContainers.securityContext.privileged",
          "spec.template.spec.ephemeralContainers.securityContext.capabilities.drop",
          "spec.template.spec.ephemeralContainers.securityContext.capabilities.add",
          "spec.template.spec.ephemeralContainers.securityContext.runAsNonRoot",
          "spec.template.spec.ephemeralContainers.securityContext.seLinuxOptions.user",
          "spec.template.spec.ephemeralContainers.securityContext.seLinuxOptions.level",
          "spec.template.spec.ephemeralContainers.securityContext.seLinuxOptions.role",
          "spec.template.spec.ephemeralContainers.securityContext.seLinuxOptions.type",
          "spec.template.spec.ephemeralContainers.securityContext.runAsGroup",
          "spec.template.spec.ephemeralContainers.resources.limits.cupidatat",
          "spec.template.spec.ephemeralContainers.resources.requests.adipisicing_",
          "spec.template.spec.ephemeralContainers.resources.requests.irure_a",
          "spec.template.spec.ephemeralContainers.resources.requests.eta",
          "spec.template.spec.ephemeralContainers.volumeMounts.subPathExpr",
          "spec.template.spec.ephemeralContainers.volumeMounts.readOnly",
          "spec.template.spec.ephemeralContainers.volumeMounts.name",
          "spec.template.spec.ephemeralContainers.volumeMounts.subPath",
          "spec.template.spec.ephemeralContainers.volumeMounts.mountPropagation",
          "spec.template.spec.ephemeralContainers.volumeMounts.mountPath",
          "spec.template.spec.ephemeralContainers.terminationMessagePolicy",
          "spec.template.spec.ephemeralContainers.args",
          "spec.template.spec.ephemeralContainers.stdin",
          "spec.template.spec.ephemeralContainers.livenessProbe.timeoutSeconds",
          "spec.template.spec.ephemeralContainers.livenessProbe.periodSeconds",
          "spec.template.spec.ephemeralContainers.livenessProbe.exec.command",
          "spec.template.spec.ephemeralContainers.livenessProbe.exec.nostrudd",
          "spec.template.spec.ephemeralContainers.livenessProbe.exec.mollit",
          "spec.template.spec.ephemeralContainers.livenessProbe.failureThreshold",
          "spec.template.spec.ephemeralContainers.livenessProbe.httpGet.path",
          "spec.template.spec.ephemeralContainers.livenessProbe.httpGet.httpHeaders.name",
          "spec.template.spec.ephemeralContainers.livenessProbe.httpGet.httpHeaders.value",
          "spec.template.spec.ephemeralContainers.livenessProbe.httpGet.scheme",
          "spec.template.spec.ephemeralContainers.livenessProbe.httpGet.port.in",
          "spec.template.spec.ephemeralContainers.livenessProbe.httpGet.port.eiusmod",
          "spec.template.spec.ephemeralContainers.livenessProbe.httpGet.host",
          "spec.template.spec.ephemeralContainers.livenessProbe.initialDelaySeconds",
          "spec.template.spec.ephemeralContainers.livenessProbe.successThreshold",
          "spec.template.spec.ephemeralContainers.livenessProbe.tcpSocket.port.laboru",
          "spec.template.spec.ephemeralContainers.livenessProbe.tcpSocket.port.in_",
          "spec.template.spec.ephemeralContainers.livenessProbe.tcpSocket.host",
          "spec.template.spec.ephemeralContainers.stdinOnce",
          "spec.template.spec.ephemeralContainers.terminationMessagePath",
          "spec.template.spec.ephemeralContainers.tty",
          "spec.template.spec.ephemeralContainers.readinessProbe.exec.command",
          "spec.template.spec.ephemeralContainers.readinessProbe.exec.anim_d",
          "spec.template.spec.ephemeralContainers.readinessProbe.tcpSocket.host",
          "spec.template.spec.ephemeralContainers.readinessProbe.tcpSocket.port.sit",
          "spec.template.spec.ephemeralContainers.readinessProbe.tcpSocket.port.anim_",
          "spec.template.spec.ephemeralContainers.readinessProbe.tcpSocket.port.veli",
          "spec.template.spec.ephemeralContainers.readinessProbe.successThreshold",
          "spec.template.spec.ephemeralContainers.readinessProbe.httpGet.host",
          "spec.template.spec.ephemeralContainers.readinessProbe.httpGet.port.culpa__e",
          "spec.template.spec.ephemeralContainers.readinessProbe.httpGet.httpHeaders.name",
          "spec.template.spec.ephemeralContainers.readinessProbe.httpGet.httpHeaders.value",
          "spec.template.spec.ephemeralContainers.readinessProbe.httpGet.path",
          "spec.template.spec.ephemeralContainers.readinessProbe.httpGet.scheme",
          "spec.template.spec.ephemeralContainers.readinessProbe.periodSeconds",
          "spec.template.spec.ephemeralContainers.readinessProbe.timeoutSeconds",
          "spec.template.spec.ephemeralContainers.readinessProbe.initialDelaySeconds",
          "spec.template.spec.ephemeralContainers.readinessProbe.failureThreshold",
          "spec.template.spec.ephemeralContainers.workingDir",
          "spec.template.spec.ephemeralContainers.name",
          "spec.template.spec.ephemeralContainers.startupProbe.exec.command",
          "spec.template.spec.ephemeralContainers.startupProbe.exec.in",
          "spec.template.spec.ephemeralContainers.startupProbe.failureThreshold",
          "spec.template.spec.ephemeralContainers.startupProbe.timeoutSeconds",
          "spec.template.spec.ephemeralContainers.startupProbe.httpGet.httpHeaders.value",
          "spec.template.spec.ephemeralContainers.startupProbe.httpGet.httpHeaders.name",
          "spec.template.spec.ephemeralContainers.startupProbe.httpGet.host",
          "spec.template.spec.ephemeralContainers.startupProbe.httpGet.scheme",
          "spec.template.spec.ephemeralContainers.startupProbe.httpGet.path",
          "spec.template.spec.ephemeralContainers.startupProbe.httpGet.port.laborum_c",
          "spec.template.spec.ephemeralContainers.startupProbe.tcpSocket.host",
          "spec.template.spec.ephemeralContainers.startupProbe.tcpSocket.port.culp",
          "spec.template.spec.ephemeralContainers.startupProbe.tcpSocket.port.quis",
          "spec.template.spec.ephemeralContainers.startupProbe.tcpSocket.port.eub",
          "spec.template.spec.ephemeralContainers.startupProbe.tcpSocket.port.culpa_b",
          "spec.template.spec.ephemeralContainers.startupProbe.tcpSocket.port.id",
          "spec.template.spec.ephemeralContainers.startupProbe.initialDelaySeconds",
          "spec.template.spec.ephemeralContainers.startupProbe.successThreshold",
          "spec.template.spec.ephemeralContainers.startupProbe.periodSeconds",
          "spec.template.spec.tolerations.tolerationSeconds",
          "spec.template.spec.tolerations.operator",
          "spec.template.spec.tolerations.key",
          "spec.template.spec.tolerations.value",
          "spec.template.spec.tolerations.effect",
          "spec.template.spec.imagePullSecrets.name",
          "spec.template.spec.imagePullSecrets.dolor_e",
          "spec.template.spec.terminationGracePeriodSeconds",
          "spec.template.spec.dnsPolicy",
          "spec.template.spec.restartPolicy",
          "spec.template.spec.runtimeClassName",
          "spec.template.spec.priorityClassName",
          "spec.template.spec.topologySpreadConstraints.labelSelector.matchExpressions.values",
          "spec.template.spec.topologySpreadConstraints.labelSelector.matchExpressions.key",
          "spec.template.spec.topologySpreadConstraints.labelSelector.matchExpressions.operator",
          "spec.template.spec.topologySpreadConstraints.labelSelector.matchLabels.culpa",
          "spec.template.spec.topologySpreadConstraints.labelSelector.matchLabels.sint_",
          "spec.template.spec.topologySpreadConstraints.labelSelector.matchLabels.proident",
          "spec.template.spec.topologySpreadConstraints.maxSkew",
          "spec.template.spec.topologySpreadConstraints.topologyKey",
          "spec.template.spec.topologySpreadConstraints.whenUnsatisfiable",
          "spec.template.spec.automountServiceAccountToken",
          "spec.template.spec.securityContext.runAsNonRoot",
          "spec.template.spec.securityContext.sysctls.value",
          "spec.template.spec.securityContext.sysctls.name",
          "spec.template.spec.securityContext.seccompProfile.localhostProfile",
          "spec.template.spec.securityContext.seccompProfile.type",
          "spec.template.spec.securityContext.fsGroupChangePolicy",
          "spec.template.spec.securityContext.windowsOptions.gmsaCredentialSpec",
          "spec.template.spec.securityContext.windowsOptions.gmsaCredentialSpecName",
          "spec.template.spec.securityContext.windowsOptions.runAsUserName",
          "spec.template.spec.securityContext.supplementalGroups",
          "spec.template.spec.securityContext.seLinuxOptions.user",
          "spec.template.spec.securityContext.seLinuxOptions.type",
          "spec.template.spec.securityContext.seLinuxOptions.level",
          "spec.template.spec.securityContext.seLinuxOptions.role",
          "spec.template.spec.securityContext.runAsUser",
          "spec.template.spec.securityContext.fsGroup",
          "spec.template.spec.securityContext.runAsGroup",
          "spec.template.spec.initContainers.envFrom.secretRef.name",
          "spec.template.spec.initContainers.envFrom.secretRef.optional",
          "spec.template.spec.initContainers.envFrom.prefix",
          "spec.template.spec.initContainers.envFrom.configMapRef.optional",
          "spec.template.spec.initContainers.envFrom.configMapRef.name",
          "spec.template.spec.initContainers.stdinOnce",
          "spec.template.spec.initContainers.terminationMessagePath",
          "spec.template.spec.initContainers.env.name",
          "spec.template.spec.initContainers.env.value",
          "spec.template.spec.initContainers.env.valueFrom.resourceFieldRef.containerName",
          "spec.template.spec.initContainers.env.valueFrom.resourceFieldRef.resource",
          "spec.template.spec.initContainers.env.valueFrom.resourceFieldRef.divisor",
          "spec.template.spec.initContainers.env.valueFrom.configMapKeyRef.optional",
          "spec.template.spec.initContainers.env.valueFrom.configMapKeyRef.name",
          "spec.template.spec.initContainers.env.valueFrom.configMapKeyRef.key",
          "spec.template.spec.initContainers.env.valueFrom.secretKeyRef.key",
          "spec.template.spec.initContainers.env.valueFrom.secretKeyRef.optional",
          "spec.template.spec.initContainers.env.valueFrom.secretKeyRef.name",
          "spec.template.spec.initContainers.env.valueFrom.fieldRef.apiVersion",
          "spec.template.spec.initContainers.env.valueFrom.fieldRef.fieldPath",
          "spec.template.spec.initContainers.imagePullPolicy",
          "spec.template.spec.initContainers.securityContext.capabilities.add",
          "spec.template.spec.initContainers.securityContext.capabilities.drop",
          "spec.template.spec.initContainers.securityContext.procMount",
          "spec.template.spec.initContainers.securityContext.readOnlyRootFilesystem",
          "spec.template.spec.initContainers.securityContext.windowsOptions.gmsaCredentialSpecName",
          "spec.template.spec.initContainers.securityContext.windowsOptions.gmsaCredentialSpec",
          "spec.template.spec.initContainers.securityContext.windowsOptions.runAsUserName",
          "spec.template.spec.initContainers.securityContext.runAsNonRoot",
          "spec.template.spec.initContainers.securityContext.seLinuxOptions.level",
          "spec.template.spec.initContainers.securityContext.seLinuxOptions.type",
          "spec.template.spec.initContainers.securityContext.seLinuxOptions.user",
          "spec.template.spec.initContainers.securityContext.seLinuxOptions.role",
          "spec.template.spec.initContainers.securityContext.privileged",
          "spec.template.spec.initContainers.securityContext.runAsGroup",
          "spec.template.spec.initContainers.securityContext.runAsUser",
          "spec.template.spec.initContainers.securityContext.seccompProfile.localhostProfile",
          "spec.template.spec.initContainers.securityContext.seccompProfile.type",
          "spec.template.spec.initContainers.securityContext.allowPrivilegeEscalation",
          "spec.template.spec.initContainers.workingDir",
          "spec.template.spec.initContainers.ports.hostPort",
          "spec.template.spec.initContainers.ports.name",
          "spec.template.spec.initContainers.ports.hostIP",
          "spec.template.spec.initContainers.ports.protocol",
          "spec.template.spec.initContainers.ports.containerPort",
          "spec.template.spec.initContainers.name",
          "spec.template.spec.initContainers.args",
          "spec.template.spec.initContainers.readinessProbe.timeoutSeconds",
          "spec.template.spec.initContainers.readinessProbe.initialDelaySeconds",
          "spec.template.spec.initContainers.readinessProbe.periodSeconds",
          "spec.template.spec.initContainers.readinessProbe.exec.command",
          "spec.template.spec.initContainers.readinessProbe.exec.null",
          "spec.template.spec.initContainers.readinessProbe.tcpSocket.port.Uta",
          "spec.template.spec.initContainers.readinessProbe.tcpSocket.host",
          "spec.template.spec.initContainers.readinessProbe.failureThreshold",
          "spec.template.spec.initContainers.readinessProbe.successThreshold",
          "spec.template.spec.initContainers.readinessProbe.httpGet.scheme",
          "spec.template.spec.initContainers.readinessProbe.httpGet.path",
          "spec.template.spec.initContainers.readinessProbe.httpGet.port.dolor_c",
          "spec.template.spec.initContainers.readinessProbe.httpGet.httpHeaders.name",
          "spec.template.spec.initContainers.readinessProbe.httpGet.httpHeaders.value",
          "spec.template.spec.initContainers.readinessProbe.httpGet.host",
          "spec.template.spec.initContainers.stdin",
          "spec.template.spec.initContainers.volumeDevices.devicePath",
          "spec.template.spec.initContainers.volumeDevices.name",
          "spec.template.spec.initContainers.image",
          "spec.template.spec.initContainers.livenessProbe.tcpSocket.port.commodo_d",
          "spec.template.spec.initContainers.livenessProbe.tcpSocket.port.cillume",
          "spec.template.spec.initContainers.livenessProbe.tcpSocket.host",
          "spec.template.spec.initContainers.livenessProbe.successThreshold",
          "spec.template.spec.initContainers.livenessProbe.periodSeconds",
          "spec.template.spec.initContainers.livenessProbe.timeoutSeconds",
          "spec.template.spec.initContainers.livenessProbe.httpGet.host",
          "spec.template.spec.initContainers.livenessProbe.httpGet.port.ea",
          "spec.template.spec.initContainers.livenessProbe.httpGet.port.sit_",
          "spec.template.spec.initContainers.livenessProbe.httpGet.port.ad_cce",
          "spec.template.spec.initContainers.livenessProbe.httpGet.port.nostrudc",
          "spec.template.spec.initContainers.livenessProbe.httpGet.port.offici",
          "spec.template.spec.initContainers.livenessProbe.httpGet.scheme",
          "spec.template.spec.initContainers.livenessProbe.httpGet.path",
          "spec.template.spec.initContainers.livenessProbe.httpGet.httpHeaders.value",
          "spec.template.spec.initContainers.livenessProbe.httpGet.httpHeaders.name",
          "spec.template.spec.initContainers.livenessProbe.exec.command",
          "spec.template.spec.initContainers.livenessProbe.exec.non__",
          "spec.template.spec.initContainers.livenessProbe.initialDelaySeconds",
          "spec.template.spec.initContainers.livenessProbe.failureThreshold",
          "spec.template.spec.initContainers.resources.limits.voluptate",
          "spec.template.spec.initContainers.resources.limits.consectetur__",
          "spec.template.spec.initContainers.resources.requests.occaecat_a",
          "spec.template.spec.initContainers.tty",
          "spec.template.spec.initContainers.command",
          "spec.template.spec.initContainers.lifecycle.postStart.tcpSocket.port.sin",
          "spec.template.spec.initContainers.lifecycle.postStart.tcpSocket.host",
          "spec.template.spec.initContainers.lifecycle.postStart.exec.command",
          "spec.template.spec.initContainers.lifecycle.postStart.httpGet.httpHeaders.name",
          "spec.template.spec.initContainers.lifecycle.postStart.httpGet.httpHeaders.value",
          "spec.template.spec.initContainers.lifecycle.postStart.httpGet.scheme",
          "spec.template.spec.initContainers.lifecycle.postStart.httpGet.host",
          "spec.template.spec.initContainers.lifecycle.postStart.httpGet.port.sintca",
          "spec.template.spec.initContainers.lifecycle.postStart.httpGet.path",
          "spec.template.spec.initContainers.lifecycle.preStop.httpGet.host",
          "spec.template.spec.initContainers.lifecycle.preStop.httpGet.path",
          "spec.template.spec.initContainers.lifecycle.preStop.httpGet.httpHeaders.value",
          "spec.template.spec.initContainers.lifecycle.preStop.httpGet.httpHeaders.name",
          "spec.template.spec.initContainers.lifecycle.preStop.httpGet.port.esse",
          "spec.template.spec.initContainers.lifecycle.preStop.httpGet.scheme",
          "spec.template.spec.initContainers.lifecycle.preStop.tcpSocket.port.incididunt_a",
          "spec.template.spec.initContainers.lifecycle.preStop.tcpSocket.host",
          "spec.template.spec.initContainers.lifecycle.preStop.exec.command",
          "spec.template.spec.initContainers.lifecycle.preStop.exec.fugiat",
          "spec.template.spec.initContainers.lifecycle.preStop.exec.proident_d",
          "spec.template.spec.initContainers.lifecycle.preStop.exec.eada",
          "spec.template.spec.initContainers.startupProbe.successThreshold",
          "spec.template.spec.initContainers.startupProbe.failureThreshold",
          "spec.template.spec.initContainers.startupProbe.timeoutSeconds",
          "spec.template.spec.initContainers.startupProbe.periodSeconds",
          "spec.template.spec.initContainers.startupProbe.tcpSocket.host",
          "spec.template.spec.initContainers.startupProbe.tcpSocket.port.commodo_",
          "spec.template.spec.initContainers.startupProbe.httpGet.port.nisi_",
          "spec.template.spec.initContainers.startupProbe.httpGet.scheme",
          "spec.template.spec.initContainers.startupProbe.httpGet.host",
          "spec.template.spec.initContainers.startupProbe.httpGet.httpHeaders.value",
          "spec.template.spec.initContainers.startupProbe.httpGet.httpHeaders.name",
          "spec.template.spec.initContainers.startupProbe.httpGet.path",
          "spec.template.spec.initContainers.startupProbe.exec.command",
          "spec.template.spec.initContainers.startupProbe.initialDelaySeconds",
          "spec.template.spec.initContainers.terminationMessagePolicy",
          "spec.template.spec.initContainers.volumeMounts.mountPropagation",
          "spec.template.spec.initContainers.volumeMounts.mountPath",
          "spec.template.spec.initContainers.volumeMounts.subPathExpr",
          "spec.template.spec.initContainers.volumeMounts.name",
          "spec.template.spec.initContainers.volumeMounts.subPath",
          "spec.template.spec.initContainers.volumeMounts.readOnly",
          "spec.template.spec.activeDeadlineSeconds",
          "spec.template.spec.setHostnameAsFQDN",
          "spec.template.spec.priority",
          "spec.template.spec.nodeSelector.Excepteur_",
          "spec.template.spec.nodeSelector.qui",
          "spec.template.spec.nodeSelector.dolore_",
          "spec.template.spec.nodeSelector.in_",
          "spec.template.spec.nodeSelector.consectetu",
          "spec.template.spec.subdomain",
          "spec.template.spec.preemptionPolicy",
          "spec.template.spec.hostAliases.ip",
          "spec.template.spec.hostAliases.hostnames",
          "spec.template.spec.hostIPC",
          "spec.template.spec.dnsConfig.searches",
          "spec.template.spec.dnsConfig.nameservers",
          "spec.template.spec.dnsConfig.options.value",
          "spec.template.spec.dnsConfig.options.name",
          "spec.template.spec.overhead.sed",
          "spec.template.spec.overhead.incididunt",
          "spec.template.spec.overhead.anim_a",
          "spec.template.spec.overhead.ina",
          "spec.template.spec.serviceAccount",
          "spec.template.metadata.uid",
          "spec.template.metadata.deletionTimestamp",
          "spec.template.metadata.labels.labore_b",
          "spec.template.metadata.labels.in_",
          "spec.template.metadata.generation",
          "spec.template.metadata.generateName",
          "spec.template.metadata.annotations.esse",
          "spec.template.metadata.name",
          "spec.template.metadata.creationTimestamp",
          "spec.template.metadata.finalizers",
          "spec.template.metadata.ownerReferences.apiVersion",
          "spec.template.metadata.ownerReferences.kind",
          "spec.template.metadata.ownerReferences.controller",
          "spec.template.metadata.ownerReferences.uid",
          "spec.template.metadata.ownerReferences.name",
          "spec.template.metadata.ownerReferences.blockOwnerDeletion",
          "spec.template.metadata.namespace",
          "spec.template.metadata.deletionGracePeriodSeconds",
          "spec.template.metadata.resourceVersion",
          "spec.template.metadata.selfLink",
          "spec.template.metadata.clusterName",
          "spec.template.metadata.managedFields.apiVersion",
          "spec.template.metadata.managedFields.operation",
          "spec.template.metadata.managedFields.fieldsVut",
          "spec.template.metadata.managedFields.fieldsVmagnac",
          "spec.template.metadata.managedFields.fieldsVsint",
          "spec.template.metadata.managedFields.manager",
          "spec.template.metadata.managedFields.fieldsType",
          "spec.template.metadata.managedFields.time",
          "spec.minReadySeconds"
        ],
        "optional": []
      },
      "rowType": "API",
      "params": {
        "name": "required",
        "namespace": "required",
        "exact": "<optional>",
        "_export": "<optional>"
      },
      "updatedAt": "2021-03-26T13:07:54.587Z",
      "_id": "a7e41891",
      "input": {
        "required": ["name", "namespace"],
        "optional": ["pretty", "exact", "_export", "options"]
      },
      "operationType": "DISCOVER",
      "areValidParams": false,
      "displayService": "Apps",
      "addonCount": 2,
      "relationCount": 1,
      "addonsAndRelations": [
        {
          "id": "1229",
          "cloudProvider": "AWS",
          "method": "describeInstanceAttributes",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_ATTRIBUTES",
          "type": "ADDON",
          "diff": "+204 -30"
        },
        {
          "id": "1230",
          "cloudProvider": "AWS",
          "method": "describeInstanceType",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "ADDON",
          "diff": "-"
        },
        {
          "id": "1231",
          "cloudProvider": "AWS",
          "method": "describeIns",
          "service": "EC2",
          "resourceType": "EC2_INSTANCE_TYPE",
          "type": "RELATION",
          "diff": "+3 -10"
        }
      ],
      "diffCount": "+347 -18"
    }
  ]
 }
